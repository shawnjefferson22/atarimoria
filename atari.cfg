FEATURES {
    STARTADDRESS: default = $0400;
}
SYMBOLS {
    __STACKSIZE__: type = weak, value $0500;        # stack
    __RESERVED_MEMORY__: type = weak, value = $0000;

}
MEMORY {
    ZP:      start = $0082, size = $007E, type = rw, define = yes;
    LIBRAM:  start = %S,    size = $2700, define = yes;						# start=$400  size=$2600
    BANKRAM: start = $2B00, size = $1000, define = yes;						# start=$2B00 size=$1000
    STACK:   start = $4000 - __STACKSIZE__, size = __STACKSIZE__, define = yes;			# start=$3B00 size=$500
    
    OSRAM1:  start = $C000, size = $0FFF, define = yes;
    OSRAM2:  start = $D800, size = $27FA, define = yes;

    MONSTERS: start = $4000, size = $6000, type = rw, define = yes;
    OBJECTS:  start = $4000, size = $6000, type = rw, define = yes;
    SPELLS:   start = $4000, size = $6000, type = rw, define = yes;
    MAGIC:    start = $4000, size = $6000, type = rw, define = yes;
    CAVE:     start = $4000, size = $6000, type = rw, define = yes;
    GEN:      start = $4000, size = $6000, type = rw, define = yes;

    CART0:    start = $A000, size = $2000, type = ro, fill = yes, fillval = $00, file = %O;
    CART1:    start = $A000, size = $4000, type = ro, fill = yes, fillval = $01, file = %O;	# fills two banks
    #CART2:    start = $A000, size = $2000, type = ro, fill = yes, fillval = $02, file = %O;
    CART3:    start = $A000, size = $6000, type = ro, fill = yes, fillval = $03, file = %O;
    #CART4:    start = $A000, size = $2000, type = ro, fill = yes, fillval = $04, file = %O;	# fills three banks
    #CART5:    start = $A000, size = $2000, type = ro, fill = yes, fillval = $05, file = %O;
    CART6:    start = $A000, size = $6000, type = ro, fill = yes, fillval = $06, file = %O;	# fills three banks
    #CART7:    start = $A000, size = $2000, type = ro, fill = yes, fillval = $07, file = %O;
    #CART8:    start = $A000, size = $2000, type = ro, fill = yes, fillval = $08, file = %O;
    CART9:    start = $A000, size = $2000, type = ro, fill = yes, fillval = $09, file = %O;
    CARTA:    start = $A000, size = $2000, type = ro, fill = yes, fillval = $0A, file = %O;
    CARTB:    start = $A000, size = $2000, type = ro, fill = yes, fillval = $0B, file = %O;
    CARTC:    start = $A000, size = $2000, type = ro, fill = yes, fillval = $0C, file = %O;
    CARTD:    start = $A000, size = $2000, type = ro, fill = yes, fillval = $0D, file = %O;
    CARTE:    start = $A000, size = $2000, type = ro, fill = yes, fillval = $0E, file = %O;
    CARTF:    start = $A000, size = $2000, type = ro, fill = yes, fillval = $0F, file = %O;
    CART10:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $10, file = %O;
    CART11:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $11, file = %O;
    CART12:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $12, file = %O;
    CART13:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $13, file = %O;
    CART14:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $14, file = %O;
    CART15:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $15, file = %O;
    CART16:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $16, file = %O;
    CART17:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $17, file = %O;
    CART18:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $18, file = %O;
    CART19:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $19, file = %O;
    CART1A:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $1A, file = %O;
    CART1B:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $1B, file = %O;
    CART1C:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $1C, file = %O;
    CART1D:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $1D, file = %O;
    CART1E:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $1E, file = %O;
    CART1F:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $1F, file = %O;
    CART20:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $20, file = %O;
    CART21:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $21, file = %O;
    CART22:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $22, file = %O;
    CART23:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $23, file = %O;
    CART24:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $24, file = %O;
    CART25:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $25, file = %O;
    CART26:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $26, file = %O;
    CART27:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $27, file = %O;
    CART28:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $28, file = %O;
    CART29:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $29, file = %O;
    CART2A:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $2A, file = %O;
    CART2B:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $2B, file = %O;
    CART2C:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $2C, file = %O;
    CART2D:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $2D, file = %O;
    CART2E:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $2E, file = %O;
    CART2F:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $2F, file = %O;
    CART30:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $30, file = %O;
    CART31:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $31, file = %O;
    CART32:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $32, file = %O;
    CART33:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $33, file = %O;
    CART34:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $34, file = %O;
    CART35:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $35, file = %O;
    CART36:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $36, file = %O;
    CART37:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $37, file = %O;
    CART38:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $38, file = %O;
    CART39:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $39, file = %O;
    CART3A:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $3A, file = %O;
    CART3B:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $3B, file = %O;
    CART3C:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $3C, file = %O;
    CART3D:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $3D, file = %O;
    CART3E:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $3E, file = %O;
    CART3F:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $3F, file = %O;
    CART40:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $40, file = %O;
    CART41:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $41, file = %O;
    CART42:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $42, file = %O;
    CART43:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $43, file = %O;
    CART44:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $44, file = %O;
    CART45:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $45, file = %O;
    CART46:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $46, file = %O;
    CART47:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $47, file = %O;
    CART48:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $48, file = %O;
    CART49:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $49, file = %O;
    CART4A:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $4A, file = %O;
    CART4B:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $4B, file = %O;
    CART4C:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $4C, file = %O;
    CART4D:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $4D, file = %O;
    CART4E:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $4E, file = %O;
    CART4F:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $4F, file = %O;
    CART50:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $50, file = %O;
    CART51:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $51, file = %O;
    CART52:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $52, file = %O;
    CART53:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $53, file = %O;
    CART54:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $54, file = %O;
    CART55:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $55, file = %O;
    CART56:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $56, file = %O;
    CART57:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $57, file = %O;
    CART58:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $58, file = %O;
    CART59:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $59, file = %O;
    CART5A:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $5A, file = %O;
    CART5B:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $5B, file = %O;
    CART5C:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $5C, file = %O;
    CART5D:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $5D, file = %O;
    CART5E:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $5E, file = %O;
    CART5F:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $5F, file = %O;
    CART60:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $00, file = %O;	# charsave, fill with zero
    CART61:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $00, file = %O;	#	|	
    CART62:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $00, file = %O;	#	|
    CART63:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $63, file = %O;
    CART64:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $64, file = %O;
    CART65:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $65, file = %O;
    CART66:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $66, file = %O;
    CART67:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $00, file = %O;	# monster memory, fill with zero
    CART68:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $00, file = %O;	# gamesave, fill with zero
    CART69:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $00, file = %O;	#	|
    CART6A:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $00, file = %O;	#	|
    CART6B:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $00, file = %O;	#	|
    CART6C:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $00, file = %O;	#	|
    CART6D:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $6D, file = %O;
    CART6E:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $6E, file = %O;
    CART6F:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $6F, file = %O;
    CART70:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $00, file = %O;	# highscores, fill with zero
    CART71:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $71, file = %O;
    CART72:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $72, file = %O;
    CART73:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $73, file = %O;
    CART74:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $74, file = %O;
    CART75:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $75, file = %O;
    CART76:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $76, file = %O;
    CART77:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $77, file = %O;	
    CART78:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $78, file = %O;
    CART79:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $79, file = %O;
    CART7A:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $7A, file = %O;
    CART7B:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $7B, file = %O;
    CART7C:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $7C, file = %O;
    CART7D:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $7D, file = %O;
    CART7E:   start = $A000, size = $2000, type = ro, fill = yes, fillval = $7E, file = %O;
    CART7F:   start = $A000, size = $1FFA, type = ro, fill = yes, fillval = $7F, file = %O;
    VECTORS:  start = $BFFA, size = 6, type = ro, file = %O;
}
SEGMENTS {
    INIT:     load = CART7F, type = ro, define = yes, optional = yes;
    STARTUP:  load = CART7F, type = ro, define = yes;
    ONCE:     load = CART7F, type = ro,               optional = yes;
    LOWCODE:  load = CART7F, type = ro, define = yes, optional = yes;
    CODE:     load = CART7F, run = LIBRAM, type = ro, define = yes;
    RODATA:   load = CART7F, run = LIBRAM, type = ro, define = yes;
    DATA:     load = CART7F, run = LIBRAM, type = rw, define = yes;
    BCODE:    load = CART7E, run = BANKRAM, type = rw, define = yes;	  # banking code in low RAM
    BCODE1:   load = CART7D, run = OSRAM1, type = rw, define = yes;	  # banking code under OS
    BCODE2:   load = CART7C, run = OSRAM2, type = rw, define = yes;	  # banking code under OS	
    BSS:      load = LIBRAM, type = bss, define = yes;
    HEAP:     load = LIBRAM, type = bss, optional = yes; # must sit just below stack

    CAVERAM:  load = CAVE, type = bss, define = yes;                      # Main CAVE structures
    GENRAM:   load = GEN, type = bss, define = yes;                       # structures used in Generate.c functions 

    #BANK0:       load = CART0, run = CART0, type = ro, define = yes;      # BANK0   $00000 unused (needed for newer Atarimax type) 	
    MONSTERBANK:  load = CART1, run = MONSTERS, type = ro, define = yes;   # BANK1-2 $02000 Monster list/structures
    OBJECTBANK:   load = CART3, run = OBJECTS, type = ro, define = yes;    # BANK3-5 $06000 Object list/structures
    SPELLBANK:    load = CART6, run = SPELLS, type = ro, define = yes;     # BANK6-8 $0C000 Spell data/structures, player data/structures
    MAGICBANK:    load = CART9, run = MAGIC, type = ro, define = yes;      # BANK9   $10000 Potions/Wands/Staff stuff
    INITBANK:     load = CARTA, run = CARTA, type = ro, define = yes;      # BANKA   $12000 Init code/rodata
    CREATE1BANK:  load = CARTB, run = CARTB, type = ro, define = yes;      # BANKB   $14000 Create1 code/rodata
    CREATE2BANK:  load = CARTC, run = CARTC, type = ro, define = yes;      # BANKC   $16000 Create 2 code/rodata (modify_stats, calc_stuff)
    PRINTBANK:    load = CARTD, run = CARTD, type = ro, define = yes;      # BANKD   $18000 Print (VBXE/IO bank. put_misc3 character print) 
    CHPRINT1BANK: load = CARTE, run = CARTE, type = ro, define = yes;      # BANKE   $1A000 Print1 (Character Print stuff)
    GEN1BANK:     load = CARTF, run = CARTF, type = ro, define = yes;      # BANKF   $1C000 Generate1 code/rodata
    GEN2BANK:     load = CART10, run = CART10, type = ro, define = yes;    # BANK10  $1E000 Generate2 code/rodata (init, town_gen)
    GEN3BANK:     load = CART11, run = CART11, type = ro, define = yes;    # BANK11  $20000 Generate3 code/rodata (build_type2 & 3)
    MON1BANK:     load = CART12, run = CART12, type = ro, define = yes;    # BANK12  $22000 Monster code/rodata (alloc_monster) 
    MON2BANK:     load = CART13, run = CART13, type = ro, define = yes;    # BANK13  $24000 Monster code (creatures)
    MON3BANK:     load = CART14, run = CART14, type = ro, define = yes;    # BANK14  $26000 monster code (make_attack) 	
    MON4BANK:     load = CART15, run = CART15, type = ro, define = yes;    # BANK15  $28000 monster code (multiply_monster, monster_cast_spell)
    PLACE1BANK:   load = CART16, run = CART16, type = ro, define = yes;    # BANK16  $2A000 cave place_xxxx functions 
    HELP1BANK:    load = CART17, run = CART17, type = ro, define = yes;    # BANK17  $2C000 help functions
    STORE1BANK:   load = CART18, run = CART18, type = ro, define = yes;    # BANK18  $2E000 store1 code (store_maint) 
    STORE2BANK:   load = CART19, run = CART19, type = ro, define = yes;    # BANK19  $30000 store2 code (store display, purchase_item)
    STORE3BANK:   load = CART1A, run = CART1A, type = ro, define = yes;    # BANK1A  $32000 store3 code (interaction, haggling)
    OBJDESBANK:   load = CART1B, run = CART1B, type = ro, define = yes;    # BANK1B  $34000 object description code
    INVEN1BANK:   load = CART1C, run = CART1C, type = ro, define = yes;    # BANK1C  $36000 inventory1 code (get item)
    INVEN2BANK:   load = CART1D, run = CART1D, type = ro, define = yes;    # BANK1D  $38000 inventory2 code (inven_command, inven_screen)
    DUNGEON1BANK: load = CART1E, run = CART1E, type = ro, define = yes;    # BANK1E  $3A000 dungeon1 code (dungeon, do_command, tunnel)
    DUNGEON2BANK: load = CART1F, run = CART1F, type = ro, define = yes;    # BANK1F  $3C000 dungeon2 code (check flags)
    DUNGEON3BANK: load = CART20, run = CART20, type = ro, define = yes;    # BANK20  $3E000 dungeon3 code (move_char, search)
    DUNGEON4BANK: load = CART21, run = CART21, type = ro, define = yes;    # BANK21  $40000 dungeon4 code (rest, up/down, open, jam, refill lamp)
    DUNGEON5BANK: load = CART22, run = CART22, type = ro, define = yes;    # BANK22  $42000 dungone5 code (hit_trap, carry, teleport, scribe)
    DUNGEON6BANK: load = CART23, run = CART23, type = ro, define = yes;    # BANK23  $44000 dungeon6 code (close, bash, chest_trap)
    DUNGEON7BANK: load = CART24, run = CART24, type = ro, define = yes;    # BANK24  $46000 dungeon7 code (throw
    DUNGEON8BANK: load = CART25, run = CART25, type = ro, define = yes;    # BANK25  $48000 dungeon8 code (py_attack
    MAGICT1BANK:  load = CART26, run = CART26, type = ro, define = yes;    # BANK26  $4A000 magic_treasure1 function
    MAGICT2BANK:  load = CART27, run = CART27, type = ro, define = yes;    # BANK27  $4C000 magic_treasure2 function
    POTIONBANK:   load = CART28, run = CART28, type = ro, define = yes;    # BANK28  $4E000 potion code (quaff)
    SCROLLBANK:   load = CART29, run = CART29, type = ro, define = yes;    # BANK29  $50000 scroll code (read_scroll)
    SPELLS1BANK:  load = CART2A, run = CART2A, type = ro, define = yes;    # BANK2A  $52000 spells code (used by potions, wands, scrolls, spells, prayers) 
    SPELLS2BANK:  load = CART2B, run = CART2B, type = ro, define = yes;    # BANK2B  $54000 spells code (used by potions, wands, scrolls, spells, prayers)
    SPELLS3BANK:  load = CART2C, run = CART2C, type = ro, define = yes;    # BANK2C  $56000 spells code (used by potions, wands, scrolls, spells, prayers)
    SPELLS4BANK:  load = CART2D, run = CART2D, type = ro, define = yes;    # BANK2D  $58000 spells code (used by potions, wands, scrolls, spells, prayers)
    DEATH1BANK:   load = CART2E, run = CART2E, type = ro, define = yes;    # BANK2E  $5A000 tombstone, highscores
    EAT1BANK:     load = CART2F, run = CART2F, type = ro, define = yes;    # BANK2F  $5C000 eat function
    MISC1BANK:    load = CART30, run = CART30, type = ro, define = yes;    # BANK30  $5E000 misc player code (check_strength)
    MISC2BANK:    load = CART31, run = CART31, type = ro, define = yes;    # BANK31  $60000 misc trap/spell code (corrode_gas, poison_gas, etc..)
    WIZARD1BANK:  load = CART32, run = CART32, type = ro, define = yes;    # BANK32  $62000 wizard mode functions
    WIZARD2BANK:  load = CART33, run = CART33, type = ro, define = yes;    # BANK3A  $64000 wizard mode, display_player
    #WANDBANK:     load = CART33, run = CART33, type = ro, define = yes;    # BANK33  $64000 wands (aim)
    STAFFSBANK:   load = CART34, run = CART34, type = ro, define = yes;    # BANK34  $66000 staffs (use)
    PRAYERBANK:   load = CART35, run = CART35, type = ro, define = yes;    # BANK35  $68000 prayers (pray)
    CASTBANK:     load = CART36, run = CART36, type = ro, define = yes;    # BANK36  $6A000 magic spells (cast)
    LOOKBANK:     load = CART37, run = CART37, type = ro, define = yes;    # BANK37  $6C000 look function
    RECALLBANK:   load = CART38, run = CART38, type = ro, define = yes;    # BANK38  $6E000 recall function
    MON5BANK:     load = CART39, run = CART39, type = ro, define = yes;    # BANK39  $70000 monster_death function
    #WIZARD2BANK:  load = CART3A, run = CART3A, type = ro, define = yes;    # BANK3A  $72000 wizard mode, display_player
    WANDBANK:     load = CART3A, run = CART3A, type = ro, define = yes;    # BANK33  $72000 wands (aim)
    GUILD1BANK:   load = CART3B, run = CART3B, type = ro, define = yes;    # BANK3B  $74000 guild code
    TAVERN1BANK:  load = CART3C, run = CART3C, type = ro, define = yes;    # BANK3C  $76000 tavern main code
    TAVERN2BANK:  load = CART3D, run = CART3D, type = ro, define = yes;    # BANK3D  $78000 tavern gossip code
    #BANK3E:      load = CART3E, run = CART3E, type = ro, define = yes;    # BANK3E
    QUEST1BANK:   load = CART3F, run = CART3F, type = ro, define = yes;    # BANK3F  $7C000 quest start/end code
    QUEST2BANK:   load = CART40, run = CART40, type = ro, define = yes;    # BANK40  $7E000 quest eval and display code
    #BANK41:      load = CART10, run = CART41, type = ro, define = yes;    # BANK10
    #BANK42:      load = CART10, run = CART42, type = ro, define = yes;    # BANK10
    #BANK43:      load = CART10, run = CART43, type = ro, define = yes;    # BANK10
    #BANK44:      load = CART10, run = CART44, type = ro, define = yes;    # BANK10
    #BANK45:      load = CART10, run = CART45, type = ro, define = yes;    # BANK10
    #BANK46:      load = CART10, run = CART46, type = ro, define = yes;    # BANK10
    #BANK47:      load = CART10, run = CART47, type = ro, define = yes;    # BANK10
    #BANK48:      load = CART10, run = CART48, type = ro, define = yes;    # BANK10
    #BANK49:      load = CART10, run = CART49, type = ro, define = yes;    # BANK10
    #BANK4A:      load = CART10, run = CART4A, type = ro, define = yes;    # BANK10
    #BANK4B:      load = CART10, run = CART4B, type = ro, define = yes;    # BANK10
    #BANK4C:      load = CART10, run = CART4C, type = ro, define = yes;    # BANK10
    #BANK4D:      load = CART10, run = CART4D, type = ro, define = yes;    # BANK10
    #BANK4E:      load = CART10, run = CART4E, type = ro, define = yes;    # BANK10
    #BANK4F:      load = CART10, run = CART4F, type = ro, define = yes;    # BANK10
    #BANK50:      load = CART10, run = CART50, type = ro, define = yes;    # BANK10 $A0000, flash sector 10
    #BANK51:      load = CART10, run = CART51, type = ro, define = yes;    # BANK10
    #BANK52:      load = CART10, run = CART52, type = ro, define = yes;    # BANK10
    #BANK53:      load = CART10, run = CART53, type = ro, define = yes;    # BANK10
    #BANK54:      load = CART10, run = CART54, type = ro, define = yes;    # BANK10
    #BANK55:      load = CART10, run = CART55, type = ro, define = yes;    # BANK10
    #BANK56:      load = CART10, run = CART56, type = ro, define = yes;    # BANK10
    #BANK57:      load = CART10, run = CART57, type = ro, define = yes;    # BANK10
    #BANK58:      load = CART58, run = CART58, type = ro, define = yes;    # BANK58 $B0000, flash sector 11
    #BANK59:      load = CART59, run = CART59, type = ro, define = yes;    # BANK10
    #BANK5A:      load = CART5A, run = CART5A, type = ro, define = yes;    # BANK10
    #BANK5B:      load = CART5B, run = CART5B, type = ro, define = yes;    # BANK10
    #BANK5C:      load = CART5C, run = CART5C, type = ro, define = yes;    # BANK10
    #BANK5D:      load = CART5D, run = CART5D, type = ro, define = yes;    # BANK10
    #BANK5E:      load = CART5E, run = CART5E, type = ro, define = yes;    # BANK10
    #BANK5F:      load = CART5F, run = CART5F, type = ro, define = yes;    # BANK10
    CHARSAVE0:    load = CART60, run = CART60, type = ro, define = yes;    # BANK60 $C0000 Character Save Area, flash sector 12
    CHARSAVE1:    load = CART61, run = CART61, type = ro, define = yes;    # BANK61 $C2000 py:396, i:1360, om: 800, assorted variables
    #CHARSAVE2:   load = CART62, run = CART62, type = ro, define = yes;    # BANK62 ***    stores: 6408
    #CHARSAVE3:   load = CART63, run = CART63, type = ro, define = yes;    # BANK63 ***    (unused)  
    #CHARSAVE4:   load = CART64, run = CART64, type = ro, define = yes;    # BANK64 ***    (unused)  
    #CHARSAVE5:   load = CART65, run = CART65, type = ro, define = yes;    # BANK65 ***    (unused)
    #CHARSAVE6:   load = CART66, run = CART66, type = ro, define = yes;    # BANK66 ***    (unused)
    RECALLSAVE:   load = CART67, run = CART67, type = ro, define = yes;    # BANK67 $CE000 Monster memory recall
    GAMESAVE0:    load = CART68, run = CART68, type = ro, define = yes;    # BANK68 $D0000 Game Save Area, flash sector 13
    GAMESAVE1:    load = CART69, run = CART69, type = ro, define = yes;    # BANK69 $D2000 Cave 3 banks, $5AC0, 23232
    GAMESAVE2:    load = CART6A, run = CART6A, type = ro, define = yes;    # BANK6A $D4000 cave: $2000, $2000, $1AC0
    GAMESAVE3:    load = CART6B, run = CART6B, type = ro, define = yes;    # BANK6B $D6000 t_list: 7000 bytes
    GAMESAVE4:    load = CART6C, run = CART6C, type = ro, define = yes;    # BANK6C $D8000 m_list: 1500 bytes
    #GAMESAVE5:   load = CART6D, run = CART6D, type = ro, define = yes;    # BANK6D ***    (unused)
    #GAMESAVE6:   load = CART6E, run = CART6E, type = ro, define = yes;    # BANK6E ***    (unused)
    #GAMESAVE7:   load = CART6F, run = CART6F, type = ro, define = yes;    # BANK6F ***    (unused)
    HIGHSCORES:   load = CART70, run = CART70, type = ro, define = yes;    # BANK70 $E0000 High Score List, flash sector 14
    #BANK71:      load = CART71, run = CART71, type = ro, define = yes;    # BANK71 ***    (unused)
    #BANK72:      load = CART72, run = CART72, type = ro, define = yes;    # BANK72 ***    (unused)
    #BANK73:      load = CART73, run = CART73, type = ro, define = yes;    # BANK73 ***    (unused)
    #BANK74:      load = CART74, run = CART74, type = ro, define = yes;    # BANK74 ***    (unused)
    #BANK75:      load = CART75, run = CART75, type = ro, define = yes;    # BANK75 ***    (unused)
    #BANK76:      load = CART76, run = CART76, type = ro, define = yes;    # BANK76 ***    (unused)
    #RECALLSAVE:   load = CART77, run = CART77, type = ro, define = yes;    # BANK77 $EE000 Monster memory recall
    #BANK78:      load = CART78, run = CART78, type = ro, define = yes;    # BANK78 Last 64k flash bank, leave empty for now
    #BANK79:      load = CART79, run = CART79, type = ro, define = yes;    # BANK79 ***  
    #BANK7A:      load = CART7A, run = CART7A, type = ro, define = yes;    # BANK7A ***
    #BANK7B:      load = CART7B, run = CART7B, type = ro, define = yes;    # BANK7B ***
    #BANK7C:      load = CART7C, run = CART7C, type = ro, define = yes;    # BANK7C $F8000 Banking code that sits under OS at $D800
    #BANK7D:      load = CART7D, run = CART7D, type = ro, define = yes;    # BANK7D $FA000 Banking code that sits under OS at $C000
    #BANK7E:      load = CART7E, run = CART7E, type = ro, define = yes;    # BANK7E $FC000 Banking code that sits in low memory
    BANK7F:       load = CART7F, run = CART7F, type = ro, define = yes;    # BANK7F $FE000 Setup Code, library code
    VECTORS:      load = VECTORS, type = ro, define = yes;

    #ZPSAVE:   load = LIBRAM,  type = bss, define = yes;
    ZEROPAGE: load = ZP,      type = zp;
    EXTZP:    load = ZP,      type = zp,               optional = yes;
}
FEATURES {
    CONDES: segment = INIT,
	    type = constructor,
	    label = __CONSTRUCTOR_TABLE__,
	    count = __CONSTRUCTOR_COUNT__;
    CONDES: segment = RODATA,
	    type = destructor,
	    label = __DESTRUCTOR_TABLE__,
	    count = __DESTRUCTOR_COUNT__;
    CONDES: type = interruptor,
	    segment = RODATA,
	    label = __INTERRUPTOR_TABLE__,
	    count = __INTERRUPTOR_COUNT__;
}
