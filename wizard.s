;
; File generated by cc65 v 2.14 - Git 6df4205
;
	.fopt		compiler,"cc65 v 2.14 - Git 6df4205"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.import		_sprintf
	.import		_atoi
	.import		_atol
	.import		_strlen
	.import		_cgetc
	.import		_vbxe_bank
	.import		_vbxe_restore_bank
	.import		_out_val1
	.import		_new_level_flag
	.import		_free_turn_flag
	.import		_command_count
	.import		_noscore
	.importzp	_dun_level
	.import		_wizard
	.importzp	_cur_height
	.importzp	_cur_width
	.import		_crow_lookup
	.import		_py
	.importzp	_char_row
	.importzp	_char_col
	.import		_m_list
	.importzp	_mfptr
	.import		_bank_creatures
	.import		_bank_display_wizard_help
	.import		_bank_get_com
	.import		_bank_get_string
	.import		_bank_ident_spell
	.import		_bank_map_area
	.import		_bank_mass_genocide
	.import		_bank_msg_print
	.import		_bank_prt
	.import		_bank_prt_chp
	.import		_bank_prt_cmana
	.import		_bank_prt_experience
	.import		_bank_prt_gold
	.import		_bank_prt_map
	.import		_bank_prt_mhp
	.import		_bank_prt_speed
	.import		_bank_prt_stat
	.import		_bank_random_object
	.import		_bank_remove_curse
	.import		_bank_set_use_stat
	.import		_bank_summon_monster
	.import		_bank_teleport
	.import		_bank_vbxe_clear
	.import		_bank_vbxe_cleartoeol
	.import		_bank_vbxe_restorescreen
	.import		_bank_vbxe_savescreen
	.export		_wizard_erase_line
	.export		_wizard_get_check
	.export		_wizard_light
	.export		_wizard_cure_confusion
	.export		_wizard_cure_blindness
	.export		_wizard_cure_poison
	.export		_wizard_remove_fear
	.export		_wizard_res_stat
	.export		_wizard_change_speed
	.export		_change_character
	.export		_wizard_display_player
	.export		_enter_wiz_mode
	.export		_wizard_commands

.segment	"DATA"

.segment	"WIZARDBANK"

.segment	"RODATA"

.segment	"WIZARDBANK"
L048A:
	.byte	$6C,$65,$76,$3A,$20,$20,$20,$20,$20,$25,$2D,$33,$64,$20,$20,$20
	.byte	$20,$20,$20,$20,$6D,$61,$78,$5F,$64,$6C,$76,$3A,$20,$20,$20,$20
	.byte	$25,$2D,$33,$64,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$70,$61
	.byte	$63,$3A,$20,$20,$20,$20,$20,$25,$2D,$34,$64,$20,$64,$69,$73,$5F
	.byte	$61,$63,$3A,$20,$20,$25,$2D,$34,$64,$00
L0499:
	.byte	$68,$69,$74,$64,$69,$65,$3A,$20,$20,$25,$2D,$33,$64,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$70,$74,$6F
	.byte	$61,$63,$3A,$20,$20,$20,$25,$2D,$34,$64,$20,$20,$64,$69,$73,$5F
	.byte	$74,$61,$63,$3A,$20,$25,$2D,$34,$64,$00
L046E:
	.byte	$70,$63,$6C,$61,$73,$73,$3A,$20,$20,$25,$2D,$33,$64,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$70,$74,$6F
	.byte	$68,$69,$74,$3A,$20,$20,$25,$2D,$34,$64,$20,$64,$69,$73,$5F,$74
	.byte	$68,$3A,$20,$20,$25,$2D,$34,$64,$00
L047C:
	.byte	$70,$72,$61,$63,$65,$3A,$20,$20,$20,$25,$2D,$33,$64,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$70,$74,$6F
	.byte	$64,$61,$6D,$3A,$20,$20,$25,$2D,$34,$64,$20,$64,$69,$73,$5F,$74
	.byte	$64,$3A,$20,$20,$25,$2D,$34,$64,$00
L04F2:
	.byte	$6D,$61,$6E,$61,$3A,$20,$20,$20,$20,$25,$2D,$35,$64,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$49,$4E,$54,$20,$20
	.byte	$25,$2D,$33,$64,$20,$20,$25,$2D,$33,$64,$20,$20,$25,$2D,$34,$64
	.byte	$20,$25,$2D,$33,$64,$00
L0505:
	.byte	$63,$6D,$61,$6E,$61,$3A,$20,$20,$20,$25,$2D,$35,$64,$20,$20,$20
	.byte	$20,$20,$63,$6D,$61,$6E,$61,$5F,$66,$72,$61,$63,$3A,$20,$25,$2D
	.byte	$35,$64,$20,$20,$20,$20,$20,$20,$20,$20,$57,$49,$53,$20,$20,$25
	.byte	$2D,$33,$64,$20,$20,$25,$2D,$33,$64,$20,$20,$25,$2D,$34,$64,$20
	.byte	$25,$2D,$33,$64,$00
L04DE:
	.byte	$63,$68,$70,$3A,$20,$20,$20,$20,$20,$25,$2D,$35,$64,$20,$20,$20
	.byte	$20,$20,$63,$68,$70,$5F,$66,$72,$61,$63,$3A,$20,$20,$20,$25,$2D
	.byte	$35,$64,$20,$20,$20,$20,$20,$20,$20,$20,$53,$54,$52,$20,$20,$25
	.byte	$2D,$33,$64,$20,$20,$25,$2D,$33,$64,$20,$20,$25,$2D,$34,$64,$20
	.byte	$25,$2D,$33,$64,$00
L00FB:
	.byte	$54,$68,$65,$20,$67,$61,$6D,$65,$20,$77,$69,$6C,$6C,$20,$6E,$6F
	.byte	$74,$20,$62,$65,$20,$73,$63,$6F,$72,$65,$64,$20,$69,$66,$20,$79
	.byte	$6F,$75,$20,$65,$6E,$74,$65,$72,$20,$77,$69,$7A,$61,$72,$64,$20
	.byte	$6D,$6F,$64,$65,$2E,$20,$41,$72,$65,$20,$79,$6F,$75,$20,$73,$75
	.byte	$72,$65,$3F,$00
L04D4:
	.byte	$6D,$68,$70,$3A,$20,$20,$20,$20,$20,$25,$2D,$35,$64,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$4D,$61,$78,$20,$20,$43,$75,$72,$20,$20,$4D,$6F,$64,$20,$20,$55
	.byte	$73,$65,$00
L0440:
	.byte	$6D,$61,$6C,$65,$3A,$20,$20,$20,$20,$25,$2D,$33,$64,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$73,$72,$68
	.byte	$3A,$20,$20,$20,$20,$20,$25,$2D,$33,$64,$00
L04B2:
	.byte	$65,$78,$70,$66,$61,$63,$74,$3A,$20,$25,$2D,$33,$64,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$73,$61,$76
	.byte	$65,$3A,$20,$20,$20,$20,$25,$2D,$33,$64,$00
L0462:
	.byte	$73,$63,$3A,$20,$20,$20,$20,$20,$20,$25,$2D,$34,$64,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$62,$74,$68,$62
	.byte	$3A,$20,$20,$20,$20,$25,$2D,$33,$64,$00
L0457:
	.byte	$68,$74,$3A,$20,$20,$20,$20,$20,$20,$25,$2D,$35,$64,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$62,$74,$68,$3A,$20
	.byte	$20,$20,$20,$20,$25,$2D,$33,$64,$00
L044B:
	.byte	$61,$67,$65,$3A,$20,$20,$20,$20,$20,$25,$2D,$35,$64,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$66,$6F,$73,$3A,$20
	.byte	$20,$20,$20,$20,$25,$2D,$34,$64,$00
L04A7:
	.byte	$61,$75,$3A,$20,$20,$20,$20,$20,$20,$25,$2D,$38,$6C,$64,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$64,$69,$73,$61,$72,$6D,$3A
	.byte	$20,$20,$25,$2D,$33,$64,$00
L04BD:
	.byte	$6D,$61,$78,$5F,$65,$78,$70,$3A,$20,$25,$2D,$38,$6C,$64,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$73,$74,$6C,$3A,$20,$20,$20
	.byte	$20,$20,$25,$2D,$34,$64,$00
L00F6:
	.byte	$57,$69,$7A,$61,$72,$64,$20,$6D,$6F,$64,$65,$20,$69,$73,$20,$66
	.byte	$6F,$72,$20,$64,$65,$62,$75,$67,$67,$69,$6E,$67,$20,$61,$6E,$64
	.byte	$20,$65,$78,$70,$65,$72,$69,$6D,$65,$6E,$74,$69,$6E,$67,$2E,$00
L03E0:
	.byte	$43,$75,$72,$72,$65,$6E,$74,$3D,$25,$64,$20,$20,$28,$30,$2D,$32
	.byte	$30,$30,$29,$20,$42,$6F,$77,$73,$2F,$54,$68,$72,$6F,$77,$69,$6E
	.byte	$67,$20,$3D,$20,$00
L03BD:
	.byte	$43,$75,$72,$72,$65,$6E,$74,$3D,$25,$64,$20,$20,$28,$30,$2D,$32
	.byte	$30,$30,$29,$20,$42,$61,$73,$65,$20,$74,$6F,$20,$68,$69,$74,$20
	.byte	$3D,$20,$00
L032E:
	.byte	$43,$75,$72,$72,$65,$6E,$74,$3D,$25,$64,$20,$20,$28,$30,$2D,$32
	.byte	$30,$30,$29,$20,$53,$65,$61,$72,$63,$68,$69,$6E,$67,$20,$3D,$20
	.byte	$00
L04C9:
	.byte	$65,$78,$70,$3A,$20,$20,$20,$20,$20,$25,$2D,$38,$6C,$64,$20,$20
	.byte	$65,$78,$70,$5F,$66,$72,$61,$63,$3A,$20,$20,$20,$25,$2D,$35,$64
	.byte	$00
L0377:
	.byte	$43,$75,$72,$72,$65,$6E,$74,$3D,$25,$64,$20,$20,$28,$30,$2D,$32
	.byte	$30,$30,$29,$20,$44,$69,$73,$61,$72,$6D,$69,$6E,$67,$20,$3D,$20
	.byte	$00
L0439:
	.byte	$50,$6C,$61,$79,$65,$72,$20,$53,$74,$72,$75,$63,$74,$75,$72,$65
	.byte	$20,$2D,$20,$4D,$69,$73,$63,$20,$26,$20,$53,$74,$61,$74,$73,$00
L0351:
	.byte	$43,$75,$72,$72,$65,$6E,$74,$3D,$25,$64,$20,$20,$28,$2D,$31,$2D
	.byte	$31,$38,$29,$20,$53,$74,$65,$61,$6C,$74,$68,$20,$3D,$20,$00
L039A:
	.byte	$43,$75,$72,$72,$65,$6E,$74,$3D,$25,$64,$20,$20,$28,$30,$2D,$31
	.byte	$30,$30,$29,$20,$53,$61,$76,$65,$20,$3D,$20,$00
L01B4:
	.byte	$47,$6F,$20,$74,$6F,$20,$77,$68,$69,$63,$68,$20,$6C,$65,$76,$65
	.byte	$6C,$20,$28,$30,$2D,$39,$39,$29,$20,$3F,$20,$00
L0519:
	.byte	$44,$45,$58,$20,$20,$25,$2D,$33,$64,$20,$20,$25,$2D,$33,$64,$20
	.byte	$20,$25,$2D,$34,$64,$20,$25,$2D,$33,$64,$00
L053D:
	.byte	$43,$48,$52,$20,$20,$25,$2D,$33,$64,$20,$20,$25,$2D,$33,$64,$20
	.byte	$20,$25,$2D,$34,$64,$20,$25,$2D,$33,$64,$00
L052B:
	.byte	$43,$4F,$4E,$20,$20,$25,$2D,$33,$64,$20,$20,$25,$2D,$33,$64,$20
	.byte	$20,$25,$2D,$34,$64,$20,$25,$2D,$33,$64,$00
L0274:
	.byte	$28,$33,$20,$2D,$20,$31,$31,$38,$29,$20,$44,$65,$78,$74,$65,$72
	.byte	$69,$74,$79,$20,$20,$20,$20,$3D,$20,$00
L0256:
	.byte	$28,$33,$20,$2D,$20,$31,$31,$38,$29,$20,$57,$69,$73,$64,$6F,$6D
	.byte	$20,$20,$20,$20,$20,$20,$20,$3D,$20,$00
L0238:
	.byte	$28,$33,$20,$2D,$20,$31,$31,$38,$29,$20,$49,$6E,$74,$65,$6C,$6C
	.byte	$69,$67,$65,$6E,$63,$65,$20,$3D,$20,$00
L021A:
	.byte	$28,$33,$20,$2D,$20,$31,$31,$38,$29,$20,$53,$74,$72,$65,$6E,$67
	.byte	$74,$68,$20,$20,$20,$20,$20,$3D,$20,$00
L0213:
	.byte	$54,$79,$70,$65,$20,$27,$3F,$27,$20,$6F,$72,$20,$27,$5C,$27,$20
	.byte	$66,$6F,$72,$20,$68,$65,$6C,$70,$2E,$00
L02CE:
	.byte	$28,$31,$20,$2D,$20,$33,$32,$37,$36,$37,$29,$20,$48,$69,$74,$20
	.byte	$70,$6F,$69,$6E,$74,$73,$20,$3D,$20,$00
L02B0:
	.byte	$28,$33,$20,$2D,$20,$31,$31,$38,$29,$20,$43,$68,$61,$72,$69,$73
	.byte	$6D,$61,$20,$20,$20,$20,$20,$3D,$20,$00
L02EC:
	.byte	$28,$30,$20,$2D,$20,$33,$32,$37,$36,$37,$29,$20,$4D,$61,$6E,$61
	.byte	$20,$20,$20,$20,$20,$20,$20,$3D,$20,$00
L0292:
	.byte	$28,$33,$20,$2D,$20,$31,$31,$38,$29,$20,$43,$6F,$6E,$73,$74,$69
	.byte	$74,$75,$74,$69,$6F,$6E,$20,$3D,$20,$00
L0403:
	.byte	$43,$75,$72,$72,$65,$6E,$74,$3D,$25,$64,$20,$20,$57,$65,$69,$67
	.byte	$68,$74,$20,$3D,$20,$00
L030C:
	.byte	$43,$75,$72,$72,$65,$6E,$74,$3D,$25,$6C,$64,$20,$20,$47,$6F,$6C
	.byte	$64,$20,$3D,$20,$00
L0425:
	.byte	$41,$6C,$74,$65,$72,$20,$73,$70,$65,$65,$64,$3F,$20,$28,$2B,$2F
	.byte	$2D,$29,$00
L054E:
	.byte	$70,$72,$65,$73,$73,$20,$61,$6E,$79,$20,$6B,$65,$79,$00
L0088:
	.byte	$20,$5B,$79,$2F,$6E,$5D,$00

; ---------------------------------------------------------------
; void __near__ __fastcall__ wizard_erase_line (unsigned char, unsigned char)
; ---------------------------------------------------------------

.segment	"WIZARDBANK"

.proc	_wizard_erase_line: near

.segment	"WIZARDBANK"

;
; {
;
	jsr     pusha
;
; bank_vbxe_cleartoeol(col, row, INBANK_RETBANK);
;
	jsr     decsp2
	ldy     #$02
	lda     (sp),y
	dey
	sta     (sp),y
	ldy     #$03
	lda     (sp),y
	ldy     #$00
	sta     (sp),y
	lda     #$32
	jsr     _bank_vbxe_cleartoeol
;
; }
;
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ __fastcall__ wizard_get_check (__near__ unsigned char*)
; ---------------------------------------------------------------

.segment	"WIZARDBANK"

.proc	_wizard_get_check: near

.segment	"WIZARDBANK"

;
; {
;
	jsr     pushax
;
; bank_prt(prompt, 0, 0, INBANK_RETBANK);
;
	jsr     decsp6
	ldy     #$07
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$02
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	lda     #$00
	ldy     #$01
	sta     (sp),y
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_prt
;
; x = strlen(prompt);                   // give us the string length of the prompt instead. -SJ
;
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     _strlen
	ldy     #$00
	sta     (sp),y
;
; if (x > 73) x = 73;
;
	cmp     #$4A
	bcc     L0083
	lda     #$49
	sta     (sp),y
;
; bank_prt(" [y/n]", 0, x,  INBANK_RETBANK);
;
L0083:	jsr     decsp4
	lda     #<(L0088)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(L0088)
	sta     (sp),y
	lda     #$00
	ldy     #$01
	sta     (sp),y
	ldy     #$04
	lda     (sp),y
	ldy     #$00
	sta     (sp),y
	lda     #$32
	jsr     _bank_prt
;
; res = cgetc();
;
L008D:	jsr     _cgetc
	ldy     #$01
	sta     (sp),y
;
; } while(res == ' ');
;
	cmp     #$20
	beq     L008D
;
; bank_vbxe_cleartoeol(0, 0, INBANK_RETBANK);
;
	jsr     decsp2
	lda     #$00
	sta     (sp),y
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_vbxe_cleartoeol
;
; if (res == 'Y' || res == 'y')
;
	ldy     #$01
	lda     (sp),y
	cmp     #$59
	beq     L0554
	cmp     #$79
	beq     L0554
	ldx     #$00
	txa
	jmp     incsp4
;
; return TRUE;
;
L0554:	ldx     #$00
	tya
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; void __near__ __fastcall__ wizard_light (void)
; ---------------------------------------------------------------

.segment	"WIZARDBANK"

.proc	_wizard_light: near

.segment	"WIZARDBANK"

;
; register cave_type *c_ptr;
;
	lda     regbank+4
	ldx     regbank+5
	jsr     pushax
;
; register int8u k, l, i, j;
;
	lda     regbank+3
	jsr     pusha
	lda     regbank+2
	jsr     pusha
	lda     regbank+1
	jsr     pusha
	lda     regbank+0
	jsr     pusha
;
; vbxe_bank(VBXE_CAVBANK);
;
	jsr     decsp1
	lda     #$A8
	jsr     _vbxe_bank
;
; if ((CAVE_ADR(char_row,char_col))->flags & CAVE_PL)
;
	ldx     #$00
	lda     _char_row
	asl     a
	bcc     L055B
	inx
	clc
L055B:	adc     #<(_crow_lookup)
	sta     ptr1
	txa
	adc     #>(_crow_lookup)
	sta     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	sta     ptr1
	stx     ptr1+1
	lda     _char_col
	ldx     #$00
	jsr     shlax2
	clc
	adc     ptr1
	sta     ptr1
	txa
	adc     ptr1+1
	sta     ptr1+1
	ldy     #$03
	lda     (ptr1),y
	and     #$04
	beq     L0560
;
; flag = FALSE;
;
	lda     #$00
;
; else
;
	jmp     L0568
;
; flag = TRUE;
;
L0560:	lda     #$01
L0568:	ldy     #$00
	sta     (sp),y
;
; for (i = 0; i < cur_height; ++i)
;
	tya
	sta     regbank+1
	tax
L0561:	lda     regbank+1
	cmp     _cur_height
	txa
	sbc     #$00
	jcs     L0118
;
; for (j = 0; j < cur_width; ++j)
;
	lda     #$00
	sta     regbank+0
	tax
L0562:	lda     regbank+0
	cmp     _cur_width
	jcs     L0567
;
; if ((CAVE_ADR(i,j))->fval <= MAX_CAVE_FLOOR)
;
	lda     regbank+1
	asl     a
	bcc     L055C
	inx
	clc
L055C:	adc     #<(_crow_lookup)
	sta     ptr1
	txa
	adc     #>(_crow_lookup)
	sta     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	sta     ptr1
	stx     ptr1+1
	lda     regbank+0
	ldx     #$00
	jsr     shlax2
	clc
	adc     ptr1
	sta     ptr1
	txa
	adc     ptr1+1
	sta     ptr1+1
	ldy     #$02
	ldx     #$00
	lda     (ptr1),y
	cmp     #$05
	jcs     L0566
;
; for (k = i-1; k <= i+1; ++k)
;
	lda     regbank+1
	sec
	sbc     #$01
	sta     regbank+3
L0563:	lda     regbank+3
	jsr     pusha0
	lda     regbank+1
	clc
	adc     #$01
	bcc     L0136
	ldx     #$01
L0136:	jsr     tosicmp
	beq     L055E
	bcs     L0121
;
; for (l = j-1; l <= j+1; ++l) {
;
L055E:	lda     regbank+0
	sec
	sbc     #$01
	sta     regbank+2
L0564:	lda     regbank+2
	jsr     pusha0
	lda     regbank+0
	clc
	adc     #$01
	bcc     L0140
	ldx     #$01
L0140:	jsr     tosicmp
	beq     L055F
	bcs     L0130
;
; c_ptr = CAVE_ADR(k, l);
;
L055F:	ldx     #$00
	lda     regbank+3
	asl     a
	bcc     L055D
	inx
	clc
L055D:	adc     #<(_crow_lookup)
	sta     ptr1
	txa
	adc     #>(_crow_lookup)
	sta     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	sta     ptr1
	stx     ptr1+1
	lda     regbank+2
	ldx     #$00
	jsr     shlax2
	clc
	adc     ptr1
	sta     regbank+4
	txa
	adc     ptr1+1
	sta     regbank+4+1
;
; if (flag)
;
	lda     (sp),y
	beq     L0148
;
; c_ptr->flags |= CAVE_PL;
;
	ldy     #$03
	ldx     #$00
	lda     (regbank+4),y
	ora     #$04
;
; else
;
	jmp     L055A
;
; c_ptr->flags &= ~CAVE_PL;
;
L0148:	ldy     #$03
	tax
	lda     (regbank+4),y
	and     #$FB
L055A:	sta     (regbank+4),y
;
; if (!flag)
;
	lda     (sp,x)
	bne     L0565
;
; c_ptr->flags &= ~CAVE_FM;
;
	ldy     #$03
	lda     (regbank+4),y
	and     #$FD
	sta     (regbank+4),y
;
; for (l = j-1; l <= j+1; ++l) {
;
L0565:	inc     regbank+2
	jmp     L0564
;
; for (k = i-1; k <= i+1; ++k)
;
L0130:	inc     regbank+3
	jmp     L0563
;
; for (j = 0; j < cur_width; ++j)
;
L0121:	ldx     #$00
L0566:	inc     regbank+0
	jmp     L0562
;
; for (i = 0; i < cur_height; ++i)
;
L0567:	inc     regbank+1
	jmp     L0561
;
; bank_prt_map(WIZARDNUM);
;
L0118:	lda     #$32
	jsr     _bank_prt_map
;
; }
;
	ldy     #$06
	ldx     #$05
L0155:	lda     (sp),y
	sta     regbank+0,x
	dey
	dex
	bpl     L0155
	jmp     incsp7

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ __fastcall__ wizard_cure_confusion (void)
; ---------------------------------------------------------------

.segment	"WIZARDBANK"

.proc	_wizard_cure_confusion: near

.segment	"WIZARDBANK"

;
; int8u cure = FALSE;
;
	lda     #$00
	jsr     pusha
;
; if (py.flags.confused > 1) {
;
	lda     _py+354
	cmp     #$02
	bcc     L009F
;
; py.flags.confused = 1;
;
	lda     #$01
	sta     _py+354
;
; cure = TRUE;
;
	ldy     #$00
	sta     (sp),y
;
; return(cure);
;
L009F:	ldx     #$00
	lda     (sp,x)
;
; }
;
	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ __fastcall__ wizard_cure_blindness (void)
; ---------------------------------------------------------------

.segment	"WIZARDBANK"

.proc	_wizard_cure_blindness: near

.segment	"WIZARDBANK"

;
; int8u cure = FALSE;
;
	lda     #$00
	jsr     pusha
;
; if (py.flags.blind > 1) {
;
	lda     _py+352
	cmp     #$02
	bcc     L00A9
;
; py.flags.blind = 1;
;
	lda     #$01
	sta     _py+352
;
; cure = TRUE;
;
	ldy     #$00
	sta     (sp),y
;
; return(cure);
;
L00A9:	ldx     #$00
	lda     (sp,x)
;
; }
;
	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ __fastcall__ wizard_cure_poison (void)
; ---------------------------------------------------------------

.segment	"WIZARDBANK"

.proc	_wizard_cure_poison: near

.segment	"WIZARDBANK"

;
; int8u cure = FALSE;
;
	lda     #$00
	jsr     pusha
;
; if (py.flags.poisoned > 1) {
;
	lda     _py+364
	cmp     #$02
	bcc     L00B3
;
; py.flags.poisoned = 1;
;
	lda     #$01
	sta     _py+364
;
; cure = TRUE;
;
	ldy     #$00
	sta     (sp),y
;
; return(cure);
;
L00B3:	ldx     #$00
	lda     (sp,x)
;
; }
;
	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ __fastcall__ wizard_remove_fear (void)
; ---------------------------------------------------------------

.segment	"WIZARDBANK"

.proc	_wizard_remove_fear: near

.segment	"WIZARDBANK"

;
; int8u result = FALSE;
;
	lda     #$00
	jsr     pusha
;
; if (py.flags.afraid > 1) {
;
	lda     _py+363
	cmp     #$02
	bcc     L00BD
;
; py.flags.afraid = 1;
;
	lda     #$01
	sta     _py+363
;
; result = TRUE;
;
	ldy     #$00
	sta     (sp),y
;
; return(result);
;
L00BD:	ldx     #$00
	lda     (sp,x)
;
; }
;
	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ __fastcall__ wizard_res_stat (unsigned char)
; ---------------------------------------------------------------

.segment	"WIZARDBANK"

.proc	_wizard_res_stat: near

.segment	"WIZARDBANK"

;
; {
;
	jsr     pusha
;
; i = py.stats.max_stat[stat] - py.stats.cur_stat[stat];
;
	jsr     decsp1
	ldy     #$01
	lda     (sp),y
	tay
	lda     _py+322,y
	jsr     pusha0
	ldy     #$03
	lda     (sp),y
	tay
	lda     _py+328,y
	jsr     tossuba0
	ldy     #$00
	sta     (sp),y
;
; if (i) {
;
	lda     (sp),y
	beq     L00CC
;
; py.stats.cur_stat[stat] += i;
;
	lda     #<(_py+328)
	ldx     #>(_py+328)
	iny
	clc
	adc     (sp),y
	bcc     L00D0
	inx
L00D0:	jsr     pushax
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	sta     ptr1
	ldy     #$02
	lda     (sp),y
	clc
	adc     ptr1
	ldy     #$00
	jsr     staspidx
;
; bank_set_use_stat(stat, INBANK_RETBANK);
;
	ldy     #$01
	lda     (sp),y
	jsr     pusha
	lda     #$32
	jsr     _bank_set_use_stat
;
; bank_prt_stat(stat, INBANK_RETBANK);
;
	ldy     #$01
	lda     (sp),y
	jsr     pusha
	lda     #$32
	jsr     _bank_prt_stat
;
; return TRUE;
;
	ldx     #$00
	lda     #$01
	jmp     incsp2
;
; return FALSE;
;
L00CC:	tax
;
; }
;
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ __fastcall__ wizard_change_speed (signed char)
; ---------------------------------------------------------------

.segment	"WIZARDBANK"

.proc	_wizard_change_speed: near

.segment	"WIZARDBANK"

;
; {
;
	jsr     pusha
;
; register int8u i;
;
	lda     regbank+5
	jsr     pusha
;
; py.flags.speed += num;
;
	ldy     #$01
	lda     (sp),y
	clc
	adc     _py+360
	sta     _py+360
;
; py.flags.status |= PY_SPEED;
;
	lda     _py+346+3
	sta     sreg+1
	lda     _py+346+2
	sta     sreg
	ldx     _py+346+1
	lda     _py+346
	jsr     pusheax
	ldx     #$00
	stx     sreg+1
	lda     #$04
	sta     sreg
	txa
	jsr     tosoreax
	sta     _py+346
	stx     _py+346+1
	ldy     sreg
	sty     _py+346+2
	ldy     sreg+1
	sty     _py+346+3
;
; vbxe_bank(VBXE_MONBANK);      // monster list is in MONBANK
;
	lda     #$90
	jsr     _vbxe_bank
;
; for (i = mfptr - 1; i >= MIN_MONIX; --i)
;
	lda     _mfptr
	sec
	sbc     #$01
	sta     regbank+5
L056B:	lda     regbank+5
	cmp     #$02
	bcc     L00E5
;
; m_list[i].cspeed += num;
;
	lda     regbank+5
	jsr     pusha0
	lda     #$0C
	jsr     tosmula0
	clc
	adc     #<(_m_list)
	tay
	txa
	adc     #>(_m_list)
	tax
	tya
	jsr     pushax
	ldy     #$03
	jsr     ldaidx
	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     (sp),y
	bpl     L00F0
	dex
L00F0:	clc
	adc     ptr1
	pha
	txa
	adc     ptr1+1
	pla
	jsr     staspidx
;
; for (i = mfptr - 1; i >= MIN_MONIX; --i)
;
	dec     regbank+5
	jmp     L056B
;
; vbxe_restore_bank();
;
L00E5:	jsr     _vbxe_restore_bank
;
; }
;
	ldy     #$00
	lda     (sp),y
	sta     regbank+5
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ __fastcall__ change_character (void)
; ---------------------------------------------------------------

.segment	"WIZARDBANK"

.proc	_change_character: near

.segment	"WIZARDBANK"

;
; bank_prt("(3 - 118) Strength     = ", 0, 0, WIZARDNUM);
;
	ldy     #$0A
	jsr     subysp
	lda     #<(L021A)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(L021A)
	sta     (sp),y
	lda     #$00
	ldy     #$01
	sta     (sp),y
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_prt
;
; if (bank_get_string(out_val1, 0, 25, 3, WIZARDNUM)) {
;
	jsr     decsp5
	lda     #<(_out_val1)
	ldy     #$03
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #$00
	ldy     #$02
	sta     (sp),y
	lda     #$19
	dey
	sta     (sp),y
	lda     #$03
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_get_string
	tax
	bne     L0595
;
; }
;
	jmp     incsp6
;
; tmp_val = atoi(out_val1);
;
L0595:	lda     #<(_out_val1)
	ldx     #>(_out_val1)
	jsr     _atoi
	ldy     #$04
	jsr     staxysp
;
; if ((tmp_val > 2) && (tmp_val < 119)) {
;
	cmp     #$03
	txa
	sbc     #$00
	bvs     L022C
	eor     #$80
L022C:	bpl     L0236
	ldy     #$05
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	cmp     #$77
	txa
	sbc     #$00
	bvc     L022F
	eor     #$80
L022F:	bpl     L0236
;
; py.stats.max_stat[A_STR] = tmp_val;
;
	lda     (sp),y
	sta     _py+322
;
; wizard_res_stat(A_STR);
;
	lda     #$00
	jsr     _wizard_res_stat
;
; bank_prt("(3 - 118) Intelligence = ", 0, 0, WIZARDNUM);
;
L0236:	jsr     decsp4
	lda     #<(L0238)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(L0238)
	sta     (sp),y
	lda     #$00
	ldy     #$01
	sta     (sp),y
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_prt
;
; if (bank_get_string(out_val1, 0, 25, 3, WIZARDNUM)) {
;
	jsr     decsp5
	lda     #<(_out_val1)
	ldy     #$03
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #$00
	ldy     #$02
	sta     (sp),y
	lda     #$19
	dey
	sta     (sp),y
	lda     #$03
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_get_string
	tax
	bne     L0596
;
; }
;
	jmp     incsp6
;
; tmp_val = atoi(out_val1);
;
L0596:	lda     #<(_out_val1)
	ldx     #>(_out_val1)
	jsr     _atoi
	ldy     #$04
	jsr     staxysp
;
; if ((tmp_val > 2) && (tmp_val < 119)) {
;
	cmp     #$03
	txa
	sbc     #$00
	bvs     L024A
	eor     #$80
L024A:	bpl     L0254
	ldy     #$05
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	cmp     #$77
	txa
	sbc     #$00
	bvc     L024D
	eor     #$80
L024D:	bpl     L0254
;
; py.stats.max_stat[A_INT] = tmp_val;
;
	lda     (sp),y
	sta     _py+323
;
; wizard_res_stat(A_INT);
;
	lda     #$01
	jsr     _wizard_res_stat
;
; bank_prt("(3 - 118) Wisdom       = ", 0, 0, WIZARDNUM);
;
L0254:	jsr     decsp4
	lda     #<(L0256)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(L0256)
	sta     (sp),y
	lda     #$00
	ldy     #$01
	sta     (sp),y
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_prt
;
; if (bank_get_string(out_val1, 0, 25, 3, WIZARDNUM)) {
;
	jsr     decsp5
	lda     #<(_out_val1)
	ldy     #$03
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #$00
	ldy     #$02
	sta     (sp),y
	lda     #$19
	dey
	sta     (sp),y
	lda     #$03
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_get_string
	tax
	bne     L0597
;
; }
;
	jmp     incsp6
;
; tmp_val = atoi(out_val1);
;
L0597:	lda     #<(_out_val1)
	ldx     #>(_out_val1)
	jsr     _atoi
	ldy     #$04
	jsr     staxysp
;
; if ((tmp_val > 2) && (tmp_val < 119)) {
;
	cmp     #$03
	txa
	sbc     #$00
	bvs     L0268
	eor     #$80
L0268:	bpl     L0272
	ldy     #$05
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	cmp     #$77
	txa
	sbc     #$00
	bvc     L026B
	eor     #$80
L026B:	bpl     L0272
;
; py.stats.max_stat[A_WIS] = tmp_val;
;
	lda     (sp),y
	sta     _py+324
;
; wizard_res_stat(A_WIS);
;
	lda     #$02
	jsr     _wizard_res_stat
;
; bank_prt("(3 - 118) Dexterity    = ", 0, 0, WIZARDNUM);
;
L0272:	jsr     decsp4
	lda     #<(L0274)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(L0274)
	sta     (sp),y
	lda     #$00
	ldy     #$01
	sta     (sp),y
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_prt
;
; if (bank_get_string(out_val1, 0, 25, 3, WIZARDNUM)) {
;
	jsr     decsp5
	lda     #<(_out_val1)
	ldy     #$03
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #$00
	ldy     #$02
	sta     (sp),y
	lda     #$19
	dey
	sta     (sp),y
	lda     #$03
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_get_string
	tax
	bne     L0598
;
; }
;
	jmp     incsp6
;
; tmp_val = atoi(out_val1);
;
L0598:	lda     #<(_out_val1)
	ldx     #>(_out_val1)
	jsr     _atoi
	ldy     #$04
	jsr     staxysp
;
; if ((tmp_val > 2) && (tmp_val < 119)) {
;
	cmp     #$03
	txa
	sbc     #$00
	bvs     L0286
	eor     #$80
L0286:	bpl     L0290
	ldy     #$05
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	cmp     #$77
	txa
	sbc     #$00
	bvc     L0289
	eor     #$80
L0289:	bpl     L0290
;
; py.stats.max_stat[A_DEX] = tmp_val;
;
	lda     (sp),y
	sta     _py+325
;
; wizard_res_stat(A_DEX);
;
	lda     #$03
	jsr     _wizard_res_stat
;
; bank_prt("(3 - 118) Constitution = ", 0, 0, WIZARDNUM);
;
L0290:	jsr     decsp4
	lda     #<(L0292)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(L0292)
	sta     (sp),y
	lda     #$00
	ldy     #$01
	sta     (sp),y
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_prt
;
; if (bank_get_string(out_val1, 0, 25, 3, WIZARDNUM)) {
;
	jsr     decsp5
	lda     #<(_out_val1)
	ldy     #$03
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #$00
	ldy     #$02
	sta     (sp),y
	lda     #$19
	dey
	sta     (sp),y
	lda     #$03
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_get_string
	tax
	bne     L0599
;
; }
;
	jmp     incsp6
;
; tmp_val = atoi(out_val1);
;
L0599:	lda     #<(_out_val1)
	ldx     #>(_out_val1)
	jsr     _atoi
	ldy     #$04
	jsr     staxysp
;
; if ((tmp_val > 2) && (tmp_val < 119)) {
;
	cmp     #$03
	txa
	sbc     #$00
	bvs     L02A4
	eor     #$80
L02A4:	bpl     L02AE
	ldy     #$05
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	cmp     #$77
	txa
	sbc     #$00
	bvc     L02A7
	eor     #$80
L02A7:	bpl     L02AE
;
; py.stats.max_stat[A_CON] = tmp_val;
;
	lda     (sp),y
	sta     _py+326
;
; wizard_res_stat(A_CON);
;
	tya
	jsr     _wizard_res_stat
;
; bank_prt("(3 - 118) Charisma     = ", 0, 0, WIZARDNUM);
;
L02AE:	jsr     decsp4
	lda     #<(L02B0)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(L02B0)
	sta     (sp),y
	lda     #$00
	ldy     #$01
	sta     (sp),y
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_prt
;
; if (bank_get_string(out_val1, 0, 25, 3, WIZARDNUM)) {
;
	jsr     decsp5
	lda     #<(_out_val1)
	ldy     #$03
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #$00
	ldy     #$02
	sta     (sp),y
	lda     #$19
	dey
	sta     (sp),y
	lda     #$03
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_get_string
	tax
	bne     L059A
;
; }
;
	jmp     incsp6
;
; tmp_val = atoi(out_val1);
;
L059A:	lda     #<(_out_val1)
	ldx     #>(_out_val1)
	jsr     _atoi
	ldy     #$04
	jsr     staxysp
;
; if ((tmp_val > 2) && (tmp_val < 119)) {
;
	cmp     #$03
	txa
	sbc     #$00
	bvs     L02C2
	eor     #$80
L02C2:	bpl     L02CC
	ldy     #$05
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	cmp     #$77
	txa
	sbc     #$00
	bvc     L02C5
	eor     #$80
L02C5:	bpl     L02CC
;
; py.stats.max_stat[A_CHR] = tmp_val;
;
	lda     (sp),y
	sta     _py+327
;
; wizard_res_stat(A_CHR);
;
	lda     #$05
	jsr     _wizard_res_stat
;
; bank_prt("(1 - 32767) Hit points = ", 0, 0, WIZARDNUM);
;
L02CC:	jsr     decsp4
	lda     #<(L02CE)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(L02CE)
	sta     (sp),y
	lda     #$00
	ldy     #$01
	sta     (sp),y
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_prt
;
; if (bank_get_string(out_val1, 0, 25, 5, WIZARDNUM)) {
;
	jsr     decsp5
	lda     #<(_out_val1)
	ldy     #$03
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #$00
	ldy     #$02
	sta     (sp),y
	lda     #$19
	dey
	sta     (sp),y
	lda     #$05
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_get_string
	tax
	bne     L059B
;
; }
;
	jmp     incsp6
;
; tmp_val = atoi(out_val1);
;
L059B:	lda     #<(_out_val1)
	ldx     #>(_out_val1)
	jsr     _atoi
	ldy     #$04
	jsr     staxysp
;
; if (tmp_val > 0) {
;
	cmp     #$01
	txa
	sbc     #$00
	bvs     L02DF
	eor     #$80
L02DF:	bpl     L02EA
;
; py.misc.mhp  = tmp_val;
;
	ldy     #$05
	lda     (sp),y
	sta     _py+56+1
	dey
	lda     (sp),y
	sta     _py+56
;
; py.misc.chp  = tmp_val;
;
	iny
	lda     (sp),y
	sta     _py+78+1
	dey
	lda     (sp),y
	sta     _py+78
;
; py.misc.chp_frac = 0;
;
	lda     #$00
	sta     _py+80
	sta     _py+80+1
;
; bank_prt_mhp(WIZARDNUM);
;
	lda     #$32
	jsr     _bank_prt_mhp
;
; bank_prt_chp(WIZARDNUM);
;
	lda     #$32
	jsr     _bank_prt_chp
;
; bank_prt("(0 - 32767) Mana       = ", 0, 0, WIZARDNUM);
;
L02EA:	jsr     decsp4
	lda     #<(L02EC)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(L02EC)
	sta     (sp),y
	lda     #$00
	ldy     #$01
	sta     (sp),y
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_prt
;
; if (bank_get_string(out_val1, 0, 25, 5, WIZARDNUM)) {
;
	jsr     decsp5
	lda     #<(_out_val1)
	ldy     #$03
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #$00
	ldy     #$02
	sta     (sp),y
	lda     #$19
	dey
	sta     (sp),y
	lda     #$05
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_get_string
	tax
	bne     L059C
;
; }
;
	jmp     incsp6
;
; tmp_val = atoi(out_val1);
;
L059C:	lda     #<(_out_val1)
	ldx     #>(_out_val1)
	jsr     _atoi
	ldy     #$04
	jsr     staxysp
;
; if ((tmp_val > -1) && (*out_val1 != '\0')) {
;
	txa
	bmi     L0309
	lda     _out_val1
	beq     L0309
;
; py.misc.mana  = tmp_val;
;
	ldy     #$05
	lda     (sp),y
	sta     _py+54+1
	dey
	lda     (sp),y
	sta     _py+54
;
; py.misc.cmana = tmp_val;
;
	iny
	lda     (sp),y
	sta     _py+74+1
	dey
	lda     (sp),y
	sta     _py+74
;
; py.misc.cmana_frac = 0;
;
	lda     #$00
	sta     _py+76
	sta     _py+76+1
;
; bank_prt_cmana(WIZARDNUM);
;
	lda     #$32
	jsr     _bank_prt_cmana
;
; sprintf(out_val1, "Current=%ld  Gold = ", py.misc.au);
;
L0309:	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #<(L030C)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(L030C)
	sta     (sp),y
	lda     _py+28+3
	sta     sreg+1
	lda     _py+28+2
	sta     sreg
	ldx     _py+28+1
	lda     _py+28
	jsr     pusheax
	ldy     #$08
	jsr     _sprintf
;
; tmp_val = strlen(out_val1);
;
	ldy     #$FF
L0312:	iny
	lda     _out_val1,y
	bne     L0312
	tax
	tya
	ldy     #$04
	jsr     staxysp
;
; bank_prt(out_val1, 0, 0, WIZARDNUM);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	txa
	ldy     #$01
	sta     (sp),y
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_prt
;
; if (bank_get_string(out_val1, 0, tmp_val, 7, WIZARDNUM)) {
;
	jsr     decsp5
	lda     #<(_out_val1)
	ldy     #$03
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #$00
	ldy     #$02
	sta     (sp),y
	ldy     #$09
	lda     (sp),y
	ldy     #$01
	sta     (sp),y
	lda     #$07
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_get_string
	tax
	bne     L059D
;
; }
;
	jmp     incsp6
;
; tmp_lval = atol(out_val1);
;
L059D:	lda     #<(_out_val1)
	ldx     #>(_out_val1)
	jsr     _atol
	jsr     steax0sp
;
; if (tmp_lval > -1 && (*out_val1 != '\0')) {
;
	jsr     ldeax0sp
	lda     sreg+1
	bmi     L032B
	lda     _out_val1
	beq     L032B
;
; py.misc.au = tmp_lval;
;
	jsr     ldeax0sp
	sta     _py+28
	stx     _py+28+1
	ldy     sreg
	sty     _py+28+2
	ldy     sreg+1
	sty     _py+28+3
;
; bank_prt_gold(WIZARDNUM);
;
	lda     #$32
	jsr     _bank_prt_gold
;
; sprintf(out_val1, "Current=%d  (0-200) Searching = ", py.misc.srh);
;
L032B:	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #<(L032E)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(L032E)
	sta     (sp),y
	lda     _py+50
	jsr     pusha0
	ldy     #$06
	jsr     _sprintf
;
; tmp_val = strlen(out_val1);
;
	ldy     #$FF
L0334:	iny
	lda     _out_val1,y
	bne     L0334
	tax
	tya
	ldy     #$04
	jsr     staxysp
;
; bank_prt(out_val1, 0, 0, WIZARDNUM);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	txa
	ldy     #$01
	sta     (sp),y
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_prt
;
; if (bank_get_string(out_val1, 0, tmp_val, 3, WIZARDNUM)) {
;
	jsr     decsp5
	lda     #<(_out_val1)
	ldy     #$03
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #$00
	ldy     #$02
	sta     (sp),y
	ldy     #$09
	lda     (sp),y
	ldy     #$01
	sta     (sp),y
	lda     #$03
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_get_string
	tax
	bne     L059E
;
; }
;
	jmp     incsp6
;
; tmp_val = atoi(out_val1);
;
L059E:	lda     #<(_out_val1)
	ldx     #>(_out_val1)
	jsr     _atoi
	ldy     #$04
	jsr     staxysp
;
; if ((tmp_val > -1) && (tmp_val < 201) && (*out_val1 != '\0'))
;
	txa
	bmi     L034E
	ldy     #$05
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	cmp     #$C9
	txa
	sbc     #$00
	bvc     L0349
	eor     #$80
L0349:	bpl     L034E
	lda     _out_val1
	beq     L034E
;
; py.misc.srh  = tmp_val;
;
	lda     (sp),y
	sta     _py+50
;
; sprintf(out_val1, "Current=%d  (-1-18) Stealth = ", py.misc.stl);
;
L034E:	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #<(L0351)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(L0351)
	sta     (sp),y
	ldx     #$00
	lda     _py+69
	bpl     L0354
	dex
L0354:	jsr     pushax
	ldy     #$06
	jsr     _sprintf
;
; tmp_val = strlen(out_val1);
;
	ldy     #$FF
L0358:	iny
	lda     _out_val1,y
	bne     L0358
	tax
	tya
	ldy     #$04
	jsr     staxysp
;
; bank_prt(out_val1, 0, 0, WIZARDNUM);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	txa
	ldy     #$01
	sta     (sp),y
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_prt
;
; if (bank_get_string(out_val1, 0, tmp_val, 3, WIZARDNUM)) {
;
	jsr     decsp5
	lda     #<(_out_val1)
	ldy     #$03
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #$00
	ldy     #$02
	sta     (sp),y
	ldy     #$09
	lda     (sp),y
	ldy     #$01
	sta     (sp),y
	lda     #$03
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_get_string
	tax
	bne     L059F
;
; }
;
	jmp     incsp6
;
; tmp_val = atoi(out_val1);
;
L059F:	lda     #<(_out_val1)
	ldx     #>(_out_val1)
	jsr     _atoi
	ldy     #$04
	jsr     staxysp
;
; if ((tmp_val > -2) && (tmp_val < 19) && (*out_val1 != '\0'))
;
	cmp     #$FF
	txa
	sbc     #$FF
	bvs     L036B
	eor     #$80
L036B:	bpl     L0374
	ldy     #$05
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	cmp     #$13
	txa
	sbc     #$00
	bvc     L036E
	eor     #$80
L036E:	bpl     L0374
	lda     _out_val1
	beq     L0374
;
; py.misc.stl  = tmp_val;
;
	lda     (sp),y
	sta     _py+69
;
; sprintf(out_val1, "Current=%d  (0-200) Disarming = ", py.misc.disarm);
;
L0374:	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #<(L0377)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(L0377)
	sta     (sp),y
	lda     _py+66
	jsr     pusha0
	ldy     #$06
	jsr     _sprintf
;
; tmp_val = strlen(out_val1);
;
	ldy     #$FF
L037D:	iny
	lda     _out_val1,y
	bne     L037D
	tax
	tya
	ldy     #$04
	jsr     staxysp
;
; bank_prt(out_val1, 0, 0, WIZARDNUM);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	txa
	ldy     #$01
	sta     (sp),y
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_prt
;
; if (bank_get_string(out_val1, 0, tmp_val, 3, WIZARDNUM)) {
;
	jsr     decsp5
	lda     #<(_out_val1)
	ldy     #$03
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #$00
	ldy     #$02
	sta     (sp),y
	ldy     #$09
	lda     (sp),y
	ldy     #$01
	sta     (sp),y
	lda     #$03
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_get_string
	tax
	bne     L05A0
;
; }
;
	jmp     incsp6
;
; tmp_val = atoi(out_val1);
;
L05A0:	lda     #<(_out_val1)
	ldx     #>(_out_val1)
	jsr     _atoi
	ldy     #$04
	jsr     staxysp
;
; if ((tmp_val > -1) && (tmp_val < 201) && (*out_val1 != '\0'))
;
	txa
	bmi     L0397
	ldy     #$05
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	cmp     #$C9
	txa
	sbc     #$00
	bvc     L0392
	eor     #$80
L0392:	bpl     L0397
	lda     _out_val1
	beq     L0397
;
; py.misc.disarm = tmp_val;
;
	lda     (sp),y
	sta     _py+66
;
; sprintf(out_val1, "Current=%d  (0-100) Save = ", py.misc.save);
;
L0397:	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #<(L039A)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(L039A)
	sta     (sp),y
	lda     _py+67
	jsr     pusha0
	ldy     #$06
	jsr     _sprintf
;
; tmp_val = strlen(out_val1);
;
	ldy     #$FF
L03A0:	iny
	lda     _out_val1,y
	bne     L03A0
	tax
	tya
	ldy     #$04
	jsr     staxysp
;
; bank_prt(out_val1, 0, 0, WIZARDNUM);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	txa
	ldy     #$01
	sta     (sp),y
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_prt
;
; if (bank_get_string(out_val1, 0, tmp_val, 3, WIZARDNUM)) {
;
	jsr     decsp5
	lda     #<(_out_val1)
	ldy     #$03
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #$00
	ldy     #$02
	sta     (sp),y
	ldy     #$09
	lda     (sp),y
	ldy     #$01
	sta     (sp),y
	lda     #$03
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_get_string
	tax
	bne     L05A1
;
; }
;
	jmp     incsp6
;
; tmp_val = atoi(out_val1);
;
L05A1:	lda     #<(_out_val1)
	ldx     #>(_out_val1)
	jsr     _atoi
	ldy     #$04
	jsr     staxysp
;
; if ((tmp_val > -1) && (tmp_val < 201) && (*out_val1 != '\0'))
;
	txa
	bmi     L03BA
	ldy     #$05
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	cmp     #$C9
	txa
	sbc     #$00
	bvc     L03B5
	eor     #$80
L03B5:	bpl     L03BA
	lda     _out_val1
	beq     L03BA
;
; py.misc.save = tmp_val;
;
	lda     (sp),y
	sta     _py+67
;
; sprintf(out_val1, "Current=%d  (0-200) Base to hit = ", py.misc.bth);
;
L03BA:	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #<(L03BD)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(L03BD)
	sta     (sp),y
	lda     _py+52
	jsr     pusha0
	ldy     #$06
	jsr     _sprintf
;
; tmp_val = strlen(out_val1);
;
	ldy     #$FF
L03C3:	iny
	lda     _out_val1,y
	bne     L03C3
	tax
	tya
	ldy     #$04
	jsr     staxysp
;
; bank_prt(out_val1, 0, 0, WIZARDNUM);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	txa
	ldy     #$01
	sta     (sp),y
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_prt
;
; if (bank_get_string(out_val1, 0, tmp_val, 3, WIZARDNUM)) {
;
	jsr     decsp5
	lda     #<(_out_val1)
	ldy     #$03
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #$00
	ldy     #$02
	sta     (sp),y
	ldy     #$09
	lda     (sp),y
	ldy     #$01
	sta     (sp),y
	lda     #$03
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_get_string
	tax
	bne     L05A2
;
; }
;
	jmp     incsp6
;
; tmp_val = atoi(out_val1);
;
L05A2:	lda     #<(_out_val1)
	ldx     #>(_out_val1)
	jsr     _atoi
	ldy     #$04
	jsr     staxysp
;
; if ((tmp_val > -1) && (tmp_val < 201) && (*out_val1 != '\0'))
;
	txa
	bmi     L03DD
	ldy     #$05
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	cmp     #$C9
	txa
	sbc     #$00
	bvc     L03D8
	eor     #$80
L03D8:	bpl     L03DD
	lda     _out_val1
	beq     L03DD
;
; py.misc.bth  = tmp_val;
;
	lda     (sp),y
	sta     _py+52
;
; sprintf(out_val1, "Current=%d  (0-200) Bows/Throwing = ", py.misc.bthb);
;
L03DD:	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #<(L03E0)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(L03E0)
	sta     (sp),y
	lda     _py+53
	jsr     pusha0
	ldy     #$06
	jsr     _sprintf
;
; tmp_val = strlen(out_val1);
;
	ldy     #$FF
L03E6:	iny
	lda     _out_val1,y
	bne     L03E6
	tax
	tya
	ldy     #$04
	jsr     staxysp
;
; bank_prt(out_val1, 0, 0, WIZARDNUM);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	txa
	ldy     #$01
	sta     (sp),y
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_prt
;
; if (bank_get_string(out_val1, 0, tmp_val, 3, WIZARDNUM)) {
;
	jsr     decsp5
	lda     #<(_out_val1)
	ldy     #$03
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #$00
	ldy     #$02
	sta     (sp),y
	ldy     #$09
	lda     (sp),y
	ldy     #$01
	sta     (sp),y
	lda     #$03
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_get_string
	tax
	bne     L05A3
;
; }
;
	jmp     incsp6
;
; tmp_val = atoi(out_val1);
;
L05A3:	lda     #<(_out_val1)
	ldx     #>(_out_val1)
	jsr     _atoi
	ldy     #$04
	jsr     staxysp
;
; if ((tmp_val > -1) && (tmp_val < 201) && (*out_val1 != '\0'))
;
	txa
	bmi     L0400
	ldy     #$05
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	cmp     #$C9
	txa
	sbc     #$00
	bvc     L03FB
	eor     #$80
L03FB:	bpl     L0400
	lda     _out_val1
	beq     L0400
;
; py.misc.bthb = tmp_val;
;
	lda     (sp),y
	sta     _py+53
;
; sprintf(out_val1, "Current=%d  Weight = ", py.misc.wt);
;
L0400:	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #<(L0403)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(L0403)
	sta     (sp),y
	lda     _py+46
	ldx     _py+46+1
	jsr     pushax
	ldy     #$06
	jsr     _sprintf
;
; tmp_val = strlen(out_val1);
;
	ldy     #$FF
L0409:	iny
	lda     _out_val1,y
	bne     L0409
	tax
	tya
	ldy     #$04
	jsr     staxysp
;
; bank_prt(out_val1, 0, 0, WIZARDNUM);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	txa
	ldy     #$01
	sta     (sp),y
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_prt
;
; if (bank_get_string(out_val1, 0, tmp_val, 3, WIZARDNUM)) {
;
	jsr     decsp5
	lda     #<(_out_val1)
	ldy     #$03
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #$00
	ldy     #$02
	sta     (sp),y
	ldy     #$09
	lda     (sp),y
	ldy     #$01
	sta     (sp),y
	lda     #$03
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_get_string
	tax
	beq     L0422
;
; tmp_val = atoi(out_val1);
;
	lda     #<(_out_val1)
	ldx     #>(_out_val1)
	jsr     _atoi
	ldy     #$04
	jsr     staxysp
;
; if (tmp_val > -1 && (*out_val1 != '\0'))
;
	txa
	bmi     L0423
	lda     _out_val1
	beq     L0423
;
; py.misc.wt = tmp_val;
;
	ldy     #$05
	lda     (sp),y
	sta     _py+46+1
	dey
	lda     (sp),y
	sta     _py+46
;
; else
;
	jmp     L0423
;
; if (*out_val1 == '+')
;
L0421:	lda     _out_val1
	cmp     #$2B
	bne     L0593
;
; wizard_change_speed(-1);
;
	lda     #$FF
;
; else if (*out_val1 == '-')
;
	jmp     L0594
L0593:	lda     _out_val1
	cmp     #$2D
	bne     L0422
;
; wizard_change_speed(1);
;
	lda     #$01
L0594:	jsr     _wizard_change_speed
;
; bank_prt_speed(WIZARDNUM);
;
	lda     #$32
	jsr     _bank_prt_speed
;
; while(bank_get_com("Alter speed? (+/-)", out_val1, WIZARDNUM)) {
;
L0423:	jsr     decsp4
	lda     #<(L0425)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(L0425)
	sta     (sp),y
	lda     #<(_out_val1)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #$32
	jsr     _bank_get_com
	tax
	bne     L0421
;
; }
;
L0422:	jmp     incsp6

.endproc

; ---------------------------------------------------------------
; void __near__ wizard_display_player (void)
; ---------------------------------------------------------------

.segment	"WIZARDBANK"

.proc	_wizard_display_player: near

.segment	"WIZARDBANK"

;
; bank_vbxe_clear(WIZARDNUM);
;
	lda     #$32
	jsr     _bank_vbxe_clear
;
; bank_prt("Player Structure - Misc & Stats", 0, 0, WIZARDNUM);
;
	jsr     decsp4
	lda     #<(L0439)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(L0439)
	sta     (sp),y
	lda     #$00
	ldy     #$01
	sta     (sp),y
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_prt
;
; sprintf(out_val1, "male:    %-3d                                srh:     %-3d", py.misc.male, py.misc.srh);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #<(L0440)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(L0440)
	sta     (sp),y
	lda     _py+27
	jsr     pusha0
	lda     _py+50
	jsr     pusha0
	ldy     #$08
	jsr     _sprintf
;
; bank_prt(out_val1, 2, 0, WIZARDNUM);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #$02
	ldy     #$01
	sta     (sp),y
	lda     #$00
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_prt
;
; sprintf(out_val1, "age:     %-5d                              fos:     %-4d", py.misc.age, py.misc.fos);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #<(L044B)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(L044B)
	sta     (sp),y
	lda     _py+42
	ldx     _py+42+1
	jsr     pushax
	ldx     #$00
	lda     _py+51
	bpl     L044F
	dex
L044F:	jsr     pushax
	ldy     #$08
	jsr     _sprintf
;
; bank_prt(out_val1, 3, 0, WIZARDNUM);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	tya
	ldy     #$01
	sta     (sp),y
	lda     #$00
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_prt
;
; sprintf(out_val1, "ht:      %-5d                              bth:     %-3d", py.misc.ht, py.misc.bth);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #<(L0457)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(L0457)
	sta     (sp),y
	lda     _py+44
	ldx     _py+44+1
	jsr     pushax
	lda     _py+52
	jsr     pusha0
	ldy     #$08
	jsr     _sprintf
;
; bank_prt(out_val1, 4, 0, WIZARDNUM);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #$04
	ldy     #$01
	sta     (sp),y
	lda     #$00
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_prt
;
; sprintf(out_val1, "sc:      %-4d                               bthb:    %-3d", py.misc.sc, py.misc.bthb);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #<(L0462)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(L0462)
	sta     (sp),y
	ldx     #$00
	lda     _py+68
	bpl     L0465
	dex
L0465:	jsr     pushax
	lda     _py+53
	jsr     pusha0
	ldy     #$08
	jsr     _sprintf
;
; bank_prt(out_val1, 5, 0, WIZARDNUM);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #$05
	ldy     #$01
	sta     (sp),y
	lda     #$00
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_prt
;
; sprintf(out_val1, "pclass:  %-3d                                ptohit:  %-4d dis_th:  %-4d", py.misc.pclass, py.misc.ptohit, py.misc.dis_th);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #<(L046E)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(L046E)
	sta     (sp),y
	lda     _py+70
	jsr     pusha0
	lda     _py+58
	bpl     L0472
	ldx     #$FF
L0472:	jsr     pushax
	ldx     #$00
	lda     _py+62
	bpl     L0474
	dex
L0474:	jsr     pushax
	ldy     #$0A
	jsr     _sprintf
;
; bank_prt(out_val1, 6, 0, WIZARDNUM);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #$06
	ldy     #$01
	sta     (sp),y
	lda     #$00
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_prt
;
; sprintf(out_val1, "prace:   %-3d                                ptodam:  %-4d dis_td:  %-4d", py.misc.prace, py.misc.ptodam, py.misc.dis_td);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #<(L047C)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(L047C)
	sta     (sp),y
	lda     _py+71
	jsr     pusha0
	lda     _py+59
	bpl     L0480
	ldx     #$FF
L0480:	jsr     pushax
	ldx     #$00
	lda     _py+63
	bpl     L0482
	dex
L0482:	jsr     pushax
	ldy     #$0A
	jsr     _sprintf
;
; bank_prt(out_val1, 7, 0, WIZARDNUM);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #$07
	ldy     #$01
	sta     (sp),y
	lda     #$00
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_prt
;
; sprintf(out_val1, "lev:     %-3d       max_dlv:    %-3d          pac:     %-4d dis_ac:  %-4d", py.misc.lev, py.misc.max_dlv, py.misc.pac, py.misc.dis_ac);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #<(L048A)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(L048A)
	sta     (sp),y
	lda     _py+48
	jsr     pusha0
	lda     _py+49
	jsr     pusha0
	lda     _py+60
	bpl     L048F
	ldx     #$FF
L048F:	jsr     pushax
	ldx     #$00
	lda     _py+64
	bpl     L0491
	dex
L0491:	jsr     pushax
	ldy     #$0C
	jsr     _sprintf
;
; bank_prt(out_val1, 8, 0, WIZARDNUM);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #$08
	ldy     #$01
	sta     (sp),y
	lda     #$00
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_prt
;
; sprintf(out_val1, "hitdie:  %-3d                                ptoac:   %-4d  dis_tac: %-4d", py.misc.hitdie, py.misc.ptoac, py.misc.dis_tac);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #<(L0499)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(L0499)
	sta     (sp),y
	lda     _py+72
	jsr     pusha0
	lda     _py+61
	bpl     L049D
	ldx     #$FF
L049D:	jsr     pushax
	ldx     #$00
	lda     _py+65
	bpl     L049F
	dex
L049F:	jsr     pushax
	ldy     #$0A
	jsr     _sprintf
;
; bank_prt(out_val1, 9, 0, WIZARDNUM);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #$09
	ldy     #$01
	sta     (sp),y
	lda     #$00
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_prt
;
; sprintf(out_val1, "au:      %-8ld                           disarm:  %-3d", py.misc.au, py.misc.disarm);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #<(L04A7)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(L04A7)
	sta     (sp),y
	lda     _py+28+3
	sta     sreg+1
	lda     _py+28+2
	sta     sreg
	ldx     _py+28+1
	lda     _py+28
	jsr     pusheax
	lda     _py+66
	jsr     pusha0
	ldy     #$0A
	jsr     _sprintf
;
; bank_prt(out_val1, 10, 0, WIZARDNUM);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #$0A
	ldy     #$01
	sta     (sp),y
	lda     #$00
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_prt
;
; sprintf(out_val1, "expfact: %-3d                                save:    %-3d", py.misc.expfact, py.misc.save);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #<(L04B2)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(L04B2)
	sta     (sp),y
	lda     _py+73
	jsr     pusha0
	lda     _py+67
	jsr     pusha0
	ldy     #$08
	jsr     _sprintf
;
; bank_prt(out_val1, 11, 0, WIZARDNUM);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #$0B
	ldy     #$01
	sta     (sp),y
	lda     #$00
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_prt
;
; sprintf(out_val1, "max_exp: %-8ld                           stl:     %-4d", py.misc.max_exp, py.misc.stl);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #<(L04BD)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(L04BD)
	sta     (sp),y
	lda     _py+32+3
	sta     sreg+1
	lda     _py+32+2
	sta     sreg
	ldx     _py+32+1
	lda     _py+32
	jsr     pusheax
	ldx     #$00
	lda     _py+69
	bpl     L04C1
	dex
L04C1:	jsr     pushax
	ldy     #$0A
	jsr     _sprintf
;
; bank_prt(out_val1, 12, 0, WIZARDNUM);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #$0C
	ldy     #$01
	sta     (sp),y
	lda     #$00
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_prt
;
; sprintf(out_val1, "exp:     %-8ld  exp_frac:   %-5d", py.misc.exp, py.misc.exp_frac);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #<(L04C9)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(L04C9)
	sta     (sp),y
	lda     _py+36+3
	sta     sreg+1
	lda     _py+36+2
	sta     sreg
	ldx     _py+36+1
	lda     _py+36
	jsr     pusheax
	lda     _py+40
	ldx     _py+40+1
	jsr     pushax
	ldy     #$0A
	jsr     _sprintf
;
; bank_prt(out_val1, 13, 0, WIZARDNUM);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #$0D
	ldy     #$01
	sta     (sp),y
	lda     #$00
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_prt
;
; sprintf(out_val1, "mhp:     %-5d                                   Max  Cur  Mod  Use", py.misc.mhp);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #<(L04D4)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(L04D4)
	sta     (sp),y
	lda     _py+56
	ldx     _py+56+1
	jsr     pushax
	ldy     #$06
	jsr     _sprintf
;
; bank_prt(out_val1, 14, 0, WIZARDNUM);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #$0E
	ldy     #$01
	sta     (sp),y
	lda     #$00
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_prt
;
; sprintf(out_val1, "chp:     %-5d     chp_frac:   %-5d        STR  %-3d  %-3d  %-4d %-3d", py.misc.chp, py.misc.chp_frac, py.stats.max_stat[A_STR], py.stats.cur_stat[A_STR], py.stats.mod_stat[A_STR], py.stats.use_stat[A_STR]);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #<(L04DE)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(L04DE)
	sta     (sp),y
	lda     _py+78
	ldx     _py+78+1
	jsr     pushax
	lda     _py+80
	ldx     _py+80+1
	jsr     pushax
	lda     _py+322
	jsr     pusha0
	lda     _py+328
	jsr     pusha0
	lda     _py+334
	bpl     L04E8
	ldx     #$FF
L04E8:	jsr     pushax
	lda     _py+340
	jsr     pusha0
	ldy     #$10
	jsr     _sprintf
;
; bank_prt(out_val1, 15, 0, WIZARDNUM);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #$0F
	ldy     #$01
	sta     (sp),y
	lda     #$00
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_prt
;
; sprintf(out_val1, "mana:    %-5d                              INT  %-3d  %-3d  %-4d %-3d", py.misc.mana, py.stats.max_stat[A_INT], py.stats.cur_stat[A_INT], py.stats.mod_stat[A_INT], py.stats.use_stat[A_INT]);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #<(L04F2)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(L04F2)
	sta     (sp),y
	lda     _py+54
	ldx     _py+54+1
	jsr     pushax
	lda     _py+323
	jsr     pusha0
	lda     _py+329
	jsr     pusha0
	lda     _py+335
	bpl     L04FB
	ldx     #$FF
L04FB:	jsr     pushax
	lda     _py+341
	jsr     pusha0
	ldy     #$0E
	jsr     _sprintf
;
; bank_prt(out_val1, 16, 0, WIZARDNUM);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #$10
	ldy     #$01
	sta     (sp),y
	lda     #$00
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_prt
;
; sprintf(out_val1, "cmana:   %-5d     cmana_frac: %-5d        WIS  %-3d  %-3d  %-4d %-3d", py.misc.cmana, py.misc.cmana_frac, py.stats.max_stat[A_WIS], py.stats.cur_stat[A_WIS], py.stats.mod_stat[A_WIS], py.stats.use_stat[A_WIS]);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #<(L0505)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(L0505)
	sta     (sp),y
	lda     _py+74
	ldx     _py+74+1
	jsr     pushax
	lda     _py+76
	ldx     _py+76+1
	jsr     pushax
	lda     _py+324
	jsr     pusha0
	lda     _py+330
	jsr     pusha0
	lda     _py+336
	bpl     L050F
	ldx     #$FF
L050F:	jsr     pushax
	lda     _py+342
	jsr     pusha0
	ldy     #$10
	jsr     _sprintf
;
; bank_prt(out_val1, 17, 0, WIZARDNUM);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #$11
	ldy     #$01
	sta     (sp),y
	lda     #$00
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_prt
;
; sprintf(out_val1, "DEX  %-3d  %-3d  %-4d %-3d", py.stats.max_stat[A_DEX], py.stats.cur_stat[A_DEX], py.stats.mod_stat[A_DEX], py.stats.use_stat[A_DEX]);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #<(L0519)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(L0519)
	sta     (sp),y
	lda     _py+325
	jsr     pusha0
	lda     _py+331
	jsr     pusha0
	lda     _py+337
	bpl     L0521
	ldx     #$FF
L0521:	jsr     pushax
	lda     _py+343
	jsr     pusha0
	ldy     #$0C
	jsr     _sprintf
;
; bank_prt(out_val1, 18, 44, WIZARDNUM);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #$12
	ldy     #$01
	sta     (sp),y
	lda     #$2C
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_prt
;
; sprintf(out_val1, "CON  %-3d  %-3d  %-4d %-3d", py.stats.max_stat[A_CON], py.stats.cur_stat[A_CON], py.stats.mod_stat[A_CON], py.stats.use_stat[A_CON]);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #<(L052B)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(L052B)
	sta     (sp),y
	lda     _py+326
	jsr     pusha0
	lda     _py+332
	jsr     pusha0
	lda     _py+338
	bpl     L0533
	ldx     #$FF
L0533:	jsr     pushax
	lda     _py+344
	jsr     pusha0
	ldy     #$0C
	jsr     _sprintf
;
; bank_prt(out_val1, 19, 44, WIZARDNUM);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #$13
	ldy     #$01
	sta     (sp),y
	lda     #$2C
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_prt
;
; sprintf(out_val1, "CHR  %-3d  %-3d  %-4d %-3d", py.stats.max_stat[A_CHR], py.stats.cur_stat[A_CHR], py.stats.mod_stat[A_CHR], py.stats.use_stat[A_CHR]);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #<(L053D)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(L053D)
	sta     (sp),y
	lda     _py+327
	jsr     pusha0
	lda     _py+333
	jsr     pusha0
	lda     _py+339
	bpl     L0545
	ldx     #$FF
L0545:	jsr     pushax
	lda     _py+345
	jsr     pusha0
	ldy     #$0C
	jsr     _sprintf
;
; bank_prt(out_val1, 20, 44, WIZARDNUM);
;
	jsr     decsp4
	lda     #<(_out_val1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #$14
	ldy     #$01
	sta     (sp),y
	lda     #$2C
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_prt
;
; bank_prt("press any key", 23, 32, WIZARDNUM);
;
	jsr     decsp4
	lda     #<(L054E)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(L054E)
	sta     (sp),y
	lda     #$17
	ldy     #$01
	sta     (sp),y
	lda     #$20
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_prt
;
; cgetc();
;
	jmp     _cgetc

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ __fastcall__ enter_wiz_mode (void)
; ---------------------------------------------------------------

.segment	"WIZARDBANK"

.proc	_enter_wiz_mode: near

.segment	"WIZARDBANK"

;
; if (!noscore) {
;
	jsr     decsp1
	lda     _noscore
	bne     L00F3
;
; bank_msg_print("Wizard mode is for debugging and experimenting.", WIZARDNUM);
;
	lda     #<(L00F6)
	ldx     #>(L00F6)
	jsr     pushax
	lda     #$32
	jsr     _bank_msg_print
;
; answer = wizard_get_check("The game will not be scored if you enter wizard mode. Are you sure?");
;
	lda     #<(L00FB)
	ldx     #>(L00FB)
	jsr     _wizard_get_check
	ldy     #$00
	sta     (sp),y
;
; if (noscore || answer) {
;
L00F3:	lda     _noscore
	bne     L00FE
	tay
	lda     (sp),y
	bne     L00FE
	tax
	jmp     incsp1
;
; noscore |= 0x2;
;
L00FE:	lda     _noscore
	ora     #$02
	sta     _noscore
;
; wizard = TRUE;
;
	lda     #$01
	sta     _wizard
;
; return(TRUE);
;
	ldx     #$00
	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; void __near__ __fastcall__ wizard_commands (unsigned char)
; ---------------------------------------------------------------

.segment	"WIZARDBANK"

.proc	_wizard_commands: near

.segment	"WIZARDBANK"

;
; {
;
	jsr     pusha
;
; free_turn_flag = TRUE; // Wizard commands are free moves
;
	jsr     decsp3
	lda     #$01
	sta     _free_turn_flag
;
; switch(com_val) {
;
	ldy     #$03
	lda     (sp),y
;
; }
;
	cmp     #$01
	beq     L015E
	cmp     #$03
	jeq     L0182
	cmp     #$04
	jeq     L05AB
	cmp     #$05
	jeq     L017B
	cmp     #$06
	jeq     L018A
	cmp     #$07
	jeq     L05A8
	cmp     #$09
	jeq     L01DD
	cmp     #$14
	jeq     L01E9
	cmp     #$26
	jeq     L05B1
	cmp     #$2A
	jeq     L01E1
	cmp     #$2B
	jeq     L05B0
	cmp     #$3A
	jeq     L01E4
	cmp     #$40
	bne     L05B3
;
; }
;
	jmp     incsp4
;
; }
;
L05B3:	cmp     #$5C
	jeq     L01D5
	jmp     L0211
;
; bank_remove_curse(WIZARDNUM);
;
L015E:	lda     #$32
	jsr     _bank_remove_curse
;
; wizard_cure_blindness();
;
	jsr     _wizard_cure_blindness
;
; wizard_cure_confusion();
;
	jsr     _wizard_cure_confusion
;
; wizard_cure_poison();
;
	jsr     _wizard_cure_poison
;
; wizard_remove_fear();
;
	jsr     _wizard_remove_fear
;
; wizard_res_stat(A_STR);
;
	lda     #$00
	jsr     _wizard_res_stat
;
; wizard_res_stat(A_INT);
;
	lda     #$01
	jsr     _wizard_res_stat
;
; wizard_res_stat(A_WIS);
;
	lda     #$02
	jsr     _wizard_res_stat
;
; wizard_res_stat(A_CON);
;
	lda     #$04
	jsr     _wizard_res_stat
;
; wizard_res_stat(A_DEX);
;
	lda     #$03
	jsr     _wizard_res_stat
;
; wizard_res_stat(A_CHR);
;
	lda     #$05
	jsr     _wizard_res_stat
;
; if (py.flags.slow > 1)
;
	lda     _py+362
	cmp     #$02
	bcc     L05A7
;
; py.flags.slow = 1;
;
	lda     #$01
	sta     _py+362
;
; if (py.flags.image > 1)
;
L05A7:	lda     _py+365
	cmp     #$02
	bcs     L05B4
;
; }
;
	jmp     incsp4
;
; py.flags.image = 1;
;
L05B4:	lda     #$01
	sta     _py+365
;
; break;
;
	jmp     incsp4
;
; change_character();
;
L017B:	jsr     _change_character
;
; wizard_erase_line(MSG_LINE, 0);
;
	lda     #$00
	jsr     pusha
	jsr     _wizard_erase_line
;
; break;
;
	jmp     incsp4
;
; bank_vbxe_savescreen(WIZARDNUM);
;
L0182:	lda     #$32
	jsr     _bank_vbxe_savescreen
;
; wizard_display_player();
;
	jsr     _wizard_display_player
;
; bank_vbxe_restorescreen(WIZARDNUM);
;
	lda     #$32
	jsr     _bank_vbxe_restorescreen
;
; break;
;
	jmp     incsp4
;
; bank_mass_genocide(WIZARDNUM);
;
L018A:	lda     #$32
	jsr     _bank_mass_genocide
;
; break;
;
	jmp     incsp4
;
; if (command_count > 0) {
;
L05A8:	lda     _command_count
	beq     L05A9
;
; i = command_count;
;
	dey
	sta     (sp),y
;
; command_count = 0;
;
	lda     #$00
	sta     _command_count
;
; else
;
	jmp     L0197
;
; i = 1;
;
L05A9:	lda     #$01
	dey
	sta     (sp),y
;
; bank_random_object(char_row, char_col, i, WIZARDNUM);
;
L0197:	jsr     decsp4
	lda     _char_row
	iny
	sta     (sp),y
	lda     _char_col
	dey
	sta     (sp),y
	ldy     #$06
	ldx     #$00
	lda     (sp),y
	cmp     #$80
	bcc     L019F
	dex
L019F:	ldy     #$00
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	lda     #$32
	jsr     _bank_random_object
;
; bank_prt_map(WIZARDNUM);
;
	lda     #$32
	jsr     _bank_prt_map
;
; break;
;
	jmp     incsp4
;
; if (command_count > 0) {
;
L05AB:	lda     _command_count
	beq     L01A6
;
; if (command_count > 99)
;
	cmp     #$64
	bcc     L05AC
;
; i = 0;
;
	lda     #$00
;
; else
;
	jmp     L05B2
;
; i = command_count;
;
L05AC:	lda     _command_count
L05B2:	dey
	sta     (sp),y
;
; command_count = 0;
;
	lda     #$00
	sta     _command_count
;
; else {
;
	jmp     L05AE
;
; bank_prt("Go to which level (0-99) ? ", 0, 0, WIZARDNUM);
;
L01A6:	jsr     decsp4
	lda     #<(L01B4)
	dey
	sta     (sp),y
	iny
	lda     #>(L01B4)
	sta     (sp),y
	lda     #$00
	ldy     #$01
	sta     (sp),y
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_prt
;
; i = -1;
;
	lda     #$FF
	ldy     #$02
	sta     (sp),y
;
; if (bank_get_string(out_val1, 0, 27, 10, WIZARDNUM))
;
	jsr     decsp5
	lda     #<(_out_val1)
	iny
	sta     (sp),y
	iny
	lda     #>(_out_val1)
	sta     (sp),y
	lda     #$00
	ldy     #$02
	sta     (sp),y
	lda     #$1B
	dey
	sta     (sp),y
	lda     #$0A
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_get_string
	tax
	beq     L01BB
;
; i = atoi(out_val1);
;
	lda     #<(_out_val1)
	ldx     #>(_out_val1)
	jsr     _atoi
	ldy     #$02
	sta     (sp),y
;
; if (i > -1) {
;
L01BB:	ldy     #$02
L05AE:	lda     (sp),y
	tax
	bmi     L01C5
;
; dun_level = i;
;
	lda     (sp),y
	sta     _dun_level
;
; if (dun_level > 99)
;
	cmp     #$64
	bcc     L05AF
;
; dun_level = 99;
;
	lda     #$63
	sta     _dun_level
;
; new_level_flag = TRUE;
;
L05AF:	lda     #$01
	sta     _new_level_flag
;
; else
;
	jmp     incsp4
;
; wizard_erase_line(MSG_LINE, 0);
;
L01C5:	lda     #$00
	jsr     pusha
	jsr     _wizard_erase_line
;
; break;
;
	jmp     incsp4
;
; bank_vbxe_savescreen(WIZARDNUM);
;
L01D5:	lda     #$32
	jsr     _bank_vbxe_savescreen
;
; bank_display_wizard_help();
;
	jsr     _bank_display_wizard_help
;
; bank_vbxe_restorescreen(WIZARDNUM);
;
	lda     #$32
	jsr     _bank_vbxe_restorescreen
;
; break;
;
	jmp     incsp4
;
; bank_ident_spell(WIZARDNUM);
;
L01DD:	lda     #$32
	jsr     _bank_ident_spell
;
; break;
;
	jmp     incsp4
;
; wizard_light();
;
L01E1:	jsr     _wizard_light
;
; break;
;
	jmp     incsp4
;
; bank_map_area(WIZARDNUM);
;
L01E4:	lda     #$32
	jsr     _bank_map_area
;
; break;
;
	jmp     incsp4
;
; bank_teleport(100, WIZARDNUM);
;
L01E9:	lda     #$64
	jsr     pusha
	lda     #$32
	jsr     _bank_teleport
;
; break;
;
	jmp     incsp4
;
; if (command_count > 0) {
;
L05B0:	lda     _command_count
	beq     L01EF
;
; py.misc.exp = command_count;
;
	ldx     #$00
	sta     _py+36
	stx     _py+36+1
	stx     _py+36+2
	stx     _py+36+3
;
; command_count = 0;
;
	stx     _command_count
;
; else if (py.misc.exp == 0)
;
	jmp     L01FA
L01EF:	lda     _py+36+3
	sta     sreg+1
	lda     _py+36+2
	sta     sreg
	ldx     _py+36+1
	lda     _py+36
	jsr     pusheax
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	jsr     toseqeax
	beq     L01F6
;
; py.misc.exp = 1;
;
	ldx     #$00
	lda     #$01
	sta     _py+36
	stx     _py+36+1
	ldy     #$00
	stx     _py+36+2
;
; else
;
	jmp     L05A6
;
; py.misc.exp = py.misc.exp * 2;
;
L01F6:	lda     _py+36+3
	sta     sreg+1
	lda     _py+36+2
	sta     sreg
	ldx     _py+36+1
	lda     _py+36
	jsr     asleax1
	sta     _py+36
	stx     _py+36+1
	ldy     sreg
	sty     _py+36+2
	ldy     sreg+1
L05A6:	sty     _py+36+3
;
; bank_prt_experience(WIZARDNUM);
;
L01FA:	lda     #$32
	jsr     _bank_prt_experience
;
; break;
;
	jmp     incsp4
;
; y = char_row;
;
L05B1:	lda     _char_row
	ldy     #$01
	sta     (sp),y
;
; x = char_col;
;
	lda     _char_col
	dey
	sta     (sp),y
;
; bank_summon_monster(&y, &x, TRUE, WIZARDNUM);
;
	jsr     decsp5
	lda     sp
	ldx     sp+1
	clc
	adc     #$06
	bcc     L0207
	inx
L0207:	ldy     #$03
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	lda     sp
	ldx     sp+1
	clc
	adc     #$05
	bcc     L0209
	inx
L0209:	ldy     #$01
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	lda     #$01
	ldy     #$00
	sta     (sp),y
	lda     #$32
	jsr     _bank_summon_monster
;
; bank_creatures(FALSE, WIZARDNUM);
;
	lda     #$00
	jsr     pusha
	lda     #$32
	jsr     _bank_creatures
;
; break;
;
	jmp     incsp4
;
; bank_prt("Type '?' or '\\' for help.", 0, 0, WIZARDNUM);
;
L0211:	jsr     decsp4
	lda     #<(L0213)
	dey
	sta     (sp),y
	iny
	lda     #>(L0213)
	sta     (sp),y
	lda     #$00
	ldy     #$01
	sta     (sp),y
	dey
	sta     (sp),y
	lda     #$32
	jsr     _bank_prt
;
; }
;
	jmp     incsp4

.endproc

