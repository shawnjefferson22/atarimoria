;
; File generated by cc65 v 2.13.9
;
	.fopt		compiler,"cc65 v 2.13.9"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.import		_vbxe_bank
	.import		_missile_ctr
	.import		_t_list
	.import		_create1_randnor
	.export		_magic_treasure
	.import		_randint
	.export		_magik
	.export		_m_bonus

.segment	"DATA"

.segment	"MAGICTBANK"

.segment	"RODATA"

.segment	"MAGICTBANK"

; ---------------------------------------------------------------
; void __near__ __fastcall__ magic_treasure (unsigned char, unsigned char)
; ---------------------------------------------------------------

.segment	"MAGICTBANK"

.proc	_magic_treasure: near

.segment	"MAGICTBANK"

;
; {
;
	jsr     pusha
;
; register inven_type *t_ptr;
;
	lda     regbank+4
	ldx     regbank+5
	jsr     pushax
;
; register int8u chance, special, cursed;
;
	lda     regbank+3
	jsr     pusha
	lda     regbank+2
	jsr     pusha
	lda     regbank+1
	jsr     pusha
;
; vbxe_bank(VBXE_OBJBANK);
;
	jsr     decsp4
	lda     #$88
	jsr     _vbxe_bank
;
; chance = OBJ_BASE_MAGIC + level;
;
	ldy     #$09
	lda     (sp),y
	clc
	adc     #$0F
	sta     regbank+3
;
; if (chance > OBJ_BASE_MAX)
;
	cmp     #$47
	bcc     L06FD
;
; chance = OBJ_BASE_MAX;
;
	lda     #$46
	sta     regbank+3
;
; special = chance / OBJ_DIV_SPECIAL;
;
L06FD:	lda     regbank+3
	jsr     pusha0
	lda     #$06
	jsr     tosudiva0
	sta     regbank+2
;
; cursed  = (10 * chance) / OBJ_DIV_CURSED;     // FIXME: intermediate calculation can be int?
;
	lda     #$0A
	jsr     pusha0
	lda     regbank+3
	jsr     tosumula0
	jsr     pushax
	lda     #$0D
	jsr     tosudiva0
	sta     regbank+1
;
; t_ptr = &t_list[x];
;
	ldy     #$0A
	lda     (sp),y
	jsr     pusha0
	lda     #$28
	jsr     tosmula0
	clc
	adc     #<(_t_list)
	sta     regbank+4
	txa
	adc     #>(_t_list)
	sta     regbank+4+1
;
; switch (t_ptr->tval)
;
	ldy     #$14
	ldx     #$00
	lda     (regbank+4),y
;
; }
;
	cmp     #$02
	jeq     L05C7
	cmp     #$0A
	jeq     L0707
	cmp     #$0B
	jeq     L0707
	cmp     #$0C
	jeq     L0707
	cmp     #$0D
	jeq     L0707
	cmp     #$0F
	jeq     L041D
	cmp     #$14
	jeq     L0177
	cmp     #$15
	jeq     L00BC
	cmp     #$16
	jeq     L00BC
	cmp     #$17
	jeq     L00BC
	cmp     #$19
	jeq     L019A
	cmp     #$1E
	jeq     L0201
	cmp     #$1F
	jeq     L01B6
	cmp     #$20
	jeq     L0552
	cmp     #$21
	jeq     L025B
	cmp     #$22
	beq     L0067
	cmp     #$23
	beq     L0067
	cmp     #$24
	beq     L0067
	cmp     #$28
	jeq     L03E7
	cmp     #$2D
	jeq     L0344
	cmp     #$37
	jeq     L04BE
	cmp     #$41
	jeq     L0428
	cmp     #$46
	jeq     L06B6
	cmp     #$4B
	jeq     L06CB
	cmp     #$50
	jeq     L06AB
	jmp     L0065
;
; if (magik(chance))
;
L0067:	lda     regbank+3
	jsr     _magik
	tax
	jeq     L006C
;
; t_ptr->toac += m_bonus(1, 30, level);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$23
	jsr     ldaidx
	jsr     pushax
	jsr     decsp4
	lda     #$01
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     #$1E
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$11
	lda     (sp),y
	jsr     _m_bonus
	jsr     tosaddax
	ldy     #$23
	jsr     staspidx
;
; if (magik(special))
;
	lda     regbank+2
	jsr     _magik
	tax
	jeq     L0065
;
; switch(randint(9))
;
	ldx     #$00
	lda     #$09
	jsr     _randint
;
; }
;
	cpx     #$00
	jne     L0065
	cmp     #$01
	beq     L007C
	cmp     #$02
	jeq     L0087
	cmp     #$03
	jeq     L008F
	cmp     #$04
	jeq     L008F
	cmp     #$05
	jeq     L0099
	cmp     #$06
	jeq     L0099
	cmp     #$07
	jeq     L00A3
	cmp     #$08
	jeq     L00A3
	cmp     #$09
	jeq     L00A3
	jmp     L0065
;
; t_ptr->flags |= (TR_RES_LIGHT|TR_RES_COLD|TR_RES_ACID|TR_RES_FIRE);
;
L007C:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$00
	lda     #$38
	sta     sreg
	lda     #$02
	sta     sreg+1
	txa
	jsr     tosoreax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->name2 = SN_R;
;
	lda     #$01
	ldy     #$02
	sta     (regbank+4),y
;
; t_ptr->toac += 5;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$23
	jsr     ldaidx
	clc
	adc     #$05
	jsr     staspidx
;
; t_ptr->cost += 2500;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$09
	lda     #$C4
	jsr     tosadd0ax
	ldy     #$18
;
; break;
;
	jmp     L06F4
;
; t_ptr->flags |= TR_RES_ACID;
;
L0087:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$00
	stx     sreg+1
	lda     #$10
	sta     sreg
	txa
	jsr     tosoreax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->name2 = SN_RA;
;
	lda     #$02
	tay
	sta     (regbank+4),y
;
; t_ptr->cost += 1000;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$03
	lda     #$E8
	jsr     tosadd0ax
	ldy     #$18
;
; break;
;
	jmp     L06F4
;
; t_ptr->flags |= TR_RES_FIRE;
;
L008F:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$00
	stx     sreg+1
	lda     #$08
	sta     sreg
	txa
	jsr     tosoreax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->name2 = SN_RF;
;
	lda     #$03
	ldy     #$02
	sta     (regbank+4),y
;
; t_ptr->cost += 600;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$02
	lda     #$58
	jsr     tosadd0ax
	ldy     #$18
;
; break;
;
	jmp     L06F4
;
; t_ptr->flags |= TR_RES_COLD;
;
L0099:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$00
	stx     sreg+1
	lda     #$20
	sta     sreg
	txa
	jsr     tosoreax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->name2 = SN_RC;
;
	lda     #$04
	ldy     #$02
	sta     (regbank+4),y
;
; t_ptr->cost += 600;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$02
	lda     #$58
	jsr     tosadd0ax
	ldy     #$18
;
; break;
;
	jmp     L06F4
;
; t_ptr->flags |= TR_RES_LIGHT;
;
L00A3:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$00
	stx     sreg
	lda     #$02
	sta     sreg+1
	txa
	jsr     tosoreax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->name2 = SN_RL;
;
	lda     #$05
	ldy     #$02
	sta     (regbank+4),y
;
; t_ptr->cost += 500;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$01
	lda     #$F4
	jsr     tosadd0ax
	ldy     #$18
;
; break;
;
	jmp     L06F4
;
; else if (magik(cursed))
;
L006C:	lda     regbank+1
	jsr     _magik
	tax
	jeq     L0065
;
; t_ptr->toac -= m_bonus(1, 40, level);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$23
	jsr     ldaidx
	jsr     pushax
	jsr     decsp4
	lda     #$01
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     #$28
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$11
	lda     (sp),y
	jsr     _m_bonus
	jsr     tossubax
	ldy     #$23
	jsr     staspidx
;
; t_ptr->cost = 0;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	ldy     #$18
	jsr     steaxspidx
;
; t_ptr->flags |= TR_CURSED;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$00
	stx     sreg
	lda     #$80
	sta     sreg+1
	txa
	jsr     tosoreax
	ldy     #$10
L06F4:	jsr     steaxspidx
;
; break;
;
	jmp     L0065
;
; t_ptr->ident |= ID_SHOW_HITDAM;
;
L00BC:	ldy     #$27
	lda     (regbank+4),y
	ora     #$20
	sta     (regbank+4),y
;
; if (magik(chance))
;
	lda     regbank+3
	jsr     _magik
	tax
	jeq     L00C3
;
; t_ptr->tohit += m_bonus(0, 40, level);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$20
	jsr     ldaidx
	jsr     pushax
	jsr     decsp4
	lda     #$00
	ldy     #$02
	sta     (sp),y
	iny
	sta     (sp),y
	lda     #$28
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$11
	lda     (sp),y
	jsr     _m_bonus
	jsr     tosaddax
	ldy     #$20
	jsr     staspidx
;
; tmp = t_ptr->damage[0] * t_ptr->damage[1];
;
	ldy     #$24
	lda     (regbank+4),y
	jsr     pusha0
	ldy     #$25
	lda     (regbank+4),y
	jsr     tosumula0
	jsr     stax0sp
;
; t_ptr->todam += m_bonus(0, 4*tmp, tmp*level/10);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$21
	jsr     ldaidx
	jsr     pushax
	jsr     decsp4
	lda     #$00
	ldy     #$02
	sta     (sp),y
	iny
	sta     (sp),y
	lda     #$04
	jsr     pusha0
	ldy     #$0B
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     tosumulax
	ldy     #$00
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	ldy     #$0B
	jsr     pushwysp
	ldy     #$13
	lda     (sp),y
	jsr     tosumula0
	jsr     pushax
	lda     #$0A
	jsr     tosudiva0
	jsr     _m_bonus
	jsr     tosaddax
	ldy     #$21
	jsr     staspidx
;
; if (magik(3*special/2))
;
	lda     #$03
	jsr     pusha0
	lda     regbank+2
	jsr     tosumula0
	jsr     shrax1
	jsr     _magik
	tax
	jeq     L0065
;
; switch(randint(16))
;
	ldx     #$00
	lda     #$10
	jsr     _randint
;
; }
;
	cpx     #$00
	jne     L0065
	cmp     #$01
	beq     L00DE
	cmp     #$02
	jeq     L00F3
	cmp     #$03
	jeq     L0109
	cmp     #$04
	jeq     L0109
	cmp     #$05
	jeq     L0117
	cmp     #$06
	jeq     L0117
	cmp     #$07
	jeq     L0125
	cmp     #$08
	jeq     L0125
	cmp     #$09
	jeq     L0133
	cmp     #$0A
	jeq     L0133
	cmp     #$0B
	jeq     L0142
	cmp     #$0C
	jeq     L0142
	cmp     #$0D
	jeq     L0142
	cmp     #$0E
	jeq     L0151
	cmp     #$0F
	jeq     L0151
	cmp     #$10
	jeq     L0151
	jmp     L0065
;
; t_ptr->flags |= (TR_SEE_INVIS|TR_SUST_STAT|TR_SLAY_UNDEAD|TR_SLAY_EVIL|TR_STR);
;
L00DE:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$80
	lda     #$41
	sta     sreg
	lda     #$01
	sta     sreg+1
	jsr     tosoreax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->tohit += 5;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$20
	jsr     ldaidx
	clc
	adc     #$05
	jsr     staspidx
;
; t_ptr->todam += 5;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$21
	jsr     ldaidx
	clc
	adc     #$05
	jsr     staspidx
;
; t_ptr->toac  += randint(4);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$23
	jsr     ldaidx
	jsr     pushax
	ldx     #$00
	lda     #$04
	jsr     _randint
	jsr     tosaddax
	ldy     #$23
	jsr     staspidx
;
; t_ptr->p1    = randint(4);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$04
	jsr     _randint
	ldy     #$16
	jsr     staxspidx
;
; t_ptr->name2 = SN_HA;
;
	lda     #$06
	ldy     #$02
	sta     (regbank+4),y
;
; t_ptr->cost += t_ptr->p1*500;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	jsr     pusheax
	ldy     #$17
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	jsr     pushax
	ldx     #$01
	lda     #$F4
	jsr     tosmulax
	jsr     axlong
	jsr     tosaddeax
	ldy     #$18
	jsr     steaxspidx
;
; t_ptr->cost += 10000;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$27
	lda     #$10
	jsr     tosadd0ax
;
; break;
;
	jmp     L0711
;
; t_ptr->flags |= (TR_FFALL|TR_RES_LIGHT|TR_SEE_INVIS|TR_FREE_ACT|TR_RES_COLD|TR_RES_ACID|TR_RES_FIRE|TR_REGEN|TR_STEALTH);
;
L00F3:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$09
	lda     #$B8
	sta     sreg
	lda     #$07
	sta     sreg+1
	lda     #$00
	jsr     tosoreax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->tohit += 3;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$20
	jsr     ldaidx
	clc
	adc     #$03
	jsr     staspidx
;
; t_ptr->todam += 3;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$21
	jsr     ldaidx
	clc
	adc     #$03
	jsr     staspidx
;
; t_ptr->toac  += 5 + randint(5);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$23
	jsr     ldaidx
	jsr     pushax
	ldx     #$00
	lda     #$05
	jsr     _randint
	clc
	adc     #$05
	bcc     L00FE
	inx
L00FE:	jsr     tosaddax
	ldy     #$23
	jsr     staspidx
;
; t_ptr->name2 = SN_DF;
;
	lda     #$07
	ldy     #$02
	sta     (regbank+4),y
;
; t_ptr->p1    = randint(3);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$03
	jsr     _randint
	ldy     #$16
	jsr     staxspidx
;
; t_ptr->cost += t_ptr->p1*500;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	jsr     pusheax
	ldy     #$17
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	jsr     pushax
	ldx     #$01
	lda     #$F4
	jsr     tosmulax
	jsr     axlong
	jsr     tosaddeax
	ldy     #$18
	jsr     steaxspidx
;
; t_ptr->cost += 7500;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$1D
	lda     #$4C
	jsr     tosadd0ax
;
; break;
;
	jmp     L0711
;
; t_ptr->flags |= TR_SLAY_ANIMAL;
;
L0109:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$40
	lda     #$00
	jsr     tosor0ax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->tohit += 3;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$20
	jsr     ldaidx
	clc
	adc     #$03
	jsr     staspidx
;
; t_ptr->todam += 3;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$21
	jsr     ldaidx
	clc
	adc     #$03
	jsr     staspidx
;
; t_ptr->name2 = SN_SA;
;
	lda     #$08
	ldy     #$02
	sta     (regbank+4),y
;
; t_ptr->cost += 5000;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$13
	lda     #$88
	jsr     tosadd0ax
;
; break;
;
	jmp     L0711
;
; t_ptr->flags |= TR_SLAY_DRAGON;
;
L0117:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$20
	lda     #$00
	jsr     tosor0ax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->tohit += 3;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$20
	jsr     ldaidx
	clc
	adc     #$03
	jsr     staspidx
;
; t_ptr->todam += 3;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$21
	jsr     ldaidx
	clc
	adc     #$03
	jsr     staspidx
;
; t_ptr->name2 = SN_SD;
;
	lda     #$09
	ldy     #$02
	sta     (regbank+4),y
;
; t_ptr->cost += 4000;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$0F
	lda     #$A0
	jsr     tosadd0ax
;
; break;
;
	jmp     L0711
;
; t_ptr->flags |= TR_SLAY_EVIL;
;
L0125:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$80
	lda     #$00
	jsr     tosor0ax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->tohit += 3;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$20
	jsr     ldaidx
	clc
	adc     #$03
	jsr     staspidx
;
; t_ptr->todam += 3;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$21
	jsr     ldaidx
	clc
	adc     #$03
	jsr     staspidx
;
; t_ptr->name2 = SN_SE;
;
	lda     #$0A
	ldy     #$02
	sta     (regbank+4),y
;
; t_ptr->cost += 4000;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$0F
	lda     #$A0
	jsr     tosadd0ax
;
; break;
;
	jmp     L0711
;
; t_ptr->flags |= (TR_SEE_INVIS|TR_SLAY_UNDEAD);
;
L0133:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$00
	lda     #$01
	sta     sreg
	sta     sreg+1
	txa
	jsr     tosoreax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->tohit += 2;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$20
	jsr     ldaidx
	clc
	adc     #$02
	jsr     staspidx
;
; t_ptr->todam += 2;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$21
	jsr     ldaidx
	clc
	adc     #$02
	jsr     staspidx
;
; t_ptr->name2 = SN_SU;
;
	lda     #$0B
	ldy     #$02
	sta     (regbank+4),y
;
; t_ptr->cost += 3000;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$0B
	lda     #$B8
	jsr     tosadd0ax
;
; break;
;
	jmp     L0711
;
; t_ptr->flags |= TR_FLAME_TONGUE;
;
L0142:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$00
	stx     sreg+1
	lda     #$04
	sta     sreg
	txa
	jsr     tosoreax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->tohit++;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$20
	jsr     ldaidx
	clc
	adc     #$01
	jsr     staspidx
;
; t_ptr->todam += 3;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$21
	jsr     ldaidx
	clc
	adc     #$03
	jsr     staspidx
;
; t_ptr->name2 = SN_FT;
;
	lda     #$0C
	ldy     #$02
	sta     (regbank+4),y
;
; t_ptr->cost += 2000;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$07
	lda     #$D0
	jsr     tosadd0ax
;
; break;
;
	jmp     L0711
;
; t_ptr->flags |= TR_FROST_BRAND;
;
L0151:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$00
	stx     sreg+1
	lda     #$02
	sta     sreg
	txa
	jsr     tosoreax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->tohit++;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$20
	jsr     ldaidx
	clc
	adc     #$01
	jsr     staspidx
;
; t_ptr->todam++;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$21
	jsr     ldaidx
	clc
	adc     #$01
	jsr     staspidx
;
; t_ptr->name2 = SN_FB;
;
	lda     #$0D
	ldy     #$02
	sta     (regbank+4),y
;
; t_ptr->cost += 1200;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$04
	lda     #$B0
	jsr     tosadd0ax
;
; break;
;
	jmp     L0711
;
; else if (magik(cursed))
;
L00C3:	lda     regbank+1
	jsr     _magik
	tax
	jeq     L0065
;
; t_ptr->tohit -= m_bonus(1, 55, level);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$20
	jsr     ldaidx
	jsr     pushax
	jsr     decsp4
	lda     #$01
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     #$37
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$11
	lda     (sp),y
	jsr     _m_bonus
	jsr     tossubax
	ldy     #$20
	jsr     staspidx
;
; tmp = t_ptr->damage[0] * t_ptr->damage[1];
;
	ldy     #$24
	lda     (regbank+4),y
	jsr     pusha0
	ldy     #$25
	lda     (regbank+4),y
	jsr     tosumula0
	jsr     stax0sp
;
; t_ptr->todam -= m_bonus(1, 11*tmp/2, tmp*level/10);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$21
	jsr     ldaidx
	jsr     pushax
	jsr     decsp4
	lda     #$01
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     #$0B
	jsr     pusha0
	tay
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     tosumulax
	jsr     shrax1
	ldy     #$00
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	ldy     #$0B
	jsr     pushwysp
	ldy     #$13
	lda     (sp),y
	jsr     tosumula0
	jsr     pushax
	lda     #$0A
	jsr     tosudiva0
	jsr     _m_bonus
	jsr     tossubax
	ldy     #$21
	jsr     staspidx
;
; t_ptr->flags |= TR_CURSED;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$00
	stx     sreg
	lda     #$80
	sta     sreg+1
	txa
	jsr     tosoreax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->cost = 0;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
L0711:	ldy     #$18
	jsr     steaxspidx
;
; break;
;
	jmp     L0065
;
; t_ptr->ident |= ID_SHOW_HITDAM;
;
L0177:	ldy     #$27
	lda     (regbank+4),y
	ora     #$20
	sta     (regbank+4),y
;
; if (magik(chance))
;
	lda     regbank+3
	jsr     _magik
	tax
	beq     L017A
;
; t_ptr->tohit += m_bonus(1, 30, level);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$20
	jsr     ldaidx
	jsr     pushax
	jsr     decsp4
	lda     #$01
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     #$1E
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$11
	lda     (sp),y
	jsr     _m_bonus
	jsr     tosaddax
	ldy     #$20
	jsr     staspidx
;
; t_ptr->todam += m_bonus(1, 20, level); /* add damage. -CJS- */
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$21
	jsr     ldaidx
	jsr     pushax
	jsr     decsp4
	lda     #$01
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     #$14
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$11
	lda     (sp),y
	jsr     _m_bonus
	jsr     tosaddax
	ldy     #$21
	jsr     staspidx
;
; else if (magik(cursed))
;
	jmp     L0065
L017A:	lda     regbank+1
	jsr     _magik
	tax
	jeq     L0065
;
; t_ptr->tohit -= m_bonus(1, 50, level);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$20
	jsr     ldaidx
	jsr     pushax
	jsr     decsp4
	lda     #$01
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     #$32
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$11
	lda     (sp),y
	jsr     _m_bonus
	jsr     tossubax
	ldy     #$20
	jsr     staspidx
;
; t_ptr->todam -= m_bonus(1, 30, level); /* add damage. -CJS- */
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$21
	jsr     ldaidx
	jsr     pushax
	jsr     decsp4
	lda     #$01
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     #$1E
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$11
	lda     (sp),y
	jsr     _m_bonus
	jsr     tossubax
	ldy     #$21
	jsr     staspidx
;
; t_ptr->flags |= TR_CURSED;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$00
	stx     sreg
	lda     #$80
	sta     sreg+1
	txa
	jsr     tosoreax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->cost = 0;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	ldy     #$18
	jsr     steaxspidx
;
; break;
;
	jmp     L0065
;
; t_ptr->ident |= ID_SHOW_HITDAM;
;
L019A:	ldy     #$27
	lda     (regbank+4),y
	ora     #$20
	sta     (regbank+4),y
;
; if (magik(chance))
;
	lda     regbank+3
	jsr     _magik
	tax
	jeq     L0065
;
; tmp = randint(3);
;
	ldx     #$00
	lda     #$03
	jsr     _randint
	jsr     stax0sp
;
; if (tmp < 3)
;
	cpx     #$00
	bne     L01A5
	cmp     #$03
L01A5:	bcs     L01A3
;
; t_ptr->p1 += m_bonus(0, 25, level);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	sta     ptr1
	stx     ptr1+1
	ldy     #$17
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     pushax
	jsr     decsp4
	lda     #$00
	ldy     #$02
	sta     (sp),y
	iny
	sta     (sp),y
	lda     #$19
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$11
	lda     (sp),y
	jsr     _m_bonus
	jsr     tosaddax
	ldy     #$16
	jsr     staxspidx
;
; else
;
	jmp     L0065
;
; t_ptr->p1 = -m_bonus(1, 30, level);
;
L01A3:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	jsr     decsp4
	lda     #$01
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     #$1E
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$0F
	lda     (sp),y
	jsr     _m_bonus
	jsr     negax
	ldx     #$00
	ldy     #$16
	jsr     staxspidx
;
; t_ptr->cost = 0;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	ldy     #$18
	jsr     steaxspidx
;
; t_ptr->flags |= TR_CURSED;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$00
	stx     sreg
	lda     #$80
	sta     sreg+1
	txa
	jsr     tosoreax
	ldy     #$10
	jsr     steaxspidx
;
; break;
;
	jmp     L0065
;
; if (magik(chance))
;
L01B6:	lda     regbank+3
	jsr     _magik
	tax
	jeq     L01B7
;
; t_ptr->toac += m_bonus(1, 20, level);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$23
	jsr     ldaidx
	jsr     pushax
	jsr     decsp4
	lda     #$01
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     #$14
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$11
	lda     (sp),y
	jsr     _m_bonus
	jsr     tosaddax
	ldy     #$23
	jsr     staspidx
;
; if (magik(special))
;
	lda     regbank+2
	jsr     _magik
	tax
	jeq     L0065
;
; if (randint(2) == 1)
;
	ldx     #$00
	lda     #$02
	jsr     _randint
	cpx     #$00
	bne     L01C2
	cmp     #$01
	bne     L01C2
;
; t_ptr->flags |= TR_FREE_ACT;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$00
	stx     sreg+1
	lda     #$80
	sta     sreg
	txa
	jsr     tosoreax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->name2 = SN_FREE_ACTION;
;
	lda     #$0E
	ldy     #$02
	sta     (regbank+4),y
;
; t_ptr->cost += 1000;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$03
	lda     #$E8
	jsr     tosadd0ax
;
; else
;
	jmp     L0712
;
; t_ptr->ident |= ID_SHOW_HITDAM;
;
L01C2:	ldy     #$27
	lda     (regbank+4),y
	ora     #$20
	sta     (regbank+4),y
;
; t_ptr->tohit += 1 + randint(3);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$20
	jsr     ldaidx
	jsr     pushax
	ldx     #$00
	lda     #$03
	jsr     _randint
	clc
	adc     #$01
	bcc     L01D2
	inx
L01D2:	jsr     tosaddax
	ldy     #$20
	jsr     staspidx
;
; t_ptr->todam += 1 + randint(3);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$21
	jsr     ldaidx
	jsr     pushax
	ldx     #$00
	lda     #$03
	jsr     _randint
	clc
	adc     #$01
	bcc     L01D6
	inx
L01D6:	jsr     tosaddax
	ldy     #$21
	jsr     staspidx
;
; t_ptr->name2 = SN_SLAYING;
;
	lda     #$0F
	ldy     #$02
	sta     (regbank+4),y
;
; t_ptr->cost += (t_ptr->tohit+t_ptr->todam)*250;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	jsr     pusheax
	lda     regbank+4
	ldx     regbank+4+1
	ldy     #$20
	jsr     ldaidx
	jsr     pushax
	lda     regbank+4
	ldx     regbank+4+1
	ldy     #$21
	jsr     ldaidx
	jsr     tosaddax
	jsr     pushax
	lda     #$FA
	jsr     tosmula0
	jsr     axlong
	jsr     tosaddeax
	ldy     #$18
	jsr     steaxspidx
;
; else if (magik(cursed))
;
	jmp     L0065
L01B7:	lda     regbank+1
	jsr     _magik
	tax
	jeq     L0065
;
; if (magik(special))
;
	lda     regbank+2
	jsr     _magik
	tax
	beq     L01E0
;
; if (randint(2) == 1)
;
	ldx     #$00
	lda     #$02
	jsr     _randint
	cpx     #$00
	bne     L01E3
	cmp     #$01
	bne     L01E3
;
; t_ptr->flags |= TR_DEX;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	ora     #$08
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->name2 = SN_CLUMSINESS;
;
	lda     #$10
;
; else
;
	jmp     L0713
;
; t_ptr->flags |= TR_STR;
;
L01E3:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	ora     #$01
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->name2 = SN_WEAKNESS;
;
	lda     #$11
L0713:	ldy     #$02
	sta     (regbank+4),y
;
; t_ptr->ident |= ID_SHOW_P1;
;
	ldy     #$27
	lda     (regbank+4),y
	ora     #$80
	sta     (regbank+4),y
;
; t_ptr->p1   = -m_bonus(1, 10, level);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	jsr     decsp4
	lda     #$01
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     #$0A
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$0F
	lda     (sp),y
	jsr     _m_bonus
	jsr     negax
	ldx     #$00
	ldy     #$16
	jsr     staxspidx
;
; t_ptr->toac -= m_bonus(1, 40, level);
;
L01E0:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$23
	jsr     ldaidx
	jsr     pushax
	jsr     decsp4
	lda     #$01
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     #$28
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$11
	lda     (sp),y
	jsr     _m_bonus
	jsr     tossubax
	ldy     #$23
	jsr     staspidx
;
; t_ptr->flags |= TR_CURSED;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$00
	stx     sreg
	lda     #$80
	sta     sreg+1
	txa
	jsr     tosoreax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->cost = 0;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
L0712:	ldy     #$18
	jsr     steaxspidx
;
; break;
;
	jmp     L0065
;
; if (magik(chance))
;
L0201:	lda     regbank+3
	jsr     _magik
	tax
	jeq     L0202
;
; t_ptr->toac += m_bonus(1, 20, level);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$23
	jsr     ldaidx
	jsr     pushax
	jsr     decsp4
	lda     #$01
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     #$14
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$11
	lda     (sp),y
	jsr     _m_bonus
	jsr     tosaddax
	ldy     #$23
	jsr     staspidx
;
; if (magik(special))
;
	lda     regbank+2
	jsr     _magik
	tax
	jeq     L0065
;
; tmp = randint(12);
;
	ldx     #$00
	lda     #$0C
	jsr     _randint
	jsr     stax0sp
;
; if (tmp > 5)
;
	cmp     #$06
	txa
	sbc     #$00
	bcc     L0210
;
; t_ptr->flags |= TR_FFALL;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$00
	stx     sreg
	lda     #$04
	sta     sreg+1
	txa
	jsr     tosoreax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->name2 = SN_SLOW_DESCENT;
;
	lda     #$12
	ldy     #$02
	sta     (regbank+4),y
;
; t_ptr->cost += 250;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	ldy     #$FA
	jsr     inceaxy
	ldy     #$18
;
; else if (tmp == 1)
;
	jmp     L06F8
L0210:	ldy     #$01
	lda     (sp),y
	bne     L0219
	dey
	lda     (sp),y
	cmp     #$01
	bne     L0219
;
; t_ptr->flags |= TR_SPEED;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$10
	lda     #$00
	jsr     tosor0ax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->name2 = SN_SPEED;
;
	lda     #$13
	ldy     #$02
	sta     (regbank+4),y
;
; t_ptr->ident |= ID_SHOW_P1;
;
	ldy     #$27
	lda     (regbank+4),y
	ora     #$80
	sta     (regbank+4),y
;
; t_ptr->p1 = 1;
;
	lda     #$01
	ldy     #$16
	sta     (regbank+4),y
	iny
	lda     #$00
	sta     (regbank+4),y
;
; t_ptr->cost += 5000;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$13
	lda     #$88
	jsr     tosadd0ax
	ldy     #$18
;
; else /* 2 - 5 */
;
	jmp     L06F8
;
; t_ptr->flags |= TR_STEALTH;
;
L0219:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$01
	lda     #$00
	jsr     tosor0ax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->ident |= ID_SHOW_P1;
;
	ldy     #$27
	lda     (regbank+4),y
	ora     #$80
	sta     (regbank+4),y
;
; t_ptr->p1 = randint(3);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$03
	jsr     _randint
	ldy     #$16
	jsr     staxspidx
;
; t_ptr->name2 = SN_STEALTH;
;
	lda     #$14
	ldy     #$02
	sta     (regbank+4),y
;
; t_ptr->cost += 500;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$01
	lda     #$F4
	jsr     tosadd0ax
	ldy     #$18
	jsr     steaxspidx
;
; else if (magik(cursed))
;
	jmp     L0065
L0202:	lda     regbank+1
	jsr     _magik
	tax
	jeq     L0065
;
; tmp = randint(3);
;
	ldx     #$00
	lda     #$03
	jsr     _randint
	jsr     stax0sp
;
; if (tmp == 1)
;
	cpx     #$00
	bne     L0239
	cmp     #$01
	bne     L0239
;
; t_ptr->flags |= TR_SPEED;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$10
	lda     #$00
	jsr     tosor0ax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->name2 = SN_SLOWNESS;
;
	lda     #$15
	ldy     #$02
	sta     (regbank+4),y
;
; t_ptr->ident |= ID_SHOW_P1;
;
	ldy     #$27
	lda     (regbank+4),y
	ora     #$80
	sta     (regbank+4),y
;
; t_ptr->p1 = -1;
;
	lda     #$FF
	ldy     #$16
	sta     (regbank+4),y
	iny
	sta     (regbank+4),y
;
; else if (tmp == 2)
;
	jmp     L024C
L0239:	ldy     #$01
	lda     (sp),y
	bne     L0245
	dey
	lda     (sp),y
	cmp     #$02
	bne     L0245
;
; t_ptr->flags |= TR_AGGRAVATE;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$02
	lda     #$00
	jsr     tosor0ax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->name2 = SN_NOISE;
;
	lda     #$16
	ldy     #$02
	sta     (regbank+4),y
;
; else
;
	jmp     L024C
;
; t_ptr->name2 = SN_GREAT_MASS;
;
L0245:	lda     #$17
	ldy     #$02
	sta     (regbank+4),y
;
; t_ptr->weight = t_ptr->weight * 5;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1F
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	jsr     mulax5
	jsr     staxspidx
;
; t_ptr->cost = 0;
;
L024C:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	ldy     #$18
	jsr     steaxspidx
;
; t_ptr->toac -= m_bonus(2, 45, level);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$23
	jsr     ldaidx
	jsr     pushax
	jsr     decsp4
	lda     #$02
	tay
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     #$2D
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$11
	lda     (sp),y
	jsr     _m_bonus
	jsr     tossubax
	ldy     #$23
	jsr     staspidx
;
; t_ptr->flags |= TR_CURSED;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$00
	stx     sreg
	lda     #$80
	sta     sreg+1
	txa
	jsr     tosoreax
	ldy     #$10
L06F8:	jsr     steaxspidx
;
; break;
;
	jmp     L0065
;
; if ((t_ptr->subval >= 6) && (t_ptr->subval <= 8))
;
L025B:	ldy     #$1C
	lda     (regbank+4),y
	cmp     #$06
	bcc     L025C
	lda     (regbank+4),y
	cmp     #$09
	bcs     L025C
;
; chance += (int) (t_ptr->cost / 100);
;
	lda     regbank+4
	ldx     regbank+4+1
	dey
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$00
	lda     #$64
	jsr     tosdiv0ax
	clc
	adc     regbank+3
	sta     regbank+3
;
; special += special;
;
	lda     regbank+2
	clc
	adc     regbank+2
	sta     regbank+2
;
; if (magik(chance))
;
L025C:	lda     regbank+3
	jsr     _magik
	tax
	jeq     L0267
;
; t_ptr->toac += m_bonus(1, 20, level);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$23
	jsr     ldaidx
	jsr     pushax
	jsr     decsp4
	lda     #$01
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     #$14
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$11
	lda     (sp),y
	jsr     _m_bonus
	jsr     tosaddax
	ldy     #$23
	jsr     staspidx
;
; if (magik(special))
;
	lda     regbank+2
	jsr     _magik
	tax
	jeq     L0065
;
; if (t_ptr->subval < 6)
;
	ldy     #$1C
	ldx     #$00
	lda     (regbank+4),y
	cmp     #$06
	jcs     L0701
;
; tmp = randint(3);
;
	lda     #$03
	jsr     _randint
	jsr     stax0sp
;
; t_ptr->ident |= ID_SHOW_P1;
;
	ldy     #$27
	lda     (regbank+4),y
	ora     #$80
	sta     (regbank+4),y
;
; if (tmp == 1)
;
	ldy     #$01
	lda     (sp),y
	bne     L0718
	dey
	lda     (sp),y
	cmp     #$01
	bne     L0279
;
; t_ptr->p1 = randint(2);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$02
	jsr     _randint
	ldy     #$16
	jsr     staxspidx
;
; t_ptr->flags |= TR_INT;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	ora     #$02
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->name2 = SN_INTELLIGENCE;
;
	lda     #$18
	ldy     #$02
	sta     (regbank+4),y
;
; t_ptr->cost += t_ptr->p1*500;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	jsr     pusheax
	ldy     #$17
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	jsr     pushax
	ldx     #$01
	lda     #$F4
	jsr     tosmulax
	jsr     axlong
	jsr     tosaddeax
	ldy     #$18
	jsr     steaxspidx
;
; else if (tmp == 2)
;
	jmp     L0065
L0279:	iny
L0718:	lda     (sp),y
	bne     L0286
	dey
	lda     (sp),y
	cmp     #$02
	bne     L0286
;
; t_ptr->p1 = randint(2);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$02
	jsr     _randint
	ldy     #$16
	jsr     staxspidx
;
; t_ptr->flags |= TR_WIS;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	ora     #$04
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->name2 = SN_WISDOM;
;
	lda     #$19
	ldy     #$02
	sta     (regbank+4),y
;
; t_ptr->cost += t_ptr->p1*500;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	jsr     pusheax
	ldy     #$17
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	jsr     pushax
	ldx     #$01
	lda     #$F4
	jsr     tosmulax
	jsr     axlong
	jsr     tosaddeax
	ldy     #$18
	jsr     steaxspidx
;
; else
;
	jmp     L0065
;
; t_ptr->p1 = 1 + randint(4);
;
L0286:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$04
	jsr     _randint
	clc
	adc     #$01
	bcc     L0296
	inx
L0296:	ldy     #$16
	jsr     staxspidx
;
; t_ptr->flags |= TR_INFRA;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$00
	stx     sreg
	lda     #$40
	sta     sreg+1
	txa
	jsr     tosoreax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->name2 = SN_INFRAVISION;
;
	lda     #$1A
	ldy     #$02
	sta     (regbank+4),y
;
; t_ptr->cost += t_ptr->p1*250;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	jsr     pusheax
	ldy     #$17
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	jsr     pushax
	lda     #$FA
	jsr     tosmula0
	jsr     axlong
	jsr     tosaddeax
	ldy     #$18
	jsr     steaxspidx
;
; else
;
	jmp     L0065
;
; switch(randint(6))
;
L0701:	lda     #$06
	jsr     _randint
;
; }
;
	cpx     #$00
	jne     L0065
	cmp     #$01
	beq     L02A3
	cmp     #$02
	jeq     L02B1
	cmp     #$03
	jeq     L02BF
	cmp     #$04
	jeq     L02CD
	cmp     #$05
	jeq     L02DA
	cmp     #$06
	jeq     L02EA
	jmp     L0065
;
; t_ptr->ident |= ID_SHOW_P1;
;
L02A3:	ldy     #$27
	lda     (regbank+4),y
	ora     #$80
	sta     (regbank+4),y
;
; t_ptr->p1 = randint(3);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$03
	jsr     _randint
	ldy     #$16
	jsr     staxspidx
;
; t_ptr->flags |= (TR_FREE_ACT|TR_CON|TR_DEX|TR_STR);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$00
	stx     sreg+1
	lda     #$80
	sta     sreg
	lda     #$19
	jsr     tosoreax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->name2 = SN_MIGHT;
;
	lda     #$1B
	ldy     #$02
	sta     (regbank+4),y
;
; t_ptr->cost += 1000 + t_ptr->p1*500;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	jsr     pusheax
	ldy     #$17
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	jsr     pushax
	ldx     #$01
	lda     #$F4
	jsr     tosmulax
	clc
	adc     #$E8
	pha
	txa
	adc     #$03
	tax
	pla
	jsr     axlong
	jsr     tosaddeax
	ldy     #$18
	jsr     steaxspidx
;
; break;
;
	jmp     L0065
;
; t_ptr->ident |= ID_SHOW_P1;
;
L02B1:	ldy     #$27
	lda     (regbank+4),y
	ora     #$80
	sta     (regbank+4),y
;
; t_ptr->p1 = randint(3);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$03
	jsr     _randint
	ldy     #$16
	jsr     staxspidx
;
; t_ptr->flags |= (TR_CHR|TR_WIS);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	ora     #$24
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->name2 = SN_LORDLINESS;
;
	lda     #$1C
	ldy     #$02
	sta     (regbank+4),y
;
; t_ptr->cost += 1000 + t_ptr->p1*500;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	jsr     pusheax
	ldy     #$17
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	jsr     pushax
	ldx     #$01
	lda     #$F4
	jsr     tosmulax
	clc
	adc     #$E8
	pha
	txa
	adc     #$03
	tax
	pla
	jsr     axlong
	jsr     tosaddeax
	ldy     #$18
	jsr     steaxspidx
;
; break;
;
	jmp     L0065
;
; t_ptr->ident |= ID_SHOW_P1;
;
L02BF:	ldy     #$27
	lda     (regbank+4),y
	ora     #$80
	sta     (regbank+4),y
;
; t_ptr->p1 = randint(3);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$03
	jsr     _randint
	ldy     #$16
	jsr     staxspidx
;
; t_ptr->flags |= (TR_RES_LIGHT|TR_RES_COLD|TR_RES_ACID|TR_RES_FIRE|TR_INT);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$00
	lda     #$38
	sta     sreg
	lda     #$02
	sta     sreg+1
	jsr     tosoreax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->name2 = SN_MAGI;
;
	lda     #$1D
	ldy     #$02
	sta     (regbank+4),y
;
; t_ptr->cost += 3000 + t_ptr->p1*500;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	jsr     pusheax
	ldy     #$17
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	jsr     pushax
	ldx     #$01
	lda     #$F4
	jsr     tosmulax
	clc
	adc     #$B8
	pha
	txa
	adc     #$0B
	tax
	pla
	jsr     axlong
	jsr     tosaddeax
	ldy     #$18
	jsr     steaxspidx
;
; break;
;
	jmp     L0065
;
; t_ptr->ident |= ID_SHOW_P1;
;
L02CD:	ldy     #$27
	lda     (regbank+4),y
	ora     #$80
	sta     (regbank+4),y
;
; t_ptr->p1 = randint(3);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$03
	jsr     _randint
	ldy     #$16
	jsr     staxspidx
;
; t_ptr->flags |= TR_CHR;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	ora     #$20
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->name2 = SN_BEAUTY;
;
	lda     #$1E
	ldy     #$02
	sta     (regbank+4),y
;
; t_ptr->cost += 750;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$02
	lda     #$EE
	jsr     tosadd0ax
	ldy     #$18
	jsr     steaxspidx
;
; break;
;
	jmp     L0065
;
; t_ptr->ident |= ID_SHOW_P1;
;
L02DA:	ldy     #$27
	lda     (regbank+4),y
	ora     #$80
	sta     (regbank+4),y
;
; t_ptr->p1 = 5*(1 + randint(4));
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	lda     #$05
	jsr     pusha0
	lda     #$04
	jsr     _randint
	clc
	adc     #$01
	bcc     L02E1
	inx
L02E1:	jsr     tosmulax
	ldy     #$16
	jsr     staxspidx
;
; t_ptr->flags |= (TR_SEE_INVIS|TR_SEARCH);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$00
	stx     sreg
	lda     #$01
	sta     sreg+1
	lda     #$40
	jsr     tosoreax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->name2 = SN_SEEING;
;
	lda     #$1F
	ldy     #$02
	sta     (regbank+4),y
;
; t_ptr->cost += 1000 + t_ptr->p1*100;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	jsr     pusheax
	ldy     #$17
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	jsr     pushax
	lda     #$64
	jsr     tosmula0
	clc
	adc     #$E8
	pha
	txa
	adc     #$03
	tax
	pla
	jsr     axlong
	jsr     tosaddeax
	ldy     #$18
	jsr     steaxspidx
;
; break;
;
	jmp     L0065
;
; t_ptr->flags |= TR_REGEN;
;
L02EA:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$08
	lda     #$00
	jsr     tosor0ax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->name2 = SN_REGENERATION;
;
	lda     #$20
	ldy     #$02
	sta     (regbank+4),y
;
; t_ptr->cost += 1500;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$05
	lda     #$DC
	jsr     tosadd0ax
	ldy     #$18
	jsr     steaxspidx
;
; break;
;
	jmp     L0065
;
; else if (magik(cursed))
;
L0267:	lda     regbank+1
	jsr     _magik
	tax
	jeq     L0065
;
; t_ptr->toac -= m_bonus(1, 45, level);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$23
	jsr     ldaidx
	jsr     pushax
	jsr     decsp4
	lda     #$01
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     #$2D
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$11
	lda     (sp),y
	jsr     _m_bonus
	jsr     tossubax
	ldy     #$23
	jsr     staspidx
;
; t_ptr->flags |= TR_CURSED;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$00
	stx     sreg
	lda     #$80
	sta     sreg+1
	txa
	jsr     tosoreax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->cost = 0;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	ldy     #$18
	jsr     steaxspidx
;
; if (magik(special))
;
	lda     regbank+2
	jsr     _magik
	tax
	jeq     L0065
;
; switch(randint(7))
;
	ldx     #$00
	lda     #$07
	jsr     _randint
;
; }
;
	cpx     #$00
	jne     L0065
	cmp     #$01
	beq     L0306
	cmp     #$02
	beq     L0311
	cmp     #$03
	jeq     L031C
	cmp     #$04
	jeq     L0322
	cmp     #$05
	jeq     L0328
	cmp     #$06
	jeq     L0333
	cmp     #$07
	jeq     L0339
	jmp     L0065
;
; t_ptr->ident |= ID_SHOW_P1;
;
L0306:	ldy     #$27
	lda     (regbank+4),y
	ora     #$80
	sta     (regbank+4),y
;
; t_ptr->p1 = -randint (5);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$05
	jsr     _randint
	jsr     negax
	ldy     #$16
	jsr     staxspidx
;
; t_ptr->flags |= TR_INT;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	ora     #$02
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->name2 = SN_STUPIDITY;
;
	lda     #$21
	ldy     #$02
;
; break;
;
	jmp     L0714
;
; t_ptr->ident |= ID_SHOW_P1;
;
L0311:	ldy     #$27
	lda     (regbank+4),y
	ora     #$80
	sta     (regbank+4),y
;
; t_ptr->p1 = -randint (5);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$05
	jsr     _randint
	jsr     negax
	ldy     #$16
	jsr     staxspidx
;
; t_ptr->flags |= TR_WIS;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	ora     #$04
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->name2 = SN_DULLNESS;
;
	lda     #$22
	ldy     #$02
;
; break;
;
	jmp     L0714
;
; t_ptr->flags |= TR_BLIND;
;
L031C:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$00
	stx     sreg
	lda     #$08
	sta     sreg+1
	txa
	jsr     tosoreax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->name2 = SN_BLINDNESS;
;
	lda     #$23
	ldy     #$02
;
; break;
;
	jmp     L0714
;
; t_ptr->flags |= TR_TIMID;
;
L0322:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$00
	stx     sreg
	lda     #$10
	sta     sreg+1
	txa
	jsr     tosoreax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->name2 = SN_TIMIDNESS;
;
	lda     #$24
	ldy     #$02
;
; break;
;
	jmp     L0714
;
; t_ptr->ident |= ID_SHOW_P1;
;
L0328:	ldy     #$27
	lda     (regbank+4),y
	ora     #$80
	sta     (regbank+4),y
;
; t_ptr->p1 = -randint (5);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$05
	jsr     _randint
	jsr     negax
	ldy     #$16
	jsr     staxspidx
;
; t_ptr->flags |= TR_STR;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	ora     #$01
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->name2 = SN_WEAKNESS;
;
	lda     #$11
	ldy     #$02
;
; break;
;
	jmp     L0714
;
; t_ptr->flags |= TR_TELEPORT;
;
L0333:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$04
	lda     #$00
	jsr     tosor0ax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->name2 = SN_TELEPORTATION;
;
	lda     #$25
	ldy     #$02
;
; break;
;
	jmp     L0714
;
; t_ptr->ident |= ID_SHOW_P1;
;
L0339:	ldy     #$27
	lda     (regbank+4),y
	ora     #$80
	sta     (regbank+4),y
;
; t_ptr->p1 = -randint (5);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$05
	jsr     _randint
	jsr     negax
	ldy     #$16
	jsr     staxspidx
;
; t_ptr->flags |= TR_CHR;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	ora     #$20
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->name2 = SN_UGLINESS;
;
	lda     #$26
	ldy     #$02
;
; break;
;
	jmp     L0714
;
; switch(t_ptr->subval)
;
L0344:	ldy     #$1C
	lda     (regbank+4),y
;
; }
;
	beq     L0349
	cmp     #$01
	beq     L0349
	cmp     #$02
	beq     L0349
	cmp     #$03
	beq     L0349
	cmp     #$04
	jeq     L0365
	cmp     #$05
	jeq     L0374
	cmp     #$13
	jeq     L0386
	cmp     #$14
	jeq     L0398
	cmp     #$15
	jeq     L03AA
	cmp     #$18
	jeq     L03BC
	cmp     #$19
	jeq     L03BC
	cmp     #$1A
	jeq     L03BC
	cmp     #$1B
	jeq     L03BC
	cmp     #$1C
	jeq     L03BC
	cmp     #$1D
	jeq     L03BC
	cmp     #$1E
	jeq     L03CA
	jmp     L0065
;
; if (magik(cursed))
;
L0349:	lda     regbank+1
	jsr     _magik
	tax
	beq     L0350
;
; t_ptr->p1 = -m_bonus(1, 20, level);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	jsr     decsp4
	lda     #$01
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     #$14
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$0F
	lda     (sp),y
	jsr     _m_bonus
	jsr     negax
	ldx     #$00
	ldy     #$16
	jsr     staxspidx
;
; t_ptr->flags |= TR_CURSED;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$00
	stx     sreg
	lda     #$80
	sta     sreg+1
	txa
	jsr     tosoreax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->cost = -t_ptr->cost;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	lda     regbank+4
	ldx     regbank+4+1
	ldy     #$1B
	jsr     ldeaxidx
	jsr     negeax
	ldy     #$18
	jsr     steaxspidx
;
; else
;
	jmp     L0065
;
; t_ptr->p1 = m_bonus(1, 10, level);
;
L0350:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	jsr     decsp4
	lda     #$01
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     #$0A
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$0F
	lda     (sp),y
	jsr     _m_bonus
	ldx     #$00
	ldy     #$16
	jsr     staxspidx
;
; t_ptr->cost += t_ptr->p1*100;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	jsr     pusheax
	ldy     #$17
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	jsr     pushax
	lda     #$64
	jsr     tosmula0
	jsr     axlong
	jsr     tosaddeax
	ldy     #$18
	jsr     steaxspidx
;
; break;
;
	jmp     L0065
;
; if (magik(cursed))
;
L0365:	lda     regbank+1
	jsr     _magik
	tax
	beq     L0366
;
; t_ptr->p1 = -randint(3);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$03
	jsr     _randint
	jsr     negax
	ldy     #$16
	jsr     staxspidx
;
; t_ptr->flags |= TR_CURSED;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$00
	stx     sreg
	lda     #$80
	sta     sreg+1
	txa
	jsr     tosoreax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->cost = -t_ptr->cost;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	lda     regbank+4
	ldx     regbank+4+1
	ldy     #$1B
	jsr     ldeaxidx
	jsr     negeax
	ldy     #$18
	jsr     steaxspidx
;
; else
;
	jmp     L0065
;
; t_ptr->p1 = 1;
;
L0366:	lda     #$01
	ldy     #$16
	sta     (regbank+4),y
	iny
	txa
;
; break;
;
	jmp     L0714
;
; t_ptr->p1 = 5 * m_bonus(1, 20, level);
;
L0374:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	lda     #$05
	jsr     pusha0
	jsr     decsp4
	lda     #$01
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     #$14
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$11
	lda     (sp),y
	jsr     _m_bonus
	jsr     tosumulax
	ldy     #$16
	jsr     staxspidx
;
; t_ptr->cost += t_ptr->p1*50;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	jsr     pusheax
	ldy     #$17
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	jsr     pushax
	lda     #$32
	jsr     tosmula0
	jsr     axlong
	jsr     tosaddeax
	ldy     #$18
	jsr     steaxspidx
;
; if (magik (cursed))
;
	lda     regbank+1
	jsr     _magik
	tax
	jeq     L0065
;
; t_ptr->p1 = -t_ptr->p1;
;
	ldy     #$17
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	jsr     negax
	sta     (regbank+4),y
	iny
	txa
	sta     (regbank+4),y
;
; t_ptr->flags |= TR_CURSED;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$00
	stx     sreg
	lda     #$80
	sta     sreg+1
	txa
	jsr     tosoreax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->cost = -t_ptr->cost;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	lda     regbank+4
	ldx     regbank+4+1
	ldy     #$1B
	jsr     ldeaxidx
	jsr     negeax
	ldy     #$18
	jsr     steaxspidx
;
; break;
;
	jmp     L0065
;
; t_ptr->todam += m_bonus(1, 20, level);
;
L0386:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$21
	jsr     ldaidx
	jsr     pushax
	jsr     decsp4
	lda     #$01
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     #$14
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$11
	lda     (sp),y
	jsr     _m_bonus
	jsr     tosaddax
	ldy     #$21
	jsr     staspidx
;
; t_ptr->cost += t_ptr->todam*100;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	jsr     pusheax
	lda     regbank+4
	ldx     regbank+4+1
	ldy     #$21
	jsr     ldaidx
	jsr     pushax
	lda     #$64
	jsr     tosmula0
	jsr     axlong
	jsr     tosaddeax
	ldy     #$18
	jsr     steaxspidx
;
; if (magik(cursed))
;
	lda     regbank+1
	jsr     _magik
	tax
	jeq     L0065
;
; t_ptr->todam = -t_ptr->todam;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	lda     regbank+4
	ldx     regbank+4+1
	ldy     #$21
	jsr     ldaidx
	jsr     negax
	jsr     staspidx
;
; t_ptr->flags |= TR_CURSED;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$00
	stx     sreg
	lda     #$80
	sta     sreg+1
	txa
	jsr     tosoreax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->cost = -t_ptr->cost;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	lda     regbank+4
	ldx     regbank+4+1
	ldy     #$1B
	jsr     ldeaxidx
	jsr     negeax
	ldy     #$18
	jsr     steaxspidx
;
; break;
;
	jmp     L0065
;
; t_ptr->tohit += m_bonus(1, 20, level);
;
L0398:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$20
	jsr     ldaidx
	jsr     pushax
	jsr     decsp4
	lda     #$01
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     #$14
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$11
	lda     (sp),y
	jsr     _m_bonus
	jsr     tosaddax
	ldy     #$20
	jsr     staspidx
;
; t_ptr->cost += t_ptr->tohit*100;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	jsr     pusheax
	lda     regbank+4
	ldx     regbank+4+1
	ldy     #$20
	jsr     ldaidx
	jsr     pushax
	lda     #$64
	jsr     tosmula0
	jsr     axlong
	jsr     tosaddeax
	ldy     #$18
	jsr     steaxspidx
;
; if (magik(cursed))
;
	lda     regbank+1
	jsr     _magik
	tax
	jeq     L0065
;
; t_ptr->tohit = -t_ptr->tohit;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	lda     regbank+4
	ldx     regbank+4+1
	ldy     #$20
	jsr     ldaidx
	jsr     negax
	jsr     staspidx
;
; t_ptr->flags |= TR_CURSED;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$00
	stx     sreg
	lda     #$80
	sta     sreg+1
	txa
	jsr     tosoreax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->cost = -t_ptr->cost;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	lda     regbank+4
	ldx     regbank+4+1
	ldy     #$1B
	jsr     ldeaxidx
	jsr     negeax
	ldy     #$18
	jsr     steaxspidx
;
; break;
;
	jmp     L0065
;
; t_ptr->toac += m_bonus(1, 20, level);
;
L03AA:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$23
	jsr     ldaidx
	jsr     pushax
	jsr     decsp4
	lda     #$01
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     #$14
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$11
	lda     (sp),y
	jsr     _m_bonus
	jsr     tosaddax
	ldy     #$23
	jsr     staspidx
;
; t_ptr->cost += t_ptr->toac*100;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	jsr     pusheax
	lda     regbank+4
	ldx     regbank+4+1
	ldy     #$23
	jsr     ldaidx
	jsr     pushax
	lda     #$64
	jsr     tosmula0
	jsr     axlong
	jsr     tosaddeax
	ldy     #$18
	jsr     steaxspidx
;
; if (magik(cursed))
;
	lda     regbank+1
	jsr     _magik
	tax
	jeq     L0065
;
; t_ptr->toac = -t_ptr->toac;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	lda     regbank+4
	ldx     regbank+4+1
	ldy     #$23
	jsr     ldaidx
	jsr     negax
	jsr     staspidx
;
; t_ptr->flags |= TR_CURSED;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$00
	stx     sreg
	lda     #$80
	sta     sreg+1
	txa
	jsr     tosoreax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->cost = -t_ptr->cost;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	lda     regbank+4
	ldx     regbank+4+1
	ldy     #$1B
	jsr     ldeaxidx
	jsr     negeax
	ldy     #$18
	jsr     steaxspidx
;
; break;
;
	jmp     L0065
;
; t_ptr->ident |= ID_NOSHOW_P1;
;
L03BC:	ldy     #$27
	lda     (regbank+4),y
	ora     #$40
;
; break;
;
	jmp     L0714
;
; t_ptr->ident |= ID_SHOW_HITDAM;
;
L03CA:	ldy     #$27
	lda     (regbank+4),y
	ora     #$20
	sta     (regbank+4),y
;
; t_ptr->todam += m_bonus(1, 25, level);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$21
	jsr     ldaidx
	jsr     pushax
	jsr     decsp4
	lda     #$01
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     #$19
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$11
	lda     (sp),y
	jsr     _m_bonus
	jsr     tosaddax
	ldy     #$21
	jsr     staspidx
;
; t_ptr->tohit += m_bonus(1, 25, level);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$20
	jsr     ldaidx
	jsr     pushax
	jsr     decsp4
	lda     #$01
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     #$19
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$11
	lda     (sp),y
	jsr     _m_bonus
	jsr     tosaddax
	ldy     #$20
	jsr     staspidx
;
; t_ptr->cost += (t_ptr->tohit+t_ptr->todam)*100;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	jsr     pusheax
	lda     regbank+4
	ldx     regbank+4+1
	ldy     #$20
	jsr     ldaidx
	jsr     pushax
	lda     regbank+4
	ldx     regbank+4+1
	ldy     #$21
	jsr     ldaidx
	jsr     tosaddax
	jsr     pushax
	lda     #$64
	jsr     tosmula0
	jsr     axlong
	jsr     tosaddeax
	ldy     #$18
	jsr     steaxspidx
;
; if (magik(cursed))
;
	lda     regbank+1
	jsr     _magik
	tax
	jeq     L0065
;
; t_ptr->tohit = -t_ptr->tohit;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	lda     regbank+4
	ldx     regbank+4+1
	ldy     #$20
	jsr     ldaidx
	jsr     negax
	jsr     staspidx
;
; t_ptr->todam = -t_ptr->todam;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	lda     regbank+4
	ldx     regbank+4+1
	ldy     #$21
	jsr     ldaidx
	jsr     negax
	jsr     staspidx
;
; t_ptr->flags |= TR_CURSED;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$00
	stx     sreg
	lda     #$80
	sta     sreg+1
	txa
	jsr     tosoreax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->cost = -t_ptr->cost;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	lda     regbank+4
	ldx     regbank+4+1
	ldy     #$1B
	jsr     ldeaxidx
	jsr     negeax
	ldy     #$18
	jsr     steaxspidx
;
; break;
;
	jmp     L0065
;
; if (t_ptr->subval < 2)
;
L03E7:	ldy     #$1C
	lda     (regbank+4),y
	cmp     #$02
	jcs     L0703
;
; if (magik(cursed))
;
	lda     regbank+1
	jsr     _magik
	tax
	beq     L03EA
;
; t_ptr->p1 = -m_bonus(1, 20, level);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	jsr     decsp4
	lda     #$01
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     #$14
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$0F
	lda     (sp),y
	jsr     _m_bonus
	jsr     negax
	ldx     #$00
	ldy     #$16
	jsr     staxspidx
;
; t_ptr->flags |= TR_CURSED;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$00
	stx     sreg
	lda     #$80
	sta     sreg+1
	txa
	jsr     tosoreax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->cost = -t_ptr->cost;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	lda     regbank+4
	ldx     regbank+4+1
	ldy     #$1B
	jsr     ldeaxidx
	jsr     negeax
;
; else
;
	jmp     L0715
;
; t_ptr->p1 = m_bonus(1, 10, level);
;
L03EA:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	jsr     decsp4
	lda     #$01
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     #$0A
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$0F
	lda     (sp),y
	jsr     _m_bonus
	ldx     #$00
	ldy     #$16
	jsr     staxspidx
;
; t_ptr->cost += t_ptr->p1*100;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	jsr     pusheax
	ldy     #$17
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	jsr     pushax
	lda     #$64
	jsr     tosmula0
	jsr     axlong
	jsr     tosaddeax
	ldy     #$18
	jsr     steaxspidx
;
; else if (t_ptr->subval == 2)
;
	jmp     L0065
L0703:	lda     (regbank+4),y
	cmp     #$02
	jne     L0705
;
; t_ptr->p1 = 5 * m_bonus(1, 25, level);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	lda     #$05
	jsr     pusha0
	jsr     decsp4
	lda     #$01
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     #$19
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$11
	lda     (sp),y
	jsr     _m_bonus
	jsr     tosumulax
	ldy     #$16
	jsr     staxspidx
;
; if (magik(cursed))
;
	lda     regbank+1
	jsr     _magik
	tax
	beq     L0406
;
; t_ptr->p1 = -t_ptr->p1;
;
	ldy     #$17
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	jsr     negax
	sta     (regbank+4),y
	iny
	txa
	sta     (regbank+4),y
;
; t_ptr->cost = -t_ptr->cost;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	lda     regbank+4
	ldx     regbank+4+1
	ldy     #$1B
	jsr     ldeaxidx
	jsr     negeax
	ldy     #$18
	jsr     steaxspidx
;
; t_ptr->flags |= TR_CURSED;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$00
	stx     sreg
	lda     #$80
	sta     sreg+1
	txa
	jsr     tosoreax
	ldy     #$10
;
; else
;
	jmp     L06F9
;
; t_ptr->cost += 50*t_ptr->p1;
;
L0406:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	jsr     pusheax
	lda     #$32
	jsr     pusha0
	ldy     #$17
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	jsr     tosmulax
	jsr     axlong
	jsr     tosaddeax
	ldy     #$18
	jsr     steaxspidx
;
; else if (t_ptr->subval == 8)
;
	jmp     L0065
L0705:	lda     (regbank+4),y
	cmp     #$08
	jne     L0065
;
; t_ptr->p1 = 5 * m_bonus(1, 25, level);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	lda     #$05
	jsr     pusha0
	jsr     decsp4
	lda     #$01
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     #$19
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$11
	lda     (sp),y
	jsr     _m_bonus
	jsr     tosumulax
	ldy     #$16
	jsr     staxspidx
;
; t_ptr->cost += 20*t_ptr->p1;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	jsr     pusheax
	lda     #$14
	jsr     pusha0
	ldy     #$17
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	jsr     tosmulax
	jsr     axlong
	jsr     tosaddeax
L0715:	ldy     #$18
L06F9:	jsr     steaxspidx
;
; break;
;
	jmp     L0065
;
; if ((t_ptr->subval % 2) == 1)
;
L041D:	ldy     #$1C
	lda     (regbank+4),y
	and     #$01
	cmp     #$01
	jne     L0065
;
; t_ptr->p1 = randint(t_ptr->p1);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$17
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	jsr     _randint
	ldy     #$16
	jsr     staxspidx
;
; t_ptr->subval -= 1;
;
	ldy     #$1C
	lda     (regbank+4),y
	sec
	sbc     #$01
;
; break;
;
	jmp     L0714
;
; switch(t_ptr->subval)
;
L0428:	ldy     #$1C
	lda     (regbank+4),y
;
; }
;
	jeq     L042D
	cmp     #$01
	jeq     L0433
	cmp     #$02
	jeq     L0439
	cmp     #$03
	jeq     L043F
	cmp     #$04
	jeq     L0445
	cmp     #$05
	jeq     L044B
	cmp     #$06
	jeq     L0451
	cmp     #$07
	jeq     L0457
	cmp     #$08
	jeq     L045D
	cmp     #$09
	jeq     L0463
	cmp     #$0A
	jeq     L0469
	cmp     #$0B
	jeq     L046F
	cmp     #$0C
	jeq     L0475
	cmp     #$0D
	jeq     L047B
	cmp     #$0E
	jeq     L0481
	cmp     #$0F
	jeq     L0487
	cmp     #$10
	jeq     L048D
	cmp     #$11
	jeq     L0493
	cmp     #$12
	jeq     L0499
	cmp     #$13
	jeq     L049F
	cmp     #$14
	jeq     L04A5
	cmp     #$15
	jeq     L04AB
	cmp     #$16
	jeq     L04B1
	cmp     #$17
	jeq     L04B7
	jmp     L0065
;
; case 0:   t_ptr->p1 = randint(10) +  6; break;
;
L042D:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$0A
	jsr     _randint
	clc
	adc     #$06
	bcc     L0431
	inx
L0431:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 1:   t_ptr->p1 = randint(8)  +  6; break;
;
L0433:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$08
	jsr     _randint
	clc
	adc     #$06
	bcc     L0437
	inx
L0437:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 2:   t_ptr->p1 = randint(5)  +  6; break;
;
L0439:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$05
	jsr     _randint
	clc
	adc     #$06
	bcc     L043D
	inx
L043D:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 3:   t_ptr->p1 = randint(8)  +  6; break;
;
L043F:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$08
	jsr     _randint
	clc
	adc     #$06
	bcc     L0443
	inx
L0443:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 4:   t_ptr->p1 = randint(4)  +  3; break;
;
L0445:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$04
	jsr     _randint
	clc
	adc     #$03
	bcc     L0449
	inx
L0449:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 5:   t_ptr->p1 = randint(8)  +  6; break;
;
L044B:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$08
	jsr     _randint
	clc
	adc     #$06
	bcc     L044F
	inx
L044F:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 6:   t_ptr->p1 = randint(20) +  12; break;
;
L0451:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$14
	jsr     _randint
	clc
	adc     #$0C
	bcc     L0455
	inx
L0455:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 7:   t_ptr->p1 = randint(20) +  12; break;
;
L0457:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$14
	jsr     _randint
	clc
	adc     #$0C
	bcc     L045B
	inx
L045B:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 8:   t_ptr->p1 = randint(10) +  6; break;
;
L045D:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$0A
	jsr     _randint
	clc
	adc     #$06
	bcc     L0461
	inx
L0461:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 9:   t_ptr->p1 = randint(12) +  6; break;
;
L0463:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$0C
	jsr     _randint
	clc
	adc     #$06
	bcc     L0467
	inx
L0467:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 10:  t_ptr->p1 = randint(10) +  12; break;
;
L0469:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$0A
	jsr     _randint
	clc
	adc     #$0C
	bcc     L046D
	inx
L046D:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 11:  t_ptr->p1 = randint(3)  +  3; break;
;
L046F:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$03
	jsr     _randint
	clc
	adc     #$03
	bcc     L0473
	inx
L0473:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 12:  t_ptr->p1 = randint(8)  +  6; break;
;
L0475:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$08
	jsr     _randint
	clc
	adc     #$06
	bcc     L0479
	inx
L0479:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 13:  t_ptr->p1 = randint(10) +  6; break;
;
L047B:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$0A
	jsr     _randint
	clc
	adc     #$06
	bcc     L047F
	inx
L047F:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 14:  t_ptr->p1 = randint(5)  +  3; break;
;
L0481:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$05
	jsr     _randint
	clc
	adc     #$03
	bcc     L0485
	inx
L0485:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 15:  t_ptr->p1 = randint(5)  +  3; break;
;
L0487:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$05
	jsr     _randint
	clc
	adc     #$03
	bcc     L048B
	inx
L048B:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 16:  t_ptr->p1 = randint(5)  +  6; break;
;
L048D:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$05
	jsr     _randint
	clc
	adc     #$06
	bcc     L0491
	inx
L0491:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 17:  t_ptr->p1 = randint(5)  +  4; break;
;
L0493:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$05
	jsr     _randint
	clc
	adc     #$04
	bcc     L0497
	inx
L0497:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 18:  t_ptr->p1 = randint(8)  +  4; break;
;
L0499:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$08
	jsr     _randint
	clc
	adc     #$04
	bcc     L049D
	inx
L049D:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 19:  t_ptr->p1 = randint(6)  +  2; break;
;
L049F:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$06
	jsr     _randint
	clc
	adc     #$02
	bcc     L04A3
	inx
L04A3:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 20:  t_ptr->p1 = randint(4)  +  2; break;
;
L04A5:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$04
	jsr     _randint
	clc
	adc     #$02
	bcc     L04A9
	inx
L04A9:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 21:  t_ptr->p1 = randint(8)  +  6; break;
;
L04AB:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$08
	jsr     _randint
	clc
	adc     #$06
	bcc     L04AF
	inx
L04AF:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 22:  t_ptr->p1 = randint(5)  +  2; break;
;
L04B1:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$05
	jsr     _randint
	clc
	adc     #$02
	bcc     L04B5
	inx
L04B5:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 23:  t_ptr->p1 = randint(12) + 12; break;
;
L04B7:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$0C
	jsr     _randint
	clc
	adc     #$0C
	bcc     L04BB
	inx
L04BB:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; switch(t_ptr->subval)
;
L04BE:	ldy     #$1C
	lda     (regbank+4),y
;
; }
;
	jeq     L04C3
	cmp     #$01
	jeq     L04C9
	cmp     #$02
	jeq     L04CF
	cmp     #$03
	jeq     L04D5
	cmp     #$04
	jeq     L04DB
	cmp     #$05
	jeq     L04E1
	cmp     #$06
	jeq     L04E7
	cmp     #$07
	jeq     L04ED
	cmp     #$08
	jeq     L04F5
	cmp     #$09
	jeq     L04FB
	cmp     #$0A
	jeq     L0501
	cmp     #$0B
	jeq     L0507
	cmp     #$0C
	jeq     L050D
	cmp     #$0D
	jeq     L0513
	cmp     #$0E
	jeq     L0519
	cmp     #$0F
	jeq     L051F
	cmp     #$10
	jeq     L0525
	cmp     #$11
	jeq     L052B
	cmp     #$12
	jeq     L0531
	cmp     #$13
	jeq     L0537
	cmp     #$14
	jeq     L053D
	cmp     #$15
	jeq     L0543
	cmp     #$16
	jeq     L0549
	jmp     L0065
;
; case 0:   t_ptr->p1 = randint(20) +  12; break;
;
L04C3:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$14
	jsr     _randint
	clc
	adc     #$0C
	bcc     L04C7
	inx
L04C7:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 1:   t_ptr->p1 = randint(8)  +  6; break;
;
L04C9:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$08
	jsr     _randint
	clc
	adc     #$06
	bcc     L04CD
	inx
L04CD:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 2:   t_ptr->p1 = randint(5)  +  6; break;
;
L04CF:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$05
	jsr     _randint
	clc
	adc     #$06
	bcc     L04D3
	inx
L04D3:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 3:   t_ptr->p1 = randint(20) +  12; break;
;
L04D5:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$14
	jsr     _randint
	clc
	adc     #$0C
	bcc     L04D9
	inx
L04D9:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 4:   t_ptr->p1 = randint(15) +  6; break;
;
L04DB:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$0F
	jsr     _randint
	clc
	adc     #$06
	bcc     L04DF
	inx
L04DF:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 5:   t_ptr->p1 = randint(4)  +  5; break;
;
L04E1:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$04
	jsr     _randint
	clc
	adc     #$05
	bcc     L04E5
	inx
L04E5:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 6:   t_ptr->p1 = randint(5)  +  3; break;
;
L04E7:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$05
	jsr     _randint
	clc
	adc     #$03
	bcc     L04EB
	inx
L04EB:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 7:   t_ptr->p1 = randint(3)  +  1;
;
L04ED:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$03
	jsr     _randint
	clc
	adc     #$01
	bcc     L04F1
	inx
L04F1:	ldy     #$16
	jsr     staxspidx
;
; t_ptr->level = 10;
;
	lda     #$0A
;
; break;
;
	jmp     L071A
;
; case 8:   t_ptr->p1 = randint(3)  +  1; break;
;
L04F5:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$03
	jsr     _randint
	clc
	adc     #$01
	bcc     L04F9
	inx
L04F9:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 9:   t_ptr->p1 = randint(5)  +  6; break;
;
L04FB:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$05
	jsr     _randint
	clc
	adc     #$06
	bcc     L04FF
	inx
L04FF:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 10:  t_ptr->p1 = randint(10) +  12; break;
;
L0501:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$0A
	jsr     _randint
	clc
	adc     #$0C
	bcc     L0505
	inx
L0505:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 11:  t_ptr->p1 = randint(5)  +  6; break;
;
L0507:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$05
	jsr     _randint
	clc
	adc     #$06
	bcc     L050B
	inx
L050B:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 12:  t_ptr->p1 = randint(5)  +  6; break;
;
L050D:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$05
	jsr     _randint
	clc
	adc     #$06
	bcc     L0511
	inx
L0511:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 13:  t_ptr->p1 = randint(5)  +  6; break;
;
L0513:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$05
	jsr     _randint
	clc
	adc     #$06
	bcc     L0517
	inx
L0517:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 14:  t_ptr->p1 = randint(10) +  12; break;
;
L0519:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$0A
	jsr     _randint
	clc
	adc     #$0C
	bcc     L051D
	inx
L051D:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 15:  t_ptr->p1 = randint(3)  +  4; break;
;
L051F:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$03
	jsr     _randint
	clc
	adc     #$04
	bcc     L0523
	inx
L0523:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 16:  t_ptr->p1 = randint(5)  +  6; break;
;
L0525:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$05
	jsr     _randint
	clc
	adc     #$06
	bcc     L0529
	inx
L0529:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 17:  t_ptr->p1 = randint(5)  +  6; break;
;
L052B:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$05
	jsr     _randint
	clc
	adc     #$06
	bcc     L052F
	inx
L052F:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 18:  t_ptr->p1 = randint(3)  +  4; break;
;
L0531:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$03
	jsr     _randint
	clc
	adc     #$04
	bcc     L0535
	inx
L0535:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 19:  t_ptr->p1 = randint(10) +  12; break;
;
L0537:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$0A
	jsr     _randint
	clc
	adc     #$0C
	bcc     L053B
	inx
L053B:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 20:  t_ptr->p1 = randint(3)  +  4; break;
;
L053D:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$03
	jsr     _randint
	clc
	adc     #$04
	bcc     L0541
	inx
L0541:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 21:  t_ptr->p1 = randint(3)  +  4; break;
;
L0543:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$03
	jsr     _randint
	clc
	adc     #$04
	bcc     L0547
	inx
L0547:	ldy     #$16
	jsr     staxspidx
	jmp     L0065
;
; case 22:  t_ptr->p1 = randint(10) + 6;
;
L0549:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$0A
	jsr     _randint
	clc
	adc     #$06
	bcc     L054D
	inx
L054D:	ldy     #$16
	jsr     staxspidx
;
; t_ptr->level = 5;
;
	lda     #$05
;
; break;
;
	jmp     L071A
;
; if (magik(chance))
;
L0552:	lda     regbank+3
	jsr     _magik
	tax
	jeq     L0553
;
; if (magik(special))
;
	lda     regbank+2
	jsr     _magik
	tax
	jeq     L0556
;
; if (randint(2) == 1)
;
	ldx     #$00
	lda     #$02
	jsr     _randint
	cpx     #$00
	bne     L0559
	cmp     #$01
	bne     L0559
;
; t_ptr->name2 = SN_PROTECTION;
;
	lda     #$27
	ldy     #$02
	sta     (regbank+4),y
;
; t_ptr->toac += m_bonus(2, 40, level);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$23
	jsr     ldaidx
	jsr     pushax
	jsr     decsp4
	lda     #$02
	tay
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     #$28
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$11
	lda     (sp),y
	jsr     _m_bonus
	jsr     tosaddax
	ldy     #$23
	jsr     staspidx
;
; t_ptr->cost += 250;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	ldy     #$FA
	jsr     inceaxy
	ldy     #$18
	jsr     steaxspidx
;
; else
;
	jmp     L0065
;
; t_ptr->toac += m_bonus(1, 20, level);
;
L0559:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$23
	jsr     ldaidx
	jsr     pushax
	jsr     decsp4
	lda     #$01
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     #$14
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$11
	lda     (sp),y
	jsr     _m_bonus
	jsr     tosaddax
	ldy     #$23
	jsr     staspidx
;
; t_ptr->ident |= ID_SHOW_P1;
;
	ldy     #$27
	lda     (regbank+4),y
	ora     #$80
	sta     (regbank+4),y
;
; t_ptr->p1 = randint(3);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	lda     #$03
	jsr     _randint
	ldy     #$16
	jsr     staxspidx
;
; t_ptr->flags |= TR_STEALTH;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$01
	lda     #$00
	jsr     tosor0ax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->name2 = SN_STEALTH;
;
	lda     #$14
	ldy     #$02
	sta     (regbank+4),y
;
; t_ptr->cost += 500;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$01
	lda     #$F4
	jsr     tosadd0ax
	ldy     #$18
;
; else
;
	jmp     L06FA
;
; t_ptr->toac += m_bonus(1, 20, level);
;
L0556:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$23
	jsr     ldaidx
	jsr     pushax
	jsr     decsp4
	lda     #$01
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     #$14
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$11
	lda     (sp),y
	jsr     _m_bonus
	jsr     tosaddax
	ldy     #$23
	jsr     staspidx
;
; else if (magik(cursed))
;
	jmp     L0065
L0553:	lda     regbank+1
	jsr     _magik
	tax
	jeq     L0065
;
; tmp = randint(3);
;
	ldx     #$00
	lda     #$03
	jsr     _randint
	jsr     stax0sp
;
; if (tmp == 1)
;
	cpx     #$00
	jne     L0584
	cmp     #$01
	jne     L0584
;
; t_ptr->flags |= TR_AGGRAVATE;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$02
	lda     #$00
	jsr     tosor0ax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->name2 = SN_IRRITATION;
;
	lda     #$28
	ldy     #$02
	sta     (regbank+4),y
;
; t_ptr->toac  -= m_bonus(1, 10, level);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$23
	jsr     ldaidx
	jsr     pushax
	jsr     decsp4
	lda     #$01
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     #$0A
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$11
	lda     (sp),y
	jsr     _m_bonus
	jsr     tossubax
	ldy     #$23
	jsr     staspidx
;
; t_ptr->ident |= ID_SHOW_HITDAM;
;
	ldy     #$27
	lda     (regbank+4),y
	ora     #$20
	sta     (regbank+4),y
;
; t_ptr->tohit -= m_bonus(1, 10, level);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$20
	jsr     ldaidx
	jsr     pushax
	jsr     decsp4
	lda     #$01
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     #$0A
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$11
	lda     (sp),y
	jsr     _m_bonus
	jsr     tossubax
	ldy     #$20
	jsr     staspidx
;
; t_ptr->todam -= m_bonus(1, 10, level);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$21
	jsr     ldaidx
	jsr     pushax
	jsr     decsp4
	lda     #$01
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     #$0A
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$11
	lda     (sp),y
;
; else if (tmp == 2)
;
	jmp     L0726
L0584:	ldy     #$01
	lda     (sp),y
	bne     L059F
	dey
	lda     (sp),y
	cmp     #$02
	bne     L059F
;
; t_ptr->name2 = SN_VULNERABILITY;
;
	lda     #$29
	ldy     #$02
	sta     (regbank+4),y
;
; t_ptr->toac -= m_bonus(10, 100, level+50);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$23
	jsr     ldaidx
	jsr     pushax
	jsr     decsp4
	lda     #$0A
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     #$64
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$11
	lda     (sp),y
	clc
	adc     #$32
	jsr     _m_bonus
	jsr     tossubax
	ldy     #$23
;
; else
;
	jmp     L0723
;
; t_ptr->name2 = SN_ENVELOPING;
;
L059F:	lda     #$2A
	ldy     #$02
	sta     (regbank+4),y
;
; t_ptr->toac  -= m_bonus(1, 10, level);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$23
	jsr     ldaidx
	jsr     pushax
	jsr     decsp4
	lda     #$01
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     #$0A
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$11
	lda     (sp),y
	jsr     _m_bonus
	jsr     tossubax
	ldy     #$23
	jsr     staspidx
;
; t_ptr->ident |= ID_SHOW_HITDAM;
;
	ldy     #$27
	lda     (regbank+4),y
	ora     #$20
	sta     (regbank+4),y
;
; t_ptr->tohit -= m_bonus(2, 40, level+10);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$20
	jsr     ldaidx
	jsr     pushax
	jsr     decsp4
	lda     #$02
	tay
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     #$28
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$11
	lda     (sp),y
	clc
	adc     #$0A
	jsr     _m_bonus
	jsr     tossubax
	ldy     #$20
	jsr     staspidx
;
; t_ptr->todam -= m_bonus(2, 40, level+10);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$21
	jsr     ldaidx
	jsr     pushax
	jsr     decsp4
	lda     #$02
	tay
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     #$28
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$11
	lda     (sp),y
	clc
	adc     #$0A
L0726:	jsr     _m_bonus
	jsr     tossubax
	ldy     #$21
L0723:	jsr     staspidx
;
; t_ptr->cost = 0;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	ldy     #$18
	jsr     steaxspidx
;
; t_ptr->flags |= TR_CURSED;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$00
	stx     sreg
	lda     #$80
	sta     sreg+1
	txa
	jsr     tosoreax
	ldy     #$10
L06FA:	jsr     steaxspidx
;
; break;
;
	jmp     L0065
;
; switch(randint(level+4))
;
L05C7:	ldy     #$09
	lda     (sp),y
	clc
	adc     #$04
	bcc     L05CA
	inx
L05CA:	jsr     _randint
;
; }
;
	cpx     #$00
	jne     L0615
	cmp     #$01
	beq     L05CE
	cmp     #$02
	jeq     L05D4
	cmp     #$03
	jeq     L05DA
	cmp     #$04
	jeq     L05DA
	cmp     #$05
	jeq     L05E3
	cmp     #$06
	jeq     L05E3
	cmp     #$07
	jeq     L05EC
	cmp     #$08
	jeq     L05EC
	cmp     #$09
	jeq     L05EC
	cmp     #$0A
	jeq     L05F7
	cmp     #$0B
	jeq     L05F7
	cmp     #$0C
	jeq     L0600
	cmp     #$0D
	jeq     L0600
	cmp     #$0E
	jeq     L0600
	cmp     #$0F
	jeq     L060B
	cmp     #$10
	jeq     L060B
	cmp     #$11
	jeq     L060B
	jmp     L0615
;
; t_ptr->flags = 0;
;
L05CE:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->name2 = SN_EMPTY;
;
	lda     #$2E
	ldy     #$02
;
; break;
;
	jmp     L0714
;
; t_ptr->flags |= CH_LOCKED;
;
L05D4:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	ora     #$01
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->name2 = SN_LOCKED;
;
	lda     #$2F
	ldy     #$02
;
; break;
;
	jmp     L0714
;
; t_ptr->flags |= (CH_LOSE_STR|CH_LOCKED);
;
L05DA:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	ora     #$11
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->name2 = SN_POISON_NEEDLE;
;
	lda     #$30
	ldy     #$02
;
; break;
;
	jmp     L0714
;
; t_ptr->flags |= (CH_POISON|CH_LOCKED);
;
L05E3:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	ora     #$21
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->name2 = SN_POISON_NEEDLE;
;
	lda     #$30
	ldy     #$02
;
; break;
;
	jmp     L0714
;
; t_ptr->flags |= (CH_PARALYSED|CH_LOCKED);
;
L05EC:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	ora     #$41
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->name2 = SN_GAS_TRAP;
;
	lda     #$31
	ldy     #$02
;
; break;
;
	jmp     L0714
;
; t_ptr->flags |= (CH_EXPLODE|CH_LOCKED);
;
L05F7:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	ora     #$81
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->name2 = SN_EXPLOSION_DEVICE;
;
	lda     #$32
	ldy     #$02
;
; break;
;
	jmp     L0714
;
; t_ptr->flags |= (CH_SUMMON|CH_LOCKED);
;
L0600:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$01
	txa
	jsr     tosor0ax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->name2 = SN_SUMMONING_RUNES;
;
	lda     #$33
	ldy     #$02
;
; break;
;
	jmp     L0714
;
; t_ptr->flags |= (CH_PARALYSED|CH_POISON|CH_LOSE_STR|CH_LOCKED);
;
L060B:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	ora     #$71
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->name2 = SN_MULTIPLE_TRAPS;
;
	lda     #$34
	ldy     #$02
;
; break;
;
	jmp     L0714
;
; t_ptr->flags |= (CH_SUMMON|CH_EXPLODE|CH_LOCKED);
;
L0615:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$01
	lda     #$81
	jsr     tosor0ax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->name2 = SN_MULTIPLE_TRAPS;
;
	lda     #$34
	ldy     #$02
;
; break;
;
	jmp     L0714
;
; if (t_ptr->tval == TV_SLING_AMMO || t_ptr->tval == TV_BOLT || t_ptr->tval == TV_ARROW)
;
L0707:	lda     (regbank+4),y
	cmp     #$0A
	beq     L0708
	lda     (regbank+4),y
	cmp     #$0B
	beq     L0708
	lda     (regbank+4),y
	cmp     #$0C
	jne     L0681
;
; t_ptr->ident |= ID_SHOW_HITDAM;
;
L0708:	ldy     #$27
	lda     (regbank+4),y
	ora     #$20
	sta     (regbank+4),y
;
; if (magik(chance))
;
	lda     regbank+3
	jsr     _magik
	tax
	jeq     L0628
;
; t_ptr->tohit += m_bonus(1, 35, level);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$20
	jsr     ldaidx
	jsr     pushax
	jsr     decsp4
	lda     #$01
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     #$23
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$11
	lda     (sp),y
	jsr     _m_bonus
	jsr     tosaddax
	ldy     #$20
	jsr     staspidx
;
; t_ptr->todam += m_bonus(1, 35, level);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$21
	jsr     ldaidx
	jsr     pushax
	jsr     decsp4
	lda     #$01
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     #$23
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$11
	lda     (sp),y
	jsr     _m_bonus
	jsr     tosaddax
	ldy     #$21
	jsr     staspidx
;
; if (magik(3*special/2))
;
	lda     #$03
	jsr     pusha0
	lda     regbank+2
	jsr     tosumula0
	jsr     shrax1
	jsr     _magik
	tax
	jeq     L0719
;
; switch(randint(10))
;
	ldx     #$00
	lda     #$0A
	jsr     _randint
;
; }
;
	cpx     #$00
	jne     L0681
	cmp     #$01
	beq     L063D
	cmp     #$02
	beq     L063D
	cmp     #$03
	beq     L063D
	cmp     #$04
	beq     L064B
	cmp     #$05
	beq     L064B
	cmp     #$06
	jeq     L0659
	cmp     #$07
	jeq     L0659
	cmp     #$08
	jeq     L0667
	cmp     #$09
	jeq     L0667
	cmp     #$0A
	jeq     L0675
	jmp     L0681
;
; t_ptr->name2 = SN_SLAYING;
;
L063D:	lda     #$0F
	ldy     #$02
	sta     (regbank+4),y
;
; t_ptr->tohit += 5;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$20
	jsr     ldaidx
	clc
	adc     #$05
	jsr     staspidx
;
; t_ptr->todam += 5;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$21
	jsr     ldaidx
	clc
	adc     #$05
	jsr     staspidx
;
; t_ptr->cost += 20;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	ldy     #$14
	jsr     inceaxy
;
; break;
;
	jmp     L0717
;
; t_ptr->flags |= TR_FLAME_TONGUE;
;
L064B:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$00
	stx     sreg+1
	lda     #$04
	sta     sreg
	txa
	jsr     tosoreax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->tohit += 2;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$20
	jsr     ldaidx
	clc
	adc     #$02
	jsr     staspidx
;
; t_ptr->todam += 4;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$21
	jsr     ldaidx
	clc
	adc     #$04
	jsr     staspidx
;
; t_ptr->name2 = SN_FIRE;
;
	lda     #$2B
	ldy     #$02
	sta     (regbank+4),y
;
; t_ptr->cost += 25;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	ldy     #$19
	jsr     inceaxy
;
; break;
;
	jmp     L0717
;
; t_ptr->flags |= TR_SLAY_EVIL;
;
L0659:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$80
	lda     #$00
	jsr     tosor0ax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->tohit += 3;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$20
	jsr     ldaidx
	clc
	adc     #$03
	jsr     staspidx
;
; t_ptr->todam += 3;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$21
	jsr     ldaidx
	clc
	adc     #$03
	jsr     staspidx
;
; t_ptr->name2 = SN_SLAY_EVIL;
;
	lda     #$2C
	ldy     #$02
	sta     (regbank+4),y
;
; t_ptr->cost += 25;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	ldy     #$19
	jsr     inceaxy
;
; break;
;
	jmp     L0717
;
; t_ptr->flags |= TR_SLAY_ANIMAL;
;
L0667:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$40
	lda     #$00
	jsr     tosor0ax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->tohit += 2;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$20
	jsr     ldaidx
	clc
	adc     #$02
	jsr     staspidx
;
; t_ptr->todam += 2;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$21
	jsr     ldaidx
	clc
	adc     #$02
	jsr     staspidx
;
; t_ptr->name2 = SN_SLAY_ANIMAL;
;
	lda     #$37
	ldy     #$02
	sta     (regbank+4),y
;
; t_ptr->cost += 30;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	ldy     #$1E
	jsr     inceaxy
;
; break;
;
	jmp     L0717
;
; t_ptr->flags |= TR_SLAY_DRAGON;
;
L0675:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$20
	lda     #$00
	jsr     tosor0ax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->tohit += 3;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$20
	jsr     ldaidx
	clc
	adc     #$03
	jsr     staspidx
;
; t_ptr->todam += 3;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$21
	jsr     ldaidx
	clc
	adc     #$03
	jsr     staspidx
;
; t_ptr->name2 = SN_DRAGON_SLAYING;
;
	lda     #$2D
	ldy     #$02
	sta     (regbank+4),y
;
; t_ptr->cost += 35;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1B
	jsr     ldeaxidx
	ldy     #$23
	jsr     inceaxy
;
; break;
;
	jmp     L0717
;
; else if (magik(cursed))
;
L0628:	lda     regbank+1
	jsr     _magik
	tax
	jeq     L0719
;
; t_ptr->tohit -= m_bonus(5, 55, level);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$20
	jsr     ldaidx
	jsr     pushax
	jsr     decsp4
	lda     #$05
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     #$37
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$11
	lda     (sp),y
	jsr     _m_bonus
	jsr     tossubax
	ldy     #$20
	jsr     staspidx
;
; t_ptr->todam -= m_bonus(5, 55, level);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$21
	jsr     ldaidx
	jsr     pushax
	jsr     decsp4
	lda     #$05
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     #$37
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$11
	lda     (sp),y
	jsr     _m_bonus
	jsr     tossubax
	ldy     #$21
	jsr     staspidx
;
; t_ptr->flags |= TR_CURSED;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	ldx     #$00
	stx     sreg
	lda     #$80
	sta     sreg+1
	txa
	jsr     tosoreax
	ldy     #$10
	jsr     steaxspidx
;
; t_ptr->cost = 0;
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
L0717:	ldy     #$18
	jsr     steaxspidx
;
; t_ptr->number = 0;
;
L0681:	lda     #$00
L0719:	ldy     #$1D
	sta     (regbank+4),y
;
; for (i = 0; i < 7; ++i)
;
	ldy     #$02
	sta     (sp),y
	iny
	sta     (sp),y
L0694:	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	cmp     #$07
	txa
	sbc     #$00
	bvc     L069B
	eor     #$80
L069B:	bpl     L0695
;
; t_ptr->number += randint(6);
;
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$1D
	lda     (regbank+4),y
	jsr     pusha0
	lda     #$06
	jsr     _randint
	jsr     tosaddax
	ldy     #$1D
	jsr     staspidx
;
; for (i = 0; i < 7; ++i)
;
	ldy     #$02
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	jmp     L0694
;
; if (missile_ctr == MAX_SHORT)
;
L0695:	lda     _missile_ctr+1
	cmp     #$7F
	bne     L06A0
	lda     _missile_ctr
	cmp     #$FF
	bne     L06A0
;
; missile_ctr = -MAX_SHORT - 1;      // FIXME: missile_ctr negative?
;
	ldx     #$80
	lda     #$00
	sta     _missile_ctr
	stx     _missile_ctr+1
;
; else
;
	jmp     L06A5
;
; ++missile_ctr;
;
L06A0:	inc     _missile_ctr
	bne     L06A5
	inc     _missile_ctr+1
;
; t_ptr->p1 = missile_ctr;
;
L06A5:	lda     _missile_ctr
	ldy     #$16
	sta     (regbank+4),y
	iny
	lda     _missile_ctr+1
;
; break;
;
	jmp     L0714
;
; if (t_ptr->subval == 90)
;
L06AB:	ldy     #$1C
	lda     (regbank+4),y
	cmp     #$5A
;
; else if (t_ptr->subval == 92)
;
	beq     L071D
	lda     (regbank+4),y
	cmp     #$5C
	bne     L0065
;
; t_ptr->level = 6;
;
	lda     #$06
;
; break;
;
	jmp     L071A
;
; if (t_ptr->subval == 67)
;
L06B6:	ldy     #$1C
	lda     (regbank+4),y
	cmp     #$43
	bne     L070C
;
; t_ptr->level = 1;
;
	lda     #$01
;
; else if (t_ptr->subval == 69)
;
	jmp     L071A
L070C:	lda     (regbank+4),y
	cmp     #$45
;
; else if (t_ptr->subval == 80)
;
	beq     L071D
	lda     (regbank+4),y
	cmp     #$50
	bne     L0710
;
; t_ptr->level = 5;
;
	lda     #$05
;
; else if (t_ptr->subval == 81)
;
	jmp     L071A
L0710:	lda     (regbank+4),y
	cmp     #$51
	bne     L0065
;
; t_ptr->level = 5;
;
	lda     #$05
;
; break;
;
	jmp     L071A
;
; if (t_ptr->subval == 76)
;
L06CB:	ldy     #$1C
	lda     (regbank+4),y
	cmp     #$4C
	bne     L0065
;
; t_ptr->level = 0;
;
L071D:	txa
L071A:	ldy     #$26
L0714:	sta     (regbank+4),y
;
; }
;
L0065:	ldy     #$08
	ldx     #$04
L06D1:	lda     (sp),y
	sta     regbank+1,x
	dey
	dex
	bpl     L06D1
	ldy     #$0B
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ __fastcall__ magik (unsigned char)
; ---------------------------------------------------------------

.segment	"MAGICTBANK"

.proc	_magik: near

.segment	"MAGICTBANK"

;
; {
;
	jsr     pusha
;
; if (randint(100) <= chance)
;
	ldx     #$00
	lda     #$64
	jsr     _randint
	sec
	ldy     #$00
	sbc     (sp),y
	sta     tmp1
	txa
	sbc     #$00
	ora     tmp1
	beq     L0727
	bcs     L06EC
;
; return(TRUE);
;
L0727:	ldx     #$00
	lda     #$01
	jmp     incsp1
;
; return(FALSE);
;
L06EC:	ldx     #$00
	txa
;
; }
;
	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ __fastcall__ m_bonus (unsigned int, unsigned int, unsigned char)
; ---------------------------------------------------------------

.segment	"MAGICTBANK"

.proc	_m_bonus: near

.segment	"MAGICTBANK"

;
; {
;
	jsr     pusha
;
; register int16u x, stand_dev, tmp;
;
	lda     regbank+4
	ldx     regbank+5
	jsr     pushax
	lda     regbank+2
	ldx     regbank+3
	jsr     pushax
	lda     regbank+0
	ldx     regbank+1
	jsr     pushax
;
; stand_dev = (OBJ_STD_ADJ * level / 100) + OBJ_STD_MIN;
;
	lda     #$7D
	jsr     pusha0
	ldy     #$08
	lda     (sp),y
	jsr     tosumula0
	jsr     pushax
	lda     #$64
	jsr     tosudiva0
	clc
	adc     #$07
	bcc     L06D6
	inx
L06D6:	sta     regbank+2
	stx     regbank+2+1
;
; if (stand_dev > max_std || level > max_std)
;
	sec
	ldy     #$07
	sbc     (sp),y
	sta     tmp1
	txa
	iny
	sbc     (sp),y
	ora     tmp1
	beq     L0728
	bcs     L072C
L0728:	ldy     #$06
	ldx     #$00
	lda     (sp),y
	sec
	iny
	sbc     (sp),y
	sta     tmp1
	txa
	iny
	sbc     (sp),y
	ora     tmp1
	beq     L072E
	bcc     L072E
;
; stand_dev = max_std;
;
L072C:	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     regbank+2
	stx     regbank+2+1
;
; tmp = create1_randnor(0, stand_dev);  // FIXME: bank in randnor function, or copy it!
;
L072E:	jsr     push0
	lda     regbank+2
	ldx     regbank+2+1
	jsr     _create1_randnor
	sta     regbank+0
	stx     regbank+0+1
;
; x = (tmp / 10) + base;         // FIXME: don't need abs, as can't return a negative number
;
	jsr     pushax
	lda     #$0A
	jsr     tosudiva0
	sta     ptr1
	stx     ptr1+1
	ldy     #$0A
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	clc
	adc     ptr1
	pha
	txa
	adc     ptr1+1
	tax
	pla
	sta     regbank+4
	stx     regbank+4+1
;
; if (x < base)
;
	ldy     #$09
	cmp     (sp),y
	txa
	iny
	sbc     (sp),y
	bcs     L06E3
;
; return(base);
;
	dey
	ldx     #$00
	lda     (sp),y
	jmp     L06E7
;
; return(x);
;
L06E3:	ldx     #$00
	lda     regbank+4
;
; }
;
L06E7:	pha
	ldy     #$00
L06EA:	lda     (sp),y
	sta     regbank+0,y
	iny
	cpy     #$06
	bne     L06EA
	pla
	ldy     #$0B
	jmp     addysp

.endproc

